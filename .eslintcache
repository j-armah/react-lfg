[{"/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/App.js":"1","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/Login.js":"2","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/GamePage.js":"3","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/UserCard.js":"4","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/index.js":"5","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/Nav.js":"6","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/AddGame.js":"7","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/GameCard.js":"8","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/UserShow.js":"9","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/UserGameDetail.js":"10","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/PlaySessionForm.js":"11","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/ReviewForm.js":"12","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/EditUserInfo.js":"13","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/EditUserGameDetail.js":"14","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/theme.js":"15"},{"size":3739,"mtime":1612497242071,"results":"16","hashOfConfig":"17"},{"size":2760,"mtime":1612488969275,"results":"18","hashOfConfig":"17"},{"size":1557,"mtime":1612392700665,"results":"19","hashOfConfig":"17"},{"size":434,"mtime":1612315414165,"results":"20","hashOfConfig":"17"},{"size":730,"mtime":1612495123618,"results":"21","hashOfConfig":"17"},{"size":1665,"mtime":1612496093121,"results":"22","hashOfConfig":"17"},{"size":423,"mtime":1612497298177,"results":"23","hashOfConfig":"17"},{"size":1085,"mtime":1612499022479,"results":"24","hashOfConfig":"17"},{"size":8027,"mtime":1612490981403,"results":"25","hashOfConfig":"17"},{"size":3572,"mtime":1612482162810,"results":"26","hashOfConfig":"17"},{"size":1695,"mtime":1612396778426,"results":"27","hashOfConfig":"17"},{"size":1752,"mtime":1612453261380,"results":"28","hashOfConfig":"17"},{"size":2622,"mtime":1612474580648,"results":"29","hashOfConfig":"17"},{"size":2478,"mtime":1612477493951,"results":"30","hashOfConfig":"17"},{"size":241,"mtime":1612494926233,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},"18f01r6",{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"35"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"35"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"35"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"35"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"35"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"35"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"35"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"35"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"35"},"/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/App.js",["73"],"import React, { useEffect, useState } from 'react'\nimport { Route, Switch, useHistory, useLocation } from 'react-router-dom'\nimport Nav from './Nav'\nimport UserShow from './UserShow'\nimport GamePage from './GamePage'\nimport Login from './Login'\nimport AddGame from './AddGame'\nimport UserGameDetail from './UserGameDetail'\nimport { Grid } from '@material-ui/core'\n\n \nfunction App() {\n  // const [users, setUsers] = useState([])\n  const [isLoaded, setIsLoaded] = useState(false)\n  const [games, setGames] = useState([])\n  const [currentUser, setCurrentUser] = useState(null)\n  const [userGames, setUserGames] = useState([])\n  const history = useHistory()\n  const location = useLocation()\n\n  function addUserGame(game) {\n    console.log(game)\n    const newUserGameObj = {\n      user_id: currentUser.id,\n      game_id: parseInt(game.id),\n      details: \"\"\n    } \n\n    fetch(`${process.env.REACT_APP_API_BASE_URL}/user_games`, {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newUserGameObj)\n    })\n    .then(resp => resp.json())\n    .then(newObj => {\n      setUserGames([...userGames, newObj])\n    })\n  }\n\n  function handleLogin(user) {\n    console.log(user)\n    setCurrentUser(user)\n    history.push(\"/games\")\n  }\n\n  function handleLogout() {\n    setCurrentUser(null)\n    localStorage.removeItem(\"token\")\n    history.push(\"/\")\n  }\n\n  // Auth to keep user logged in after refresh\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      fetch(`${process.env.REACT_APP_API_BASE_URL}/profile`, {\n        method: \"GET\",\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      })\n        .then((r) => r.json())\n        .then((user) => {\n          // console.log(user)\n          setCurrentUser(user);\n          setIsLoaded(true)\n        });\n    }\n  }, []);\n\n  useEffect(() => {\n    fetch(`${process.env.REACT_APP_API_BASE_URL}/games`)\n      .then(resp => resp.json())\n      .then(data => {\n        // console.log(data)\n        setGames(data)\n\n\n      })\n  }, [])\n\n  // useEffect(() => {\n  //   fetch(`${process.env.REACT_APP_API_BASE_URL}/users`)\n  //     .then(resp => resp.json())\n  //     .then(data => {\n  //       // console.log(data)\n  //       setUsers(data)\n  //     })\n  // }, [])\n\n  useEffect(() => {\n    fetch(`${process.env.REACT_APP_API_BASE_URL}/user_games`)\n      .then(resp => resp.json())\n      .then(data => {\n        setUserGames(data)\n      })\n  }, [])\n\n\n  console.log(currentUser)\n  // console.log(localStorage.getItem(\"token\"))\n  if (!isLoaded) return <h1>Loading</h1>\n  return (\n    <Grid className=\"app\" container direction=\"column\">\n      <Grid item>\n        <Route>\n          <Nav currentUser={currentUser} handleLogout={handleLogout} />\n        </Route>\n      </Grid>\n      \n      <Switch>\n        <Grid item container>\n          <Grid item xs={false} sm={1} />\n            <Grid item xs={12} sm={10}>\n              <Route exact path=\"/users/:id\">\n                <UserShow currentUser={currentUser} /> \n              </Route>\n              <Route exact path=\"/games/:id\">\n                  <GamePage />\n              </Route>\n              <Route exact path=\"/games\">\n                <AddGame games={games} newUserGame={addUserGame}/>\n              </Route>\n              <Route exact path=\"/user_games/:id\">\n                <UserGameDetail currentUser={currentUser}/>\n              </Route>\n              <Route exact path=\"/\">\n                <Login setCurrentUser={setCurrentUser} firstGame={games[0]} handleLogin={handleLogin}/>\n              </Route>\n            </Grid>\n          <Grid item xs={false} sm={1} />\n        </Grid>\n      </Switch>\n    </Grid>\n  );\n}\n\nexport default App;\n",["74","75"],"/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/Login.js",["76"],"import React, { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { Button } from '@material-ui/core'\n\nfunction Login({ setCurrentUser, firstGame, handleLogin }) {\n    const [username, setUsername] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [errors, setErrors] = useState(\"\")\n    const history = useHistory()\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        const formData = { username, password };\n        //console.log(formData)\n    \n        fetch(`${process.env.REACT_APP_API_BASE_URL}/login`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(formData),\n        })\n          .then((r) => r.json())\n          .then((data) => {\n            // then set that user in state in our App component\n            console.log(data.user)\n            if (data.user) {\n              handleLogin(data.user)\n              localStorage.setItem(\"token\", data.token)\n            } else {\n              console.log(data)\n              setErrors(data.error)\n              // alert('Incorret username or password')\n            }\n          });\n    }\n\n    function login() {\n        fetch(`${process.env.REACT_APP_API_BASE_URL}/`, {\n            method: \"POST\",\n            })\n        .then((r) => r.json())\n        .then(data => {\n            setCurrentUser(data)\n            history.push(`/games/${firstGame.id}`)\n        });\n    }\n\n    console.log(username)\n\n    return (\n        <div className=\"login\">\n            <video autoPlay muted loop>\n                <source src=\"/Atlias.mp4\" type=\"video/mp4\"/>\n            </video>\n            <div className=\"login-form-box\">\n                <form className=\"login-form\" onSubmit={handleSubmit}>\n                    <h3>Welcome to LFG</h3>\n                    <label htmlFor=\"username\">Username</label>\n                    <input\n                    type=\"text\"\n                    id=\"username\"\n                    autoComplete=\"off\"\n                    value={username}\n                    onChange={(e) => setUsername(e.target.value)}\n                    />\n                    <label htmlFor=\"password\">Password</label>\n                    <input\n                    type=\"password\"\n                    id=\"password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                    autoComplete=\"current-password\"\n                    />\n                    <Button type=\"submit\" className='submit-button'>Login</Button>\n                </form>\n                <Button> Login </Button>\n                <button onClick={login}>Login</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Login\n","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/GamePage.js",["77"],"import React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport UserCard from './UserCard'\n\nfunction GamePage() {\n    const [isLoaded, setIsLoaded] = useState(false)\n    const [game, setGame] = useState(null)\n    const [userGames, setUserGames] = useState([])\n    const params = useParams()\n\n    useEffect(() => {\n        fetch(`${process.env.REACT_APP_API_BASE_URL}/games/${params.id}`)\n            .then(resp => resp.json())\n            .then(data => {\n                //console.log(data)\n                setGame(data)\n                setIsLoaded(true)\n            })\n    }, [params.id])\n\n    useEffect(() => {\n        fetch(`${process.env.REACT_APP_API_BASE_URL}/user_games/`)\n            .then(resp => resp.json())\n            .then(data => {\n                console.log(data)\n                const filteredUserGames = data.filter(ug => ug.game_id === parseInt(params.id))\n                setUserGames(filteredUserGames)\n                \n            })\n    }, [])\n\n    console.log(userGames)\n\n    if (!isLoaded) return <h2>Loading...</h2>\n    \n    return (\n        <div className=\"game-page\">\n            <div className=\"game-splash\">\n                {game.name}\n                <img src={game.splash} alt={game.name} />\n            </div>\n            <div className=\"users-library\">\n                {userGames.map(userGame => \n                    <UserCard key={userGame.id} user={userGame.user} userGameId={userGame.id}/>    \n                )}\n            </div>\n        </div>\n    )\n}\n\nexport default GamePage\n","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/UserCard.js",["78","79"],"import React from 'react'\nimport { Link } from 'react-router-dom'\n\nfunction UserCard({ user, userGameId }) {\n    const {id, avatar, username, name} = user\n    return (\n        <div className=\"card\">\n            <Link to={`/user_games/${userGameId}`}>\n                <img className=\"avatar\" src={avatar} alt={username} />\n            </Link>\n            \n            <p> {username}</p>\n        </div>\n    )\n}\n\nexport default UserCard\n","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/index.js",[],"/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/Nav.js",["80"],"import React from 'react'\nimport { useLocation, NavLink } from 'react-router-dom'\nimport { Button, AppBar, Toolbar, Typography } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/styles'\n\nconst useStyles = makeStyles(() => ({\n    typographyStyles: {\n        flex: 1\n    }\n}))\n\nfunction Nav({ currentUser, handleLogout}) {\n\n    const location = useLocation()\n    if (location.pathname === \"/\") return null\n    return (\n        <AppBar className=\"nav\" position=\"static\">\n            <Toolbar>  \n                <Typography component={'div'} className=\"nav-games\">\n                    <NavLink to={\"/games\"}>\n                        Games\n                    </NavLink>\n                </Typography>              \n                <Typography component={'div'} className=\"user-nav-div\">\n                    {!currentUser ?\n                        <div>\n                            <NavLink exact to={\"/\"}>\n                                Login\n                            </NavLink>\n                        </div> \n                        :\n                        <div className=\"logged-in\">\n                            <div className='welcome-div'>\n                                <NavLink exact to={`/users/${currentUser.id}`} className=\"nav-button\">\n                                    Welcome, {currentUser.username}!\n                                </NavLink>\n                                <Button color=\"secondary\" className=\"nav-button\" onClick={handleLogout}>Logout</Button>\n                            </div>\n                        </div>} \n                </Typography>\n            </Toolbar>\n        </AppBar>\n    )\n}\n\nexport default Nav\n","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/AddGame.js",[],"/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/GameCard.js",["81","82","83","84","85"],"import React from 'react'\nimport { Link } from 'react-router-dom'\nimport Card from '@material-ui/core/Card'\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport { makeStyles } from '@material-ui/styles'\nimport {Typography, Button, Grid} from '@material-ui/core';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardActionArea from '@material-ui/core/CardActionArea';\n\nfunction GameCard({ game, newUserGame }) {\n    const {id, name, genre, image} =  game\n\n    function handleClick() {\n        newUserGame(game)\n    }\n\n    return (\n        <Grid item xs={3}>\n            <Card className=\"card\">\n            <CardActionArea>\n                <Link to={`/games/${id}`}>\n                    <CardMedia style={{height: \"200px\"}} image={image} title={name}>\n                        <Button onClick={handleClick} className=\"add-game-btn\"> Add Game </Button>\n                    </CardMedia>\n                </Link>\n            </CardActionArea>\n            </Card>\n        </Grid>\n    )\n}\n\nexport default GameCard\n","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/UserShow.js",["86"],"import React, { useState, useEffect } from 'react'\nimport { useParams } from 'react-router-dom'\nimport EditUserInfo from './EditUserInfo'\nimport ReviewForm from './ReviewForm'\n\n\nfunction UserShow({ currentUser }) {\n    const [isLoaded, setIsLoaded] = useState(false)\n    const [user, setUser] = useState(null)\n    const [playSessions, setPlaySessions] = useState([])\n\n    const params = useParams()\n\n    console.log(currentUser)\n\n    function handleAccept(id) {\n        console.log(id)\n        fetch(`${process.env.REACT_APP_API_BASE_URL}/play_sessions/${id}`, {\n            method: 'PATCH',\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                is_accepted: true\n            })\n        })\n        .then(resp => resp.json())\n        .then(updObj => {\n            const updatedPSessions = playSessions.map(session => {\n                if (session.id === updObj.id) {\n                    return {...session, is_accepted: updObj.is_accepted}\n                } else {\n                    return session\n                }\n            })\n            setPlaySessions(updatedPSessions)\n        })\n    }\n\n    function handleReject(id) {\n        console.log(\"rejected\")\n        console.log(id)\n        fetch(`${process.env.REACT_APP_API_BASE_URL}/play_sessions/${id}`, {\n            method: 'PATCH',\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                rejected: true\n            })\n        })\n        .then(resp => resp.json())\n        .then(updObj => {\n            console.log(updObj)\n            const updatedPSessions = playSessions.map(session => {\n                if (session.id === updObj.id) {\n                    return {...session, rejected: updObj.rejected}\n                } else {\n                    return session\n                }\n            })\n            setPlaySessions(updatedPSessions)\n        })\n    }\n\n    useEffect(() => {\n        fetch(`${process.env.REACT_APP_API_BASE_URL}/users/${params.id}`)\n            .then(resp => resp.json())\n            .then(data => {\n                console.log(data)\n                setUser(data)\n                setIsLoaded(true)\n            })\n    }, [params.id])\n\n    useEffect(() => {\n        fetch(`${process.env.REACT_APP_API_BASE_URL}/play_sessions/`)\n            .then(resp => resp.json())\n            .then(data => {\n                console.log(data)\n                const filteredSessions = data.filter(session => {\n                    return session.sender_id === currentUser.id || session.receiver_id === currentUser.id \n                })\n                setPlaySessions(filteredSessions)\n                // setIsLoaded(true)\n            })\n    }, [])\n\n    // console.log(user)\n\n    if (!isLoaded) return <h2>Loading...</h2>\n    \n    return (\n        <div className=\"user-show\">\n            <div className=\"user-info\">\n                <img className=\"avatar-pfp\" src={user.avatar} alt={user.username}/>\n                <p>\n                    {user.username}<br/>\n                    {user.bio}<br/>\n                    {user.discord}\n                </p>\n\n                {currentUser.id !== parseInt(params.id) ? null :\n                <div className=\"edit-user-info\">\n                    <EditUserInfo user={currentUser} setUser={setUser}/>\n                </div>}\n            </div>\n            <div className=\"user-games-played\">\n                <h3>Games I play</h3>\n                {user.games.map(game => <li key={game.id}>{game.name}</li>)}\n            </div>\n    {/* Request Area */}\n\n            {currentUser.id !== parseInt(params.id) ? null : \n            <div className=\"request-feed\">\n                <h2>Request Feed</h2>\n                <div className=\"sent-pending\">\n                <h4> Sent </h4>\n                    {playSessions.filter(session => {\n                        return session.sender_id === currentUser.id && session.is_accepted === false && session.rejected === false\n                    }).map(session => {\n                        return <div key={session.id}>\n                            {session.receiver.username} - {session.time} - {session.is_accepted ? \"Accepted\" : \"Pending\"}\n                            </div>\n                    })\n                    }\n                </div>\n                <div className=\"received-pending\">\n                <h4> Recieved </h4>\n                    {playSessions.filter(session => {\n                        return session.receiver_id === currentUser.id && session.is_accepted === false && session.rejected === false\n                    }).map(session => {\n                        return <div key={session.id}>\n                            {session.sender.username} requested to play {session.game.name} - {session.time} - {session.is_accepted ? \"Accepted\" : \"Recieved request\"}\n                            <button onClick={() => handleAccept(session.id)}> Accept Request </button>\n                            <button onClick={() => handleReject(session.id)}> Reject Request </button>\n                            </div>\n                    })\n                    }\n                </div>\n                <div className=\"actioned-request-div\">\n                    <h4> Accepted Request</h4>\n                    <div className=\"accepted-sent\">\n                        {playSessions.filter(session => {\n                            return session.sender_id === currentUser.id && session.is_accepted === true\n                        }).map(session => {\n                            return <div key={session.id}>\n                                {session.receiver.username} accepted your request {session.game.name} - {session.time} <br/>\n                                Add on discord to start playing! - {session.receiver.discord}\n                                    <div className=\"reviewer-div\">\n                                        <ReviewForm currentUser={currentUser} user={session.receiver}/>\n                                    </div>\n                                </div>\n                            })\n                        }\n                        {playSessions.filter(session => {\n                            return session.receiver_id === currentUser.id && session.is_accepted === true\n                        }).map(session => {\n                            return <div key={session.id}>\n                                You accepted to play {session.game.name} - with {session.sender.username} at {session.time}\n                                Add on discord to start playing! - {session.sender.discord}\n                                    <div className=\"reviewer-div\">\n                                        <ReviewForm currentUser={currentUser} user={session.sender}/>\n                                    </div>\n                                </div>\n                            })\n                        }\n                    </div>\n                    <h4> Rejected Request </h4>\n                    <div className=\"rejected-req\">\n                        {playSessions.filter(session => {\n                            return session.sender_id === currentUser.id && session.rejected === true\n                        }).map(session => {\n                            return <div key={session.id}>\n                                {session.receiver.username} rejected your request sad face {session.game.name} - {session.time}\n                                </div>\n                        })\n                        }\n                    </div>\n                </div>\n            </div>}\n            \n           \n            <div className=\"user-show-reviews\">\n                Reviews\n                {currentUser.reviews_as_reviewee.map(review => {\n                    return <div key={review.id}> \n                        {review.reviewer.username} | {review.rating} | {review.contents}\n                    </div>\n                })}\n            </div>\n\n        </div>\n    )\n}\n\nexport default UserShow\n","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/UserGameDetail.js",["87"],"import React, { useEffect, useState } from 'react'\nimport { useParams, Link } from 'react-router-dom'\nimport Modal from 'react-modal'\nimport PlaySessionForm from './PlaySessionForm'\nimport EditUserGameDetail from './EditUserGameDetail'\n\nModal.setAppElement('#root')\n\nfunction UserGameDetail({ currentUser }) {\n    const [isLoaded, setIsLoaded] = useState(false)\n    const [userGame, setUserGame] = useState(null)\n    const [user, setUser] = useState(null)\n    const [modalIsOpen, setIsOpen] = React.useState(false);\n    //var subtitle;\n    const params = useParams()\n\n    function handleClick() {\n        console.log(\"clicked\")\n    }\n\n    function openModal() {\n        setIsOpen(true);\n    }\n\n    function afterOpenModal() {\n        // references are now sync'd and can be accessed.\n        // subtitle.style.color = '#f00';\n    }\n\n    function closeModal(){\n        setIsOpen(false);\n    }\n\n    useEffect(() => {\n        fetch(`${process.env.REACT_APP_API_BASE_URL}/user_games/${params.id}`)\n            .then(resp => resp.json())\n            .then(data => {\n                setUserGame(data)\n                //setUser(data.user)\n                \n                fetch(`${process.env.REACT_APP_API_BASE_URL}/users/${data.user.id}`)\n                    .then(resp => resp.json())\n                    .then(userr => {\n                        console.log(userr)\n                        setUser(userr)\n                        setIsLoaded(true)\n                    })\n            })\n    }, [params.id])\n\n    if (!isLoaded) return <h2>Loading...</h2>\n    return (\n        <div className=\"user-game-page\">\n            <div className=\"user-detail\">\n                    <img src={user.avatar} alt={user.username}/>\n                    <Link to={`/users/${user.id}`}>\n                        <p>{user.username}</p>\n                    </Link>\n\n                    {currentUser.id === userGame.user.id ? \n                    <div>\n                        <EditUserGameDetail userGame={userGame} setUserGame={setUserGame}/>\n                    </div>\n                    :\n                    <div className=\"modal-button\">\n                        <button onClick={openModal}>Let's Game</button>\n                    </div>}\n            </div>\n            <div className=\"user-game-detail\">\n                <div className=\"user-game-img-div\">\n                    <img className=\"user-game-img\" src={userGame.image} alt=\"placeholder\" />\n                </div>\n                <div className=\"user-game-detail\">\n                    \n                    {userGame.level}<br/>\n                    {userGame.platform}<br/>\n                    {userGame.server}<br/>\n                    {userGame.details}\n                </div>\n                \n                <div className=\"user-reviews\">\n                    Reviews\n                    {user.reviews_as_reviewee.map(review => {\n                        return <div key={review.id}>\n                            {review.rating} | {review.reviewer.username}\n                            <p>{review.contents}</p>\n                        </div>\n                    })}\n                </div>\n            </div>\n            <Modal\n                isOpen={modalIsOpen}\n                onAfterOpen={afterOpenModal}\n                onRequestClose={closeModal}\n                // style={customStyles}\n                contentLabel=\"Example Modal\"\n                >\n\n                <PlaySessionForm closeModal={closeModal} currentUser={currentUser} userGame={userGame} />\n            </Modal>\n        </div>\n    )\n}\n\nexport default UserGameDetail\n","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/PlaySessionForm.js",[],"/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/ReviewForm.js",[],"/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/EditUserInfo.js",[],"/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/EditUserGameDetail.js",["88"],"import React, { useState } from 'react'\n\nfunction EditUserGameDetail({ userGame, setUserGame }) {\n    const [details, setDetails] = useState(userGame.details)\n    const [platform, setPlatform] = useState(userGame.platform)\n    const [level, setLevel] = useState(userGame.level)\n    const [server, setServer] = useState(userGame.server)\n    const [image, setImage] = useState(userGame.image)\n\n    function handleSubmit(event) {\n        event.preventDefault()\n    \n        const newGameInfo = {\n            details: details,\n            platform: platform,\n            level: level,\n            server: server,\n            image: image\n        }\n\n        fetch(`${process.env.REACT_APP_API_BASE_URL}/user_games/${userGame.id}`, {\n            method: 'PATCH',\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(newGameInfo)\n        })\n        .then(resp => resp.json())\n        .then(newUserGameObj => {\n            console.log(newUserGameObj)\n            setUserGame(newUserGameObj)\n        })\n    }\n\n    return (\n        <div>\n            <form onSubmit={handleSubmit}>\n                <h1>Edit Game Info</h1>\n\n                <label htmlFor=\"image\">Game Image</label>\n                <input\n                    type=\"text\"\n                    id=\"image\"\n                    autoComplete=\"off\"\n                    value={image}\n                    onChange={(e) => setImage(e.target.value)}\n                />\n                <img height=\"100px\"\n                    src={\n                    image\n                        ? image\n                        : \"Set an Image\"\n                    }\n                    alt=\"Set a game image\"\n                />\n\n                <label htmlFor=\"platform\">Platform</label>\n                <input type=\"text\" value={platform} onChange={(e) => setPlatform(e.target.value)}/>\n\n                <label htmlFor=\"level\">Level</label>\n                <input type=\"text\" value={level} onChange={(e) => setLevel(e.target.value)}/>\n\n                <label htmlFor=\"server\">Server</label>\n                <input type=\"text\" value={server} onChange={(e) => setServer(e.target.value)}/>\n\n                <label htmlFor=\"details\">Intro</label>\n                <textarea id=\"details\" value={details} onChange={(e) => setDetails(e.target.value)} />\n\n                <input type=\"submit\" value=\"Update\" />\n            </form>\n        </div>\n    )\n}\n\nexport default EditUserGameDetail\n","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/theme.js",["89","90"],"import { createMuiTheme } from '@material-ui/core/styles';\nimport purple from '@material-ui/core/colors/purple';\nimport green from '@material-ui/core/colors/green';\n\nconst theme = createMuiTheme({\n  palette: {\n\n  },\n});\n\nexport default theme",{"ruleId":"91","severity":1,"message":"92","line":19,"column":9,"nodeType":"93","messageId":"94","endLine":19,"endColumn":17},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"91","severity":1,"message":"99","line":8,"column":12,"nodeType":"93","messageId":"94","endLine":8,"endColumn":18},{"ruleId":"100","severity":1,"message":"101","line":30,"column":8,"nodeType":"102","endLine":30,"endColumn":10,"suggestions":"103"},{"ruleId":"91","severity":1,"message":"104","line":5,"column":12,"nodeType":"93","messageId":"94","endLine":5,"endColumn":14},{"ruleId":"91","severity":1,"message":"105","line":5,"column":34,"nodeType":"93","messageId":"94","endLine":5,"endColumn":38},{"ruleId":"91","severity":1,"message":"106","line":6,"column":7,"nodeType":"93","messageId":"94","endLine":6,"endColumn":16},{"ruleId":"91","severity":1,"message":"107","line":4,"column":8,"nodeType":"93","messageId":"94","endLine":4,"endColumn":19},{"ruleId":"91","severity":1,"message":"108","line":5,"column":8,"nodeType":"93","messageId":"94","endLine":5,"endColumn":19},{"ruleId":"91","severity":1,"message":"109","line":6,"column":10,"nodeType":"93","messageId":"94","endLine":6,"endColumn":20},{"ruleId":"91","severity":1,"message":"110","line":7,"column":9,"nodeType":"93","messageId":"94","endLine":7,"endColumn":19},{"ruleId":"91","severity":1,"message":"111","line":12,"column":22,"nodeType":"93","messageId":"94","endLine":12,"endColumn":27},{"ruleId":"100","severity":1,"message":"112","line":87,"column":8,"nodeType":"102","endLine":87,"endColumn":10,"suggestions":"113"},{"ruleId":"91","severity":1,"message":"114","line":17,"column":14,"nodeType":"93","messageId":"94","endLine":17,"endColumn":25},{"ruleId":"115","severity":1,"message":"116","line":48,"column":17,"nodeType":"117","endLine":55,"endColumn":19},{"ruleId":"91","severity":1,"message":"118","line":2,"column":8,"nodeType":"93","messageId":"94","endLine":2,"endColumn":14},{"ruleId":"91","severity":1,"message":"119","line":3,"column":8,"nodeType":"93","messageId":"94","endLine":3,"endColumn":13},"no-unused-vars","'location' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["120"],"no-negated-in-lhs",["121"],"'errors' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'params.id'. Either include it or remove the dependency array.","ArrayExpression",["122"],"'id' is assigned a value but never used.","'name' is assigned a value but never used.","'useStyles' is assigned a value but never used.","'CardActions' is defined but never used.","'CardContent' is defined but never used.","'makeStyles' is defined but never used.","'Typography' is defined but never used.","'genre' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'currentUser.id'. Either include it or remove the dependency array.",["123"],"'handleClick' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'purple' is defined but never used.","'green' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"124","fix":"125"},{"desc":"126","fix":"127"},"Update the dependencies array to be: [params.id]",{"range":"128","text":"129"},"Update the dependencies array to be: [currentUser.id]",{"range":"130","text":"131"},[1003,1005],"[params.id]",[2780,2782],"[currentUser.id]"]