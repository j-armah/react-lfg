[{"/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/App.js":"1","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/Login.js":"2","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/GamePage.js":"3","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/UserCard.js":"4","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/index.js":"5","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/Nav.js":"6","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/AddGame.js":"7","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/GameCard.js":"8","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/UserShow.js":"9","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/UserGameDetail.js":"10","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/PlaySessionForm.js":"11","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/ReviewForm.js":"12","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/EditUserInfo.js":"13","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/EditUserGameDetail.js":"14","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/theme.js":"15","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/UserGameCard.js":"16","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/SignUp.js":"17"},{"size":5596,"mtime":1612919998716,"results":"18","hashOfConfig":"19"},{"size":6916,"mtime":1612837619094,"results":"20","hashOfConfig":"19"},{"size":6235,"mtime":1612926227249,"results":"21","hashOfConfig":"19"},{"size":2315,"mtime":1612926978299,"results":"22","hashOfConfig":"19"},{"size":939,"mtime":1612566091729,"results":"23","hashOfConfig":"19"},{"size":9312,"mtime":1612916779206,"results":"24","hashOfConfig":"19"},{"size":1550,"mtime":1612915815377,"results":"25","hashOfConfig":"19"},{"size":1740,"mtime":1612926063910,"results":"26","hashOfConfig":"19"},{"size":25218,"mtime":1612926943079,"results":"27","hashOfConfig":"19"},{"size":13791,"mtime":1612927117470,"results":"28","hashOfConfig":"19"},{"size":2480,"mtime":1612917372118,"results":"29","hashOfConfig":"19"},{"size":4378,"mtime":1612902990727,"results":"30","hashOfConfig":"19"},{"size":4457,"mtime":1612814457462,"results":"31","hashOfConfig":"19"},{"size":3937,"mtime":1612749101955,"results":"32","hashOfConfig":"19"},{"size":257,"mtime":1612543059693,"results":"33","hashOfConfig":"19"},{"size":1352,"mtime":1612928400401,"results":"34","hashOfConfig":"19"},{"size":5696,"mtime":1612807868943,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},"18f01r6",{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"39"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"39"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"39"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"39"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"39"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"39"},"/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/App.js",["80","81","82"],"import React, { useEffect, useState } from 'react'\nimport { Route, Switch, useHistory, useLocation, useParams} from 'react-router-dom'\nimport Nav from './Nav'\nimport UserShow from './UserShow'\nimport GamePage from './GamePage'\nimport Login from './Login'\nimport AddGame from './AddGame'\nimport UserGameDetail from './UserGameDetail'\nimport SignUp from './SignUp'\nimport { Grid, Box } from '@material-ui/core'\nimport ReviewForm from './ReviewForm'\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  load: {\n    display: 'flex',\n    '& > * + *': {\n      marginLeft: theme.spacing(2),\n    },\n  },\n}));\n\n \nfunction App() {\n  const [users, setUsers] = useState([])\n  const [isLoaded, setIsLoaded] = useState(false)\n  const [games, setGames] = useState([])\n  const [currentUser, setCurrentUser] = useState(null)\n  const [userGames, setUserGames] = useState([])\n  const [reviewee, setReviewee] = useState(null)\n  const [sessionId, setSessionId] = useState(null)\n  const history = useHistory()\n  // const location = useLocation()\n  // const params = useParams()\n  // const classes = useStyles()\n\n  // console.log(location.pathname === '/users/')\n  // console.log(history.location)\n\n  function addUserGame(game) {\n    const defaultImg = \"https://wallpapercave.com/wp/wp2623648.jpg\"\n    console.log(game)\n    const newUserGameObj = {\n      user_id: currentUser.id,\n      game_id: parseInt(game.id),\n      details: \"\",\n      platform: \"\",\n      level: \"\",\n      server: \"\",\n      image: defaultImg\n    } \n\n    fetch(`${process.env.REACT_APP_API_BASE_URL}/user_games`, {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newUserGameObj)\n    })\n    .then(resp => resp.json())\n    .then(newObj => {\n      setUserGames([...userGames, newObj])\n      if (newObj.id === null) {\n        alert(\"Already added game\")\n      }\n    })\n  }\n\n  function handleSignUp(user) {\n    console.log(user)\n    setCurrentUser(user)\n    history.push(\"/games\")\n  }\n\n  function handleLogin(user) {\n    console.log(user)\n    setCurrentUser(user)\n    history.push(`/games/${games[0].id}`)\n  }\n\n  function handleLogout() {\n    setCurrentUser(null)\n    localStorage.removeItem(\"token\")\n    history.push(\"/\")\n  }\n\n  // Auth to keep user logged in after refresh\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      fetch(`${process.env.REACT_APP_API_BASE_URL}/profile`, {\n        method: \"GET\",\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      })\n        .then((r) => r.json())\n        .then((user) => {\n          // console.log(user)\n          setCurrentUser(user);\n          // setIsLoaded(true)\n        });\n    }\n  }, []);\n\n  useEffect(() => {\n    fetch(`${process.env.REACT_APP_API_BASE_URL}/games`)\n      .then(resp => resp.json())\n      .then(data => {\n        // console.log(data)\n        setGames(data)\n        setIsLoaded(true)\n\n      })\n  }, [])\n\n  useEffect(() => {\n    fetch(`${process.env.REACT_APP_API_BASE_URL}/users`)\n      .then(resp => resp.json())\n      .then(data => {\n        // console.log(data)\n        setUsers(data)\n      })\n  }, [])\n\n  useEffect(() => {\n    fetch(`${process.env.REACT_APP_API_BASE_URL}/user_games`)\n      .then(resp => resp.json())\n      .then(data => {\n        setUserGames(data)\n      })\n  }, [])\n\n\n  console.log(currentUser)\n  // console.log(localStorage.getItem(\"token\"))\n  // if (!isLoaded) return <h1>Loading</h1>\n  if (!isLoaded) return (\n    <Box position=\"relative\" display=\"inline-flex\" justifyContent=\"center\" alignItems=\"center\">\n      <CircularProgress color=\"secondary\" />\n    </Box>\n  ) \n  return (\n    <Grid className=\"app\" container direction=\"column\">\n      <Grid item>\n        <Route>\n          <Nav currentUser={currentUser} handleLogout={handleLogout} games={games} users={users}/>\n        </Route>\n      </Grid>\n      \n      <Switch>\n        <Grid item container>\n          {/* <Grid item xs={false} sm={1} /> */}\n          \n          <Grid item xs={false} sm={1} />\n              <Grid item xs={12} sm={10}>\n                <Route exact path=\"/users/:id\">\n                  <UserShow setReviewee={setReviewee} currentUser={currentUser} setSessionId={setSessionId} setCurrentUser={setCurrentUser}/> \n                </Route>\n                <Route exact path=\"/games\">\n                  <AddGame games={games} newUserGame={addUserGame} userGames={userGames} currentUser={currentUser}/>\n                </Route>        \n                <Route exact path=\"/reviews/new\">\n                  <ReviewForm currentUser={currentUser} reviewee={reviewee} sessionId={sessionId}/>\n                </Route>\n              </Grid>\n            <Grid item xs={false} sm={1} />\n\n            <Grid item xs={12} sm={12}>\n              <Route exact path=\"/user_games/:id\">\n                <UserGameDetail currentUser={currentUser} games={games}/>\n              </Route>\n              <Route exact path=\"/games/:id\">\n                  <GamePage games={games}/>\n              </Route>\n            </Grid>\n          {/* <Grid item xs={false} sm={1} /> */}\n          <Route exact path=\"/\">\n              <Login setCurrentUser={setCurrentUser} firstGame={games[0]} handleLogin={handleLogin}/>\n          </Route>\n          <Route exact path=\"/signup\">\n              <SignUp setCurrentUser={setCurrentUser} firstGame={games[0]} handleSignUp={handleSignUp}/>\n          </Route>\n        </Grid>\n\n      </Switch>\n    </Grid>\n  );\n}\n\nexport default App;\n",["83","84"],"/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/Login.js",["85"],"import React, { useState } from 'react'\nimport { useHistory, Link } from 'react-router-dom'\n// import { Button } from '@material-ui/core'\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n// import Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link to={'/'} color=\"inherit\" href=\"/\">\n        LFG\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100vh',\n  },\n  image: {\n    backgroundImage: 'url(/images/wanella.gif)',\n    backgroundRepeat: 'no-repeat',\n    backgroundColor:\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}))\n\nfunction Login({ setCurrentUser, firstGame, handleLogin }) {\n    const [username, setUsername] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [errors, setErrors] = useState(\"\")\n    const history = useHistory()\n    const classes = useStyles()\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        const formData = { username, password };\n        //console.log(formData)\n    \n        fetch(`${process.env.REACT_APP_API_BASE_URL}/login`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(formData),\n        })\n          .then((r) => r.json())\n          .then((data) => {\n            // then set that user in state in our App component\n            console.log(data.user)\n            if (data.user) {\n              handleLogin(data.user)\n              localStorage.setItem(\"token\", data.token)\n            } else {\n              console.log(data)\n              setErrors(data.error)\n              // alert('Incorret username or password')\n            }\n          });\n    }\n\n    // function login() {\n    //     fetch(`${process.env.REACT_APP_API_BASE_URL}/`, {\n    //         method: \"POST\",\n    //         })\n    //     .then((r) => r.json())\n    //     .then(data => {\n    //         setCurrentUser(data)\n    //         history.push(`/games/${firstGame.id}`)\n    //     });\n    // }\n\n    console.log(firstGame)\n\n    return (\n      <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <form className={classes.form} noValidate>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Username\"\n              name=\"username\"\n              // autoComplete=\"username\"\n              autoFocus\n              value={username}\n              onChange={(e) => setUsername(e.target.value)}\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            <div className=\"errors\">{errors}</div>\n            <FormControlLabel\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\n              label=\"Remember me\"\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              onClick={handleSubmit}\n            >\n              Sign In\n            </Button>\n            <Grid container>\n              <Grid item xs>\n                <Link to={`/games/${firstGame.id}`} variant=\"body2\">\n                  Continue as Guest\n                </Link>\n              </Grid>\n              <Grid item>\n                <Link to={`/signup`} variant=\"body2\">\n                  {\"Don't have an account? Sign Up\"}\n                </Link>\n              </Grid>\n            </Grid>\n            <Box mt={5}>\n              <Copyright />\n            </Box>\n          </form>\n        </div>\n      </Grid>\n    </Grid>\n        // <div className=\"login\">\n        //     <video autoPlay muted loop>\n        //         <source src=\"/Atlias.mp4\" type=\"video/mp4\"/>\n        //     </video>\n        //     <div className=\"login-form-box\">\n        //         <form className=\"login-form\" onSubmit={handleSubmit}>\n        //             <h3>Welcome to LFG</h3>\n        //             <label htmlFor=\"username\">Username</label>\n        //             <input\n        //             type=\"text\"\n        //             id=\"username\"\n        //             autoComplete=\"off\"\n                    // value={username}\n                    // onChange={(e) => setUsername(e.target.value)}\n        //             />\n        //             <label htmlFor=\"password\">Password</label>\n        //             <input\n        //             type=\"password\"\n        //             id=\"password\"\n                    // value={password}\n                    // onChange={(e) => setPassword(e.target.value)}\n        //             autoComplete=\"current-password\"\n        //             />\n        //             <Button type=\"submit\" className='submit-button'>Login</Button>\n        //         </form>\n        //         <Button> Login </Button>\n        //         <button onClick={login}>Login</button>\n        //     </div>\n        // </div>\n    )\n}\n\nexport default Login\n","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/GamePage.js",["86","87"],"import React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport UserCard from './UserCard'\nimport GameCard from './GameCard'\nimport { Grid, Typography, Box, Button, Paper } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles';\nimport SportsEsportsIcon from '@material-ui/icons/SportsEsports';\nimport Popover from '@material-ui/core/Popover';\n\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    gamePage: {\n        position: 'relative',\n    },\n    gameBanner: {\n        // position: 'absolute',\n        height: \"40vh\",\n        backgroundSize: \"cover\",\n        backgroundRepeat: \"no-repeat\",\n        backgroundPosition: '0 20%',\n        zIndex: 0\n    },\n    users: {\n        // position: 'absolute',\n        marginTop: -140,\n    },\n    bannerGrid: {\n        height: \"100%\"\n    },\n    box: {\n        height: \"60%\",\n        positin: \"fixed\",\n        // marginLeft: \"calc(100% - 1600px)\",\n        // right: \"20%\",\n        // marginLeft: \"100px\",\n    },\n    popover: {\n        pointerEvents: 'none',\n    },\n    paper: {\n        padding: theme.spacing(1),\n    },\n    gameRec: {\n        height: \"600px\",\n        width: \"1500px\",\n        // overflow: \"auto\",\n    }\n}));\n\n\nfunction GamePage({ games }) {\n    const [isLoaded, setIsLoaded] = useState(false)\n    const [game, setGame] = useState(null)\n    const [userGames, setUserGames] = useState([])\n    const [anchorEl, setAnchorEl] = useState(null)\n    const params = useParams()\n    const classes = useStyles()\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const open = Boolean(anchorEl);\n    const id = open ? 'simple-popover' : undefined;\n\n    useEffect(() => {\n        fetch(`${process.env.REACT_APP_API_BASE_URL}/games/${params.id}`)\n            .then(resp => resp.json())\n            .then(data => {\n                //console.log(data)\n                setGame(data)\n                setIsLoaded(true)\n            })\n    }, [params.id])\n\n    useEffect(() => {\n        fetch(`${process.env.REACT_APP_API_BASE_URL}/user_games/`)\n            .then(resp => resp.json())\n            .then(data => {\n                console.log(data)\n                const filteredUserGames = data.filter(ug => ug.game_id === parseInt(params.id)).filter(ug => ug.user.lfg === true)\n                setUserGames(filteredUserGames)\n                \n            })\n    }, [params.id])\n\n    console.log(userGames)\n\n    if (!isLoaded) return <h2>Loading...</h2>\n    \n    return (\n\n        <Grid container item className={classes.gamePage} xs={\"auto\"}>\n            <Grid \n                item xs={12} \n                className={classes.gameBanner} \n                component={\"div\"}\n                style={{\n                    backgroundImage: \n                    `linear-gradient(\n                        rgba(38, 38, 38, 0.35),\n                        rgba(38, 38, 38, 0.35),\n                        rgba(38, 38, 38, 0.45),\n                        rgba(38, 38, 38, 0.55), \n                        rgba(38, 38, 38, 0.75),\n                        rgba(38, 38, 38, 0.85),\n                        rgba(38, 38, 38, 0.95),   \n                        rgba(38, 38, 38, 1)\n                    ),\n                    url(\"${game.splash}\")`,\n                }}\n            >\n                <Grid container className={classes.bannerGrid}>\n                    <Grid item xs={false} sm={1} />\n                        <Grid item xs={10} className={classes.bannerGrid}>\n                            <Box \n                                className={classes.box}\n                                display=\"flex\"\n                                alignItems=\"center\"\n                            >\n                                <Button\n                                aria-describedby={id}\n                                onClick={handleClick}\n                                >\n                                    <SportsEsportsIcon />\n                                </Button>\n                                <Typography variant={\"h3\"}> {game.name} </Typography>\n                                <Popover\n                                    id={id}\n                                    open={open}\n                                    anchorEl={anchorEl}\n                                    onClose={handleClose}\n                                    anchorOrigin={{\n                                        vertical: 'bottom',\n                                        horizontal: 'left',\n                                    }}\n                                    transformOrigin={{\n                                        vertical: 'top',\n                                        horizontal: 'left',\n                                    }}\n                                >\n                                    <Box p={6} mx=\"auto\" justifyContent=\"center\" alignItems=\"center\" className={classes.gameRec}>\n                                        {/* <Paper className={classes.gameRec}> */}\n                                        <Typography variant={\"h3\"} paragraph> Recommended Games </Typography>\n                                            <Grid container xs={12} spacing={4}>\n                                                {games.slice(0,9).map(game => <GameCard key={game.id} game={game} handleClose={handleClose}/> )} \n                                            </Grid>\n                                        {/* </Paper> */}\n                                    </Box>\n                                </Popover>\n                            </Box>\n                        </Grid>\n                    <Grid item xs={false} sm={1} />\n                </Grid>\n                \n            </Grid>\n            <Grid item xs={false} sm={1} />\n                <Grid container item xs={10} container spacing={3} className={classes.users}>\n                    \n                    {userGames.map(userGame => \n                        <UserCard key={userGame.id} user={userGame.user} userGameId={userGame.id}/>    \n                    )}\n                </Grid>\n            <Grid item xs={false} sm={1} />\n            \n        </Grid>\n    )\n}\n\nexport default GamePage\n","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/UserCard.js",[],"/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/index.js",[],"/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/Nav.js",["88","89","90","91","92","93"],"import React, { useState } from 'react'\nimport { useLocation, useHistory } from 'react-router-dom'\nimport { Button, AppBar, Toolbar, Typography } from '@material-ui/core'\nimport { makeStyles, fade } from '@material-ui/core/styles'\nimport IconButton from '@material-ui/core/IconButton';\nimport InputBase from '@material-ui/core/InputBase';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Avatar from '@material-ui/core/Avatar';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\n\nconst useStyles = makeStyles((theme) => ({\n    grow: {\n        flexGrow: 1,\n    },\n    appBar: {\n        paddingBottom: 10,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n        marginLeft: theme.spacing(1),\n    },\n    title: {\n        // flexGrow: 1,\n        display: 'none',\n        [theme.breakpoints.up('sm')]: {\n            display: 'block',\n        },\n    },\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        '&:hover': {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginRight: theme.spacing(2),\n        marginLeft: 0,\n        width: '100%',\n        // height:'50%',\n        display:'flex',\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: theme.spacing(3),\n            width: 'auto',\n        },\n    },\n    searchIcon: {\n        padding: theme.spacing(0, 2),\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    inputRoot: {\n        color: 'inherit',\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 0),\n        // vertical padding + font size from searchIcon\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('md')]: {\n            width: '12ch',\n            '&:focus': {\n                width: '22ch',\n            },\n        },\n    },\n    sectionDesktop: {\n        display: 'none',\n        [theme.breakpoints.up('md')]: {\n            display: 'flex',\n        },\n    },\n    large: {\n        width: theme.spacing(7),\n        height: theme.spacing(7),\n    },\n    login: {\n        marginRight: theme.spacing(1),\n    },\n    form: {\n        width: '100%',\n    }\n}));\n\n\nfunction Nav({ currentUser, handleLogout }) {\n    const [search, setSearch] = useState(\"\")\n    const [anchorEl, setAnchorEl] = useState(null)\n    const history = useHistory()\n    const classes = useStyles()\n    const location = useLocation()\n    const isMenuOpen = Boolean(anchorEl)\n\n    const handleProfileMenuOpen = (event) => {\n        // console.log(event.currentTarget)\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleMenuCloseProfile = () => {\n        history.push(`/users/${currentUser.id}`)\n        setAnchorEl(null);\n    };\n\n    const handleLogoutClose = () => {\n        setAnchorEl(null);\n        handleLogout()\n    }\n\n    const handleMenuClose = () => {\n        setAnchorEl(null);\n    };\n\n    const menuId = 'primary-search-account-menu';\n    const renderMenu = (\n        <Menu\n            anchorEl={anchorEl}\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n            id={menuId}\n            keepMounted\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n            open={isMenuOpen}\n            onClose={handleMenuClose}\n        >\n            <MenuItem onClick={handleMenuCloseProfile}>Profile</MenuItem>\n            <MenuItem onClick={handleLogoutClose}>Logout</MenuItem>\n        </Menu>\n    );\n\n    const handleSearch = (event) => {\n        event.preventDefault()\n\n        console.log(search)\n    }\n    \n    // console.log(search)\n    \n    if (location.pathname === \"/\" || location.pathname === \"/signup\") return null\n    return (\n    <div className={classes.grow}>\n        \n    <AppBar position=\"static\" className={classes.appBar}>\n        <Toolbar>\n        <div className=\"logo\">\n            <img height=\"50px\" width=\"110px\" src=\"https://i.imgur.com/NoEHEH8.png\" />\n        </div>\n        <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n        >\n            <MenuIcon />\n        </IconButton>\n        <Button className={classes.title} onClick={() => history.push(\"/games\")}>\n            All Games\n        </Button>\n        \n        \n        <div className={classes.grow} />\n        <div className={classes.search}>\n                <div className={classes.searchIcon}>\n                    <SearchIcon />\n                </div>\n                <InputBase\n                placeholder=\"Search…\"\n                classes={{\n                    root: classes.inputRoot,\n                    input: classes.inputInput,\n                }}\n                inputProps={{ 'aria-label': 'search' }}\n                />\n                {/* <form className={classes.form} onSubmit={handleSearch}>\n                <Autocomplete\n                    freeSolo\n                    fullWidth\n                    autoSelect={true}\n                    id=\"free-solo-2-demo\"\n                    disableClearable\n                    options={users.map((user) => \n                        user.username\n                        )}\n                    onSubmit={() => console.log(search)}\n                    inputValue={search}\n                    onInputChange={(e) => setSearch(e.target.value)}\n                    renderInput={(params) => (\n                    <TextField\n                        {...params}\n                        label=\"Search Users\"\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        className={classes.autocomplete}\n                        // value={search}\n                        // onChange={(e) => setSearch(e.target.value)}\n                        // classes={{\n                        //     root: classes.inputRoot,\n                        //     input: classes.inputInput,\n                        // }}\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                />\n                </form> */}\n        </div>\n        \n        \n        <div className={classes.sectionDesktop}>\n            \n            {/* <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n            <Badge badgeContent={4} color=\"secondary\">\n                <MailIcon />\n            </Badge>\n            </IconButton>\n            <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\n            <Badge badgeContent={17} color=\"secondary\">\n                <NotificationsIcon />\n            </Badge>\n            </IconButton> */}\n            {!currentUser ? \n            <div>\n                <Button onClick={() => history.push('/')}variant=\"outlined\" color=\"inherit\" className={classes.login}>Login</Button>\n                <Button color=\"secondary\" variant=\"contained\">Signup</Button>\n            </div>\n            \n            :\n            <div>\n            <IconButton\n                edge=\"end\"\n                aria-label={\"current user\"}\n                aria-controls={menuId}\n                aria-haspopup=\"true\"\n                onClick={handleProfileMenuOpen}\n                color=\"inherit\"\n            >\n                <Avatar src={currentUser.avatar} className={classes.large}/>\n            </IconButton>\n            </div>}\n        </div>\n        </Toolbar>\n    </AppBar>\n    {renderMenu}\n    </div>\n    );\n\n    // const location = useLocation()\n    // if (location.pathname === \"/\") return null\n    // return (\n    //     <AppBar className=\"nav\" position=\"static\">\n    //         <Toolbar>  \n    //             <Typography component={'div'} className=\"nav-games\">\n    //                 <NavLink to={\"/games\"}>\n    //                     Games\n    //                 </NavLink>\n    //             </Typography>              \n    //             <Typography component={'div'} className=\"user-nav-div\">\n    //                 {!currentUser ?\n    //                     <div>\n    //                         <NavLink exact to={\"/\"}>\n    //                             Login\n    //                         </NavLink>\n    //                     </div> \n    //                     :\n    //                     <div className=\"logged-in\">\n    //                         <div className='welcome-div'>\n    //                             <NavLink exact to={`/users/${currentUser.id}`} className=\"nav-button\">\n    //                                <Typography>Welcome, {currentUser.username}!</Typography> \n    //                             </NavLink>\n    //                             <Button color=\"secondary\" variant=\"contained\" className=\"nav-button\" onClick={handleLogout}>Logout</Button>\n    //                         </div>\n    //                     </div>} \n    //             </Typography>\n    //         </Toolbar>\n    //     </AppBar>\n    // )\n}\n\n\n\nexport default Nav\n","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/AddGame.js",["94"],"import React, { useState } from 'react'\nimport GameCard from './GameCard'\nimport { Grid, Typography } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\n\nfunction AddGame({ games, newUserGame, currentUser }) {\n    const [search, setSearch] =  useState(\"\")\n\n    const sortedGames = games.sort((gameA, gameB) => {\n        if (gameA.user_games.length > gameB.user_games.length) {\n            return -1\n        }\n        if (gameA.user_games.length < gameB.user_games.length) {\n            return 1\n        } \n        return 0\n    }).filter(game => game.name.toLowerCase().includes(search.toLowerCase()))\n    \n     const gameArray = sortedGames.map(game => \n        <GameCard key={game.id} game={game} newUserGame={newUserGame} currentUser={currentUser}/>    \n    )\n    \n    return (\n        <div>\n            <Typography variant={\"h2\"}>All Games</Typography>\n            <TextField\n                id=\"game-search\"\n                style={{ margin: 8 }}\n                placeholder=\"Search Games...\"\n                fullWidth\n                margin=\"normal\"\n                InputLabelProps={{\n                    shrink: true,\n                }}\n                variant=\"filled\"\n                value={search}\n                onChange={(e) => setSearch(e.target.value)}\n            />\n\n            <Grid container item spacing={2} xs={\"auto\"} className=\"games-container\">\n                    {gameArray}\n            </Grid>\n\n        </div>\n    )\n}\n\nexport default AddGame\n","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/GameCard.js",[],"/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/UserShow.js",[],"/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/UserGameDetail.js",[],"/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/PlaySessionForm.js",[],"/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/ReviewForm.js",["95","96","97","98","99","100","101"],"import React, { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport Rating from '@material-ui/lab/Rating';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { FormControl, Button, FormLabel, InputLabel, Input, TextField, TextareaAutosize, Typography, Box ,Card ,Divider ,Grid } from '@material-ui/core';\nimport CardMedia from '@material-ui/core/CardMedia';\n// import CardActionArea from '@material-ui/core/CardActionArea';\n// import CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      width: '25ch',\n    },\n    label: {\n        margin: theme.spacing(2),\n    },\n    cardContent: {\n        alignItems: \"auto\"\n    }\n}));\n\nfunction ReviewForm({ currentUser, sessionId, reviewee }) {\n    const [contents, setContents] = useState(\"\")\n    const [rating, setRating] = useState(1)\n    const history = useHistory()\n    const classes = useStyles()\n\n    console.log(rating)\n    console.log(reviewee)\n\n    function handleSubmit(event) {\n        event.preventDefault()\n\n        const reviewData = {\n            reviewer_id: parseInt(currentUser.id),\n            reviewee_id: parseInt(reviewee.id),\n            contents: contents,\n            rating: parseInt(rating),\n            play_session_id: parseInt(sessionId)\n        }\n\n        console.log(reviewData)\n        fetch(`${process.env.REACT_APP_API_BASE_URL}/reviews`, {\n            method: 'POST',\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(reviewData)\n        })\n        .then(resp => resp.json())\n        .then(newReviewObj => {\n            console.log(newReviewObj)\n            if (newReviewObj.id === null) {\n                alert(\"Can only review a user once!\")\n            } else {\n                history.push(`/users/${currentUser.id}`)\n            }\n        })\n    }\n    return (\n        <Grid container>\n            <Grid item xs={4}/>\n            <Card alignContent=\"center\">\n                <CardHeader \n                    title=\"Review\"\n                >\n                    {\"hEY\"}\n                </CardHeader>\n                <CardMedia>\n                    <img height=\"400px\"src={reviewee.avatar} alt={reviewee.username} />\n                </CardMedia>\n                    <CardContent className={classes.cardContent}>\n                        <FormControl onSubmit={handleSubmit}>\n                            <label>\n                                Review {reviewee.username}<br/>\n                                <textarea name=\"content\" value={contents} onChange ={event => setContents(event.target.value)}/>\n                                <br/>\n                                {/* Rate: <select name=\"rating\" id=\"rating\" form=\"review\" value={rating} onChange={event => setRating(event.target.value)}>\n                                    <option value=\"1\">1</option>\n                                    <option value=\"2\">2</option>\n                                    <option value=\"3\">3</option>\n                                    <option value=\"4\">4</option>\n                                    <option value=\"5\">5</option>              \n                                </select> */}\n                                <>\n                                <FormLabel> Rate: </FormLabel>\n                                <Rating\n                                    name=\"rating\"\n                                    precision={0.5}\n                                    value={rating}\n                                    onChange={(event, newValue) => {\n                                        setRating(newValue);\n                                    }}\n                                />\n                                </>\n                            </label>\n                            <Button variant=\"contained\" color=\"secondary\" onClick={handleSubmit} className=\"submit-button\">Submit Review</Button>\n                        </FormControl>\n                    </CardContent>\n                </Card>\n            <Grid item xs={4}/>\n        </Grid>\n    )\n}\n\n\n\nexport default ReviewForm\n","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/EditUserInfo.js",[],"/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/EditUserGameDetail.js",[],"/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/theme.js",["102","103"],"import { createMuiTheme } from '@material-ui/core/styles';\nimport purple from '@material-ui/core/colors/purple';\nimport green from '@material-ui/core/colors/green';\n\nconst theme = createMuiTheme({\n  palette: {\n    type: \"dark\"\n  },\n});\n\nexport default theme",["104","105"],"/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/UserGameCard.js",["106"],"/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/SignUp.js",["107","108","109","110"],"import React, { useState } from 'react'\nimport { useHistory, Link } from 'react-router-dom'\n// import { Button } from '@material-ui/core'\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n// import Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" to={\"/\"}>\n        LFG\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100vh',\n  },\n  image: {\n    backgroundImage: 'url(/images/wanella.gif)',\n    backgroundRepeat: 'no-repeat',\n    backgroundColor:\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}))\n\nfunction SignUp({ firstGame, handleSignUp }) {\n    const [username, setUsername] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [discord, setDiscord] = useState(\"\")\n    const [errors, setErrors] = useState(\"\")\n    const history = useHistory()\n    const classes = useStyles()\n    const defaultImg = \"https://i.pinimg.com/originals/b1/92/4d/b1924dce177345b5485bb5490ab3441f.jpg\"\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        const formData = { \n            avatar: defaultImg, \n            name: \"\",\n            bio: \"\",\n            lfg: true,\n            username, \n            password, \n            discord \n        }\n        //console.log(formData)\n    \n        fetch(`${process.env.REACT_APP_API_BASE_URL}/signup`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(formData),\n        })\n          .then((r) => r.json())\n          .then((data) => {\n            // then set that user in state in our App component\n            console.log(data.user)\n            if (data.user) {\n                handleSignUp(data.user)\n                localStorage.setItem(\"token\", data.token)\n            } else {\n                console.log(data)\n                setErrors(data.error)\n              // alert('Incorret username or password')\n            }\n          });\n    }\n\n    return (\n      <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign up\n          </Typography>\n          <form className={classes.form} noValidate>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Username\"\n              name=\"username\"\n              // autoComplete=\"username\"\n              autoFocus\n              value={username}\n              onChange={(e) => setUsername(e.target.value)}\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"discord\"\n              label=\"Discord\"\n              type=\"discord\"\n              id=\"discord\"\n              value={discord}\n              onChange={(e) => setDiscord(e.target.value)}\n            />\n\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              onClick={handleSubmit}\n            >\n              Sign Up\n            </Button>\n            <Grid container>\n              <Grid item xs>\n                <Link to={`/games/${firstGame.id}`} variant=\"body2\">\n                  Continue as Guest\n                </Link>\n              </Grid>\n              <Grid item>\n                <Link to={\"/\"} variant=\"body2\">\n                  {\"Sign in\"}\n                </Link>\n              </Grid>\n            </Grid>\n            <Box mt={5}>\n              <Copyright />\n            </Box>\n          </form>\n        </div>\n      </Grid>\n    </Grid>\n    )\n}\n\nexport default SignUp\n",{"ruleId":"111","severity":1,"message":"112","line":2,"column":37,"nodeType":"113","messageId":"114","endLine":2,"endColumn":48},{"ruleId":"111","severity":1,"message":"115","line":2,"column":50,"nodeType":"113","messageId":"114","endLine":2,"endColumn":59},{"ruleId":"111","severity":1,"message":"116","line":15,"column":7,"nodeType":"113","messageId":"114","endLine":15,"endColumn":16},{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"111","severity":1,"message":"121","line":66,"column":11,"nodeType":"113","messageId":"114","endLine":66,"endColumn":18},{"ruleId":"111","severity":1,"message":"122","line":5,"column":41,"nodeType":"113","messageId":"114","endLine":5,"endColumn":46},{"ruleId":"123","severity":1,"message":"124","line":165,"column":46,"nodeType":"125","endLine":165,"endColumn":55},{"ruleId":"111","severity":1,"message":"126","line":3,"column":35,"nodeType":"113","messageId":"114","endLine":3,"endColumn":45},{"ruleId":"111","severity":1,"message":"127","line":12,"column":8,"nodeType":"113","messageId":"114","endLine":12,"endColumn":17},{"ruleId":"111","severity":1,"message":"128","line":13,"column":8,"nodeType":"113","messageId":"114","endLine":13,"endColumn":20},{"ruleId":"111","severity":1,"message":"129","line":96,"column":20,"nodeType":"113","messageId":"114","endLine":96,"endColumn":29},{"ruleId":"111","severity":1,"message":"130","line":138,"column":11,"nodeType":"113","messageId":"114","endLine":138,"endColumn":23},{"ruleId":"131","severity":1,"message":"132","line":153,"column":13,"nodeType":"133","endLine":153,"endColumn":86},{"ruleId":"111","severity":1,"message":"134","line":4,"column":10,"nodeType":"113","messageId":"114","endLine":4,"endColumn":20},{"ruleId":"111","severity":1,"message":"135","line":5,"column":42,"nodeType":"113","messageId":"114","endLine":5,"endColumn":52},{"ruleId":"111","severity":1,"message":"136","line":5,"column":54,"nodeType":"113","messageId":"114","endLine":5,"endColumn":59},{"ruleId":"111","severity":1,"message":"127","line":5,"column":61,"nodeType":"113","messageId":"114","endLine":5,"endColumn":70},{"ruleId":"111","severity":1,"message":"137","line":5,"column":72,"nodeType":"113","messageId":"114","endLine":5,"endColumn":88},{"ruleId":"111","severity":1,"message":"126","line":5,"column":90,"nodeType":"113","messageId":"114","endLine":5,"endColumn":100},{"ruleId":"111","severity":1,"message":"138","line":5,"column":102,"nodeType":"113","messageId":"114","endLine":5,"endColumn":105},{"ruleId":"111","severity":1,"message":"139","line":5,"column":113,"nodeType":"113","messageId":"114","endLine":5,"endColumn":120},{"ruleId":"111","severity":1,"message":"140","line":2,"column":8,"nodeType":"113","messageId":"114","endLine":2,"endColumn":14},{"ruleId":"111","severity":1,"message":"141","line":3,"column":8,"nodeType":"113","messageId":"114","endLine":3,"endColumn":13},{"ruleId":"117","replacedBy":"142"},{"ruleId":"119","replacedBy":"143"},{"ruleId":"111","severity":1,"message":"144","line":13,"column":11,"nodeType":"113","messageId":"114","endLine":13,"endColumn":19},{"ruleId":"111","severity":1,"message":"145","line":8,"column":8,"nodeType":"113","messageId":"114","endLine":8,"endColumn":24},{"ruleId":"111","severity":1,"message":"146","line":9,"column":8,"nodeType":"113","messageId":"114","endLine":9,"endColumn":16},{"ruleId":"111","severity":1,"message":"147","line":66,"column":12,"nodeType":"113","messageId":"114","endLine":66,"endColumn":18},{"ruleId":"111","severity":1,"message":"121","line":67,"column":11,"nodeType":"113","messageId":"114","endLine":67,"endColumn":18},"no-unused-vars","'useLocation' is defined but never used.","Identifier","unusedVar","'useParams' is defined but never used.","'useStyles' is assigned a value but never used.","no-native-reassign",["148"],"no-negated-in-lhs",["149"],"'history' is assigned a value but never used.","'Paper' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Typography' is defined but never used.","'TextField' is defined but never used.","'Autocomplete' is defined but never used.","'setSearch' is assigned a value but never used.","'handleSearch' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'makeStyles' is defined but never used.","'InputLabel' is defined but never used.","'Input' is defined but never used.","'TextareaAutosize' is defined but never used.","'Box' is defined but never used.","'Divider' is defined but never used.","'purple' is defined but never used.","'green' is defined but never used.",["148"],["149"],"'location' is assigned a value but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'errors' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]