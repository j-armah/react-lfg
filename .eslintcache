[{"/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/App.js":"1","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/Login.js":"2","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/GamePage.js":"3","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/UserCard.js":"4","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/index.js":"5","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/Nav.js":"6","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/AddGame.js":"7","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/GameCard.js":"8","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/UserShow.js":"9","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/UserGameDetail.js":"10","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/PlaySessionForm.js":"11","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/ReviewForm.js":"12","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/EditUserInfo.js":"13","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/EditUserGameDetail.js":"14","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/theme.js":"15","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/UserGameCard.js":"16","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/SignUp.js":"17"},{"size":4765,"mtime":1612825872673,"results":"18","hashOfConfig":"19"},{"size":6916,"mtime":1612837619094,"results":"20","hashOfConfig":"19"},{"size":1677,"mtime":1612836051126,"results":"21","hashOfConfig":"19"},{"size":1424,"mtime":1612748851371,"results":"22","hashOfConfig":"19"},{"size":939,"mtime":1612566091729,"results":"23","hashOfConfig":"19"},{"size":9231,"mtime":1612837468901,"results":"24","hashOfConfig":"19"},{"size":1492,"mtime":1612826521901,"results":"25","hashOfConfig":"19"},{"size":1612,"mtime":1612748763367,"results":"26","hashOfConfig":"19"},{"size":24731,"mtime":1612840898801,"results":"27","hashOfConfig":"19"},{"size":9270,"mtime":1612840874711,"results":"28","hashOfConfig":"19"},{"size":2330,"mtime":1612748798060,"results":"29","hashOfConfig":"19"},{"size":4266,"mtime":1612832814239,"results":"30","hashOfConfig":"19"},{"size":4457,"mtime":1612814457462,"results":"31","hashOfConfig":"19"},{"size":3937,"mtime":1612749101955,"results":"32","hashOfConfig":"19"},{"size":257,"mtime":1612543059693,"results":"33","hashOfConfig":"19"},{"size":1351,"mtime":1612814419739,"results":"34","hashOfConfig":"19"},{"size":5696,"mtime":1612807868943,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"18f01r6",{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"38"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"38"},"/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/App.js",[],["80","81"],"/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/Login.js",["82"],"import React, { useState } from 'react'\nimport { useHistory, Link } from 'react-router-dom'\n// import { Button } from '@material-ui/core'\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n// import Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright Â© '}\n      <Link to={'/'} color=\"inherit\" href=\"/\">\n        LFG\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100vh',\n  },\n  image: {\n    backgroundImage: 'url(/images/wanella.gif)',\n    backgroundRepeat: 'no-repeat',\n    backgroundColor:\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}))\n\nfunction Login({ setCurrentUser, firstGame, handleLogin }) {\n    const [username, setUsername] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [errors, setErrors] = useState(\"\")\n    const history = useHistory()\n    const classes = useStyles()\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        const formData = { username, password };\n        //console.log(formData)\n    \n        fetch(`${process.env.REACT_APP_API_BASE_URL}/login`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(formData),\n        })\n          .then((r) => r.json())\n          .then((data) => {\n            // then set that user in state in our App component\n            console.log(data.user)\n            if (data.user) {\n              handleLogin(data.user)\n              localStorage.setItem(\"token\", data.token)\n            } else {\n              console.log(data)\n              setErrors(data.error)\n              // alert('Incorret username or password')\n            }\n          });\n    }\n\n    // function login() {\n    //     fetch(`${process.env.REACT_APP_API_BASE_URL}/`, {\n    //         method: \"POST\",\n    //         })\n    //     .then((r) => r.json())\n    //     .then(data => {\n    //         setCurrentUser(data)\n    //         history.push(`/games/${firstGame.id}`)\n    //     });\n    // }\n\n    console.log(firstGame)\n\n    return (\n      <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <form className={classes.form} noValidate>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Username\"\n              name=\"username\"\n              // autoComplete=\"username\"\n              autoFocus\n              value={username}\n              onChange={(e) => setUsername(e.target.value)}\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            <div className=\"errors\">{errors}</div>\n            <FormControlLabel\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\n              label=\"Remember me\"\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              onClick={handleSubmit}\n            >\n              Sign In\n            </Button>\n            <Grid container>\n              <Grid item xs>\n                <Link to={`/games/${firstGame.id}`} variant=\"body2\">\n                  Continue as Guest\n                </Link>\n              </Grid>\n              <Grid item>\n                <Link to={`/signup`} variant=\"body2\">\n                  {\"Don't have an account? Sign Up\"}\n                </Link>\n              </Grid>\n            </Grid>\n            <Box mt={5}>\n              <Copyright />\n            </Box>\n          </form>\n        </div>\n      </Grid>\n    </Grid>\n        // <div className=\"login\">\n        //     <video autoPlay muted loop>\n        //         <source src=\"/Atlias.mp4\" type=\"video/mp4\"/>\n        //     </video>\n        //     <div className=\"login-form-box\">\n        //         <form className=\"login-form\" onSubmit={handleSubmit}>\n        //             <h3>Welcome to LFG</h3>\n        //             <label htmlFor=\"username\">Username</label>\n        //             <input\n        //             type=\"text\"\n        //             id=\"username\"\n        //             autoComplete=\"off\"\n                    // value={username}\n                    // onChange={(e) => setUsername(e.target.value)}\n        //             />\n        //             <label htmlFor=\"password\">Password</label>\n        //             <input\n        //             type=\"password\"\n        //             id=\"password\"\n                    // value={password}\n                    // onChange={(e) => setPassword(e.target.value)}\n        //             autoComplete=\"current-password\"\n        //             />\n        //             <Button type=\"submit\" className='submit-button'>Login</Button>\n        //         </form>\n        //         <Button> Login </Button>\n        //         <button onClick={login}>Login</button>\n        //     </div>\n        // </div>\n    )\n}\n\nexport default Login\n","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/GamePage.js",[],"/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/UserCard.js",[],"/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/index.js",[],"/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/Nav.js",["83","84","85","86","87"],"import React, { useState } from 'react'\nimport { useLocation, useHistory } from 'react-router-dom'\nimport { Button, AppBar, Toolbar, Typography } from '@material-ui/core'\nimport { makeStyles, fade } from '@material-ui/core/styles'\nimport IconButton from '@material-ui/core/IconButton';\nimport InputBase from '@material-ui/core/InputBase';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Avatar from '@material-ui/core/Avatar';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\n\nconst useStyles = makeStyles((theme) => ({\n    grow: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n        marginLeft: theme.spacing(1),\n    },\n    title: {\n        flexGrow: 1,\n        display: 'none',\n        [theme.breakpoints.up('sm')]: {\n            display: 'block',\n        },\n    },\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        '&:hover': {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginRight: theme.spacing(2),\n        marginLeft: 0,\n        width: '100%',\n        // height:'50%',\n        display:'flex',\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: theme.spacing(3),\n            width: 'auto',\n        },\n    },\n    searchIcon: {\n        padding: theme.spacing(0, 2),\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    inputRoot: {\n        color: 'inherit',\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 0),\n        // vertical padding + font size from searchIcon\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('md')]: {\n            width: '12ch',\n            '&:focus': {\n                width: '22ch',\n            },\n        },\n    },\n    sectionDesktop: {\n        display: 'none',\n        [theme.breakpoints.up('md')]: {\n            display: 'flex',\n        },\n    },\n    large: {\n        width: theme.spacing(7),\n        height: theme.spacing(7),\n    },\n    login: {\n        marginRight: theme.spacing(1),\n    },\n    form: {\n        width: '100%',\n    }\n}));\n\n\nfunction Nav({ currentUser, handleLogout }) {\n    const [search, setSearch] = useState(\"\")\n    const [anchorEl, setAnchorEl] = useState(null)\n    const history = useHistory()\n    const classes = useStyles()\n    const location = useLocation()\n    const isMenuOpen = Boolean(anchorEl)\n\n    const handleProfileMenuOpen = (event) => {\n        console.log(event.currentTarget)\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleMenuCloseProfile = () => {\n        history.push(`/users/${currentUser.id}`)\n        setAnchorEl(null);\n    };\n\n    const handleLogoutClose = () => {\n        setAnchorEl(null);\n        handleLogout()\n    }\n\n    const handleMenuClose = () => {\n        setAnchorEl(null);\n    };\n\n    const menuId = 'primary-search-account-menu';\n    const renderMenu = (\n        <Menu\n            anchorEl={anchorEl}\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n            id={menuId}\n            keepMounted\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n            open={isMenuOpen}\n            onClose={handleMenuClose}\n        >\n            <MenuItem onClick={handleMenuCloseProfile}>Profile</MenuItem>\n            <MenuItem onClick={handleLogoutClose}>Logout</MenuItem>\n        </Menu>\n    );\n\n    const handleSearch = (event) => {\n        event.preventDefault()\n\n        console.log(search)\n    }\n    \n    // console.log(search)\n    \n    if (location.pathname === \"/\" || location.pathname === \"/signup\") return null\n    return (\n    <div className={classes.grow}>\n        \n    <AppBar position=\"static\">\n        <Toolbar>\n        <div className=\"logo\">\n            <img height=\"50px\" width=\"110px\" src=\"https://i.imgur.com/NoEHEH8.png\" />\n        </div>\n        <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n        >\n            <MenuIcon />\n        </IconButton>\n        <Typography className={classes.title} variant=\"h6\" noWrap onClick={() => history.push(\"/games\")}>\n            Games\n        </Typography>\n        \n        \n        <div className={classes.grow} />\n        <div className={classes.search}>\n                <div className={classes.searchIcon}>\n                    <SearchIcon />\n                </div>\n                <InputBase\n                placeholder=\"Searchâ¦\"\n                classes={{\n                    root: classes.inputRoot,\n                    input: classes.inputInput,\n                }}\n                inputProps={{ 'aria-label': 'search' }}\n                />\n                {/* <form className={classes.form} onSubmit={handleSearch}>\n                <Autocomplete\n                    freeSolo\n                    fullWidth\n                    autoSelect={true}\n                    id=\"free-solo-2-demo\"\n                    disableClearable\n                    options={users.map((user) => \n                        user.username\n                        )}\n                    onSubmit={() => console.log(search)}\n                    inputValue={search}\n                    onInputChange={(e) => setSearch(e.target.value)}\n                    renderInput={(params) => (\n                    <TextField\n                        {...params}\n                        label=\"Search Users\"\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        className={classes.autocomplete}\n                        // value={search}\n                        // onChange={(e) => setSearch(e.target.value)}\n                        // classes={{\n                        //     root: classes.inputRoot,\n                        //     input: classes.inputInput,\n                        // }}\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                />\n                </form> */}\n        </div>\n        \n        \n        <div className={classes.sectionDesktop}>\n            \n            {/* <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n            <Badge badgeContent={4} color=\"secondary\">\n                <MailIcon />\n            </Badge>\n            </IconButton>\n            <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\n            <Badge badgeContent={17} color=\"secondary\">\n                <NotificationsIcon />\n            </Badge>\n            </IconButton> */}\n            {!currentUser ? \n            <div>\n                <Button onClick={() => history.push('/')}variant=\"outlined\" color=\"inherit\" className={classes.login}>Login</Button>\n                <Button color=\"secondary\" variant=\"contained\">Signup</Button>\n            </div>\n            \n            :\n            <div>\n            <IconButton\n            edge=\"end\"\n            aria-label={\"current user\"}\n            aria-controls={menuId}\n            aria-haspopup=\"true\"\n            onClick={handleProfileMenuOpen}\n            color=\"inherit\"\n            >\n                <Avatar src={currentUser.avatar} className={classes.large}/>\n            </IconButton>\n            </div>}\n        </div>\n        </Toolbar>\n    </AppBar>\n    {renderMenu}\n    </div>\n    );\n\n    // const location = useLocation()\n    // if (location.pathname === \"/\") return null\n    // return (\n    //     <AppBar className=\"nav\" position=\"static\">\n    //         <Toolbar>  \n    //             <Typography component={'div'} className=\"nav-games\">\n    //                 <NavLink to={\"/games\"}>\n    //                     Games\n    //                 </NavLink>\n    //             </Typography>              \n    //             <Typography component={'div'} className=\"user-nav-div\">\n    //                 {!currentUser ?\n    //                     <div>\n    //                         <NavLink exact to={\"/\"}>\n    //                             Login\n    //                         </NavLink>\n    //                     </div> \n    //                     :\n    //                     <div className=\"logged-in\">\n    //                         <div className='welcome-div'>\n    //                             <NavLink exact to={`/users/${currentUser.id}`} className=\"nav-button\">\n    //                                <Typography>Welcome, {currentUser.username}!</Typography> \n    //                             </NavLink>\n    //                             <Button color=\"secondary\" variant=\"contained\" className=\"nav-button\" onClick={handleLogout}>Logout</Button>\n    //                         </div>\n    //                     </div>} \n    //             </Typography>\n    //         </Toolbar>\n    //     </AppBar>\n    // )\n}\n\n\n\nexport default Nav\n","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/AddGame.js",["88"],"import React, { useState } from 'react'\nimport GameCard from './GameCard'\nimport { Grid, Typography } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\n\nfunction AddGame({ games, newUserGame }) {\n    const [search, setSearch] =  useState(\"\")\n\n    const sortedGames = games.sort((gameA, gameB) => {\n        if (gameA.user_games.length > gameB.user_games.length) {\n            return -1\n        }\n        if (gameA.user_games.length < gameB.user_games.length) {\n            return 1\n        } \n        return 0\n    }).filter(game => game.name.toLowerCase().includes(search.toLowerCase()))\n    \n     const gameArray = sortedGames.map(game => \n        <GameCard key={game.id} game={game} newUserGame={newUserGame}/>    \n    )\n    \n    return (\n        <div>\n            <Typography variant={\"h2\"}>All Games</Typography>\n            <TextField\n                id=\"game-search\"\n                style={{ margin: 8 }}\n                placeholder=\"Search Games...\"\n                fullWidth\n                margin=\"normal\"\n                InputLabelProps={{\n                    shrink: true,\n                }}\n                variant=\"filled\"\n                value={search}\n                onChange={(e) => setSearch(e.target.value)}\n            />\n            <Grid container spacing={2} className=\"games-container\">\n                    {gameArray}\n            </Grid>\n        </div>\n    )\n}\n\nexport default AddGame\n","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/GameCard.js",[],"/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/UserShow.js",[],"/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/UserGameDetail.js",["89"],"import React, { useEffect, useState } from 'react';\nimport { useParams, Link, useHistory } from 'react-router-dom';\n// import Modal from 'react-modal';\nimport PlaySessionForm from './PlaySessionForm';\nimport EditUserGameDetail from './EditUserGameDetail';\nimport { Grid, Typography, Button, Box, Divider, Card } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport Rating from '@material-ui/lab/Rating';\nimport Avatar from '@material-ui/core/Avatar';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\n\n\n\n\n\n// Modal.setAppElement('#root')\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      width: '100%',\n      maxWidth: 360,\n      backgroundColor: theme.palette.background.paper,\n    },\n    section1: {\n      margin: theme.spacing(3, 2),\n    },\n    section2: {\n      margin: theme.spacing(1),\n    },\n    section3: {\n      margin: theme.spacing(3, 1, 1),\n    },\n    margin: {\n        margin: theme.spacing(1),\n    },\n    modal: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    paper: {\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n    },\n    details: {\n        display: 'flex',\n        flexDirection: 'column',\n        width: \"100%\"\n    },\n    content: {\n        // flex: '1 0 auto',\n        width: \"100%\",\n        paddingLeft: \"0px\"\n    },\n    root: {\n        display: 'flex',\n    },\n    cover: {\n        width: 150,\n    },\n    large: {\n        width: theme.spacing(10),\n        height: theme.spacing(10),\n    },\n    box: {\n        height: \"100%\",\n        width: \"100%\"\n    }\n}));\n\nfunction UserGameDetail({ currentUser }) {\n    const [isLoaded, setIsLoaded] = useState(false)\n    const [userGame, setUserGame] = useState(null)\n    const [user, setUser] = useState(null)\n    const [open, setOpen] = useState(false)\n    // const [modalIsOpen, setIsOpen] = React.useState(false);\n    //var subtitle;\n    const params = useParams()\n    const classes = useStyles()\n    const history = useHistory()\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n    \n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    function handleDelete() {\n        fetch(`${process.env.REACT_APP_API_BASE_URL}/user_games/${params.id}`, {\n            method: \"DELETE\"\n        })\n        .then(resp => resp.json)\n        .then(history.push(`/users/${user.id}`))\n    }\n\n    useEffect(() => {\n        fetch(`${process.env.REACT_APP_API_BASE_URL}/user_games/${params.id}`)\n            .then(resp => resp.json())\n            .then(data => {\n                setUserGame(data)\n                //setUser(data.user)\n                \n                fetch(`${process.env.REACT_APP_API_BASE_URL}/users/${data.user.id}`)\n                    .then(resp => resp.json())\n                    .then(userr => {\n                        console.log(userr)\n                        setUser(userr)\n                        \n                        setIsLoaded(true)\n                    })\n            })\n    }, [params.id])\n\n\n    if (!isLoaded) return <h2>Loading...</h2>\n    return (\n        <Grid container spacing={4} className=\"user-game-page\" component={\"div\"}>\n            <Grid item xs={8} container spacing={2} className=\"user-game-detail\">\n                <Grid item xs={12} >\n                    <div className=\"user-game-img-div\">\n                        <img height=\"100%\" width=\"100%\" className=\"user-game-img\" src={userGame.image} alt=\"placeholder\" />\n                    </div>\n                </Grid>\n                <Grid item xs={12} className=\"user-game-detail\" component={\"div\"}>\n                    <Typography paragraph variant={\"h4\"}> Details </Typography>\n                    <Paper>\n                        <Box p={2} m={1} >\n                            <Typography className={classes.section2}> Level: {userGame.level} </Typography>\n                            <Typography className={classes.section2}> Platform: {userGame.platform} </Typography>\n                            <Typography className={classes.section2}> Server: {userGame.server} </Typography>\n                            <Divider variant=\"middle\"/>\n                            <Typography paragraph className={classes.section2} > {userGame.details} </Typography>\n                        </Box>\n                    </Paper>\n                </Grid>\n                \n                <Grid item xs={12} className=\"user-reviews\" component={\"div\"}>\n                    <Grid container className=\"review-head\" justify=\"space-between\">\n                        <Typography variant={\"h4\"}>\n                            Comments <Typography display=\"inline\" color=\"textSecondary\">({user.reviews_as_reviewee.length})</Typography>\n                        </Typography>\n                        <Typography variant={\"h6\"}>\n                            {user.reviews_as_reviewee.length === 0 ? \"0\" :\n                                \n                                (user.reviews_as_reviewee.map(review => review.rating)\n                                .reduce((a, b) => a + b, 0) / user.reviews_as_reviewee.length).toFixed(2)\n                            } Score\n                        </Typography>\n                    </Grid>\n                    {user.reviews_as_reviewee.reverse().map(review => {\n                        return (\n                            <Box mt={2} key={review.id}>\n                                <Card className={classes.root} >\n                                    <CardMedia\n                                        className={classes.cover}\n                                    >\n                                        <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\" className={classes.box}>\n                                            <Avatar src={review.reviewer.avatar} className={classes.large}/>\n                                        </Box>     \n                                    </CardMedia>\n                                    <div className={classes.details}>\n                                        <CardContent className={classes.content}>\n                                            <Typography className={classes.section2} variant={\"h6\"}>\n                                                {review.reviewer.username}\n                                            </Typography>\n                                            <Rating className={classes.section2} name=\"read-only\" precision={0.5} value={review.rating} size=\"small\" readOnly />\n                                            <Divider variant=\"middle\"/>\n                                            <Typography paragraph className={classes.section2}>{review.contents}</Typography>\n                                        </CardContent>\n                                    </div>\n                                </Card>\n                            </Box>\n                        )\n                    })}\n                </Grid>\n            </Grid>\n            <Grid item xs={4} component={\"div\"} className=\"user-detail\">\n                    <img height=\"50%\" width=\"100%\" src={user.avatar} alt={user.username}/>\n                     \n                        <Link to={`/users/${user.id}`} style={{ textDecoration: 'none' }}>\n                            <Typography paragraph variant={\"h3\"}>{user.username}</Typography>\n                        </Link>\n\n                    {!currentUser ? \n                    null  \n                    : currentUser.id === userGame.user.id ? \n                    <div>\n                        <Button onClick={handleDelete} className={classes.section2} color=\"secondary\" variant=\"contained\"> Remove this game</Button>\n                        <EditUserGameDetail userGame={userGame} setUserGame={setUserGame}/>\n                    </div>\n                    :\n                    <div className=\"modal-button\">\n                        {/* Needs to be logged in to open this modal , or needs to open login modal if clicked on */}\n                        <Button color=\"secondary\" variant=\"contained\" type=\"button\" size=\"small\" onClick={handleOpen}>\n                            Let's Game\n                        </Button>\n                    </div>}\n            </Grid>\n\n            <Modal\n                aria-labelledby=\"transition-modal-title\"\n                aria-describedby=\"transition-modal-description\"\n                className={classes.modal}\n                open={open}\n                onClose={handleClose}\n                closeAfterTransition\n                BackdropComponent={Backdrop}\n                BackdropProps={{\n                timeout: 500,\n                }}\n            >\n                <Fade in={open}>\n                <div className={classes.paper}>\n                    <PlaySessionForm currentUser={currentUser} userGame={userGame} setOpen={setOpen}/>\n                </div>\n                </Fade>\n            </Modal>\n            \n        </Grid>\n    )\n}\n\nexport default UserGameDetail\n","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/PlaySessionForm.js",[],"/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/ReviewForm.js",["90","91","92","93","94","95","96","97"],"import React, { useState } from 'react'\nimport Rating from '@material-ui/lab/Rating';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { FormControl, Button, FormLabel, InputLabel, Input, TextField, TextareaAutosize, Typography, Box ,Card ,Divider ,Grid } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport CardMedia from '@material-ui/core/CardMedia';\n// import CardActionArea from '@material-ui/core/CardActionArea';\n// import CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      width: '25ch',\n    },\n    label: {\n        margin: theme.spacing(2),\n    },\n    cardContent: {\n        alignItems: \"auto\"\n    }\n}));\n\nfunction ReviewForm({ currentUser, sessionId, reviewee }) {\n    const [contents, setContents] = useState(\"\")\n    const [rating, setRating] = useState(1)\n    const classes = useStyles()\n\n    console.log(rating)\n    console.log(reviewee)\n\n    function handleSubmit(event) {\n        event.preventDefault()\n\n        const reviewData = {\n            reviewer_id: parseInt(currentUser.id),\n            reviewee_id: parseInt(reviewee.id),\n            contents: contents,\n            rating: parseInt(rating),\n            play_session_id: parseInt(sessionId)\n        }\n\n        console.log(reviewData)\n        fetch(`${process.env.REACT_APP_API_BASE_URL}/reviews`, {\n            method: 'POST',\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(reviewData)\n        })\n        .then(resp => resp.json())\n        .then(newReviewObj => {\n            console.log(newReviewObj)\n            if (newReviewObj.id === null) {\n                alert(\"Can only review a user once!\")\n            }\n        })\n    }\n    return (\n        <Grid container>\n            <Grid item xs={4}/>\n            <Card alignContent=\"center\">\n                <CardHeader \n                    title=\"Review\"\n                >\n                    {\"hEY\"}\n                </CardHeader>\n                <CardMedia>\n                    <img height=\"400px\"src={reviewee.avatar} alt={reviewee.username} />\n                </CardMedia>\n                    <CardContent className={classes.cardContent}>\n                        <FormControl onSubmit={handleSubmit}>\n                            <label>\n                                Review {reviewee.username}<br/>\n                                <textarea name=\"content\" value={contents} onChange ={event => setContents(event.target.value)}/>\n                                <br/>\n                                {/* Rate: <select name=\"rating\" id=\"rating\" form=\"review\" value={rating} onChange={event => setRating(event.target.value)}>\n                                    <option value=\"1\">1</option>\n                                    <option value=\"2\">2</option>\n                                    <option value=\"3\">3</option>\n                                    <option value=\"4\">4</option>\n                                    <option value=\"5\">5</option>              \n                                </select> */}\n                                <>\n                                <FormLabel> Rate: </FormLabel>\n                                <Rating\n                                    name=\"rating\"\n                                    precision={0.5}\n                                    value={rating}\n                                    onChange={(event, newValue) => {\n                                        setRating(newValue);\n                                    }}\n                                />\n                                </>\n                            </label>\n                            <Button variant=\"contained\" color=\"secondary\" onClick={handleSubmit} className=\"submit-button\">Submit Review</Button>\n                        </FormControl>\n                    </CardContent>\n                </Card>\n            <Grid item xs={4}/>\n        </Grid>\n    )\n}\n\n\n\nexport default ReviewForm\n","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/EditUserInfo.js",[],"/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/EditUserGameDetail.js",[],"/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/theme.js",["98","99"],"import { createMuiTheme } from '@material-ui/core/styles';\nimport purple from '@material-ui/core/colors/purple';\nimport green from '@material-ui/core/colors/green';\n\nconst theme = createMuiTheme({\n  palette: {\n    type: \"dark\"\n  },\n});\n\nexport default theme",["100","101"],"/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/UserGameCard.js",["102"],"import React from 'react'\nimport { Link, useLocation } from 'react-router-dom'\nimport Card from '@material-ui/core/Card'\n// import CardActions from '@material-ui/core/CardActions';\n// import CardContent from '@material-ui/core/CardContent';\n// import { makeStyles } from '@material-ui/styles'\nimport { Grid } from '@material-ui/core';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardActionArea from '@material-ui/core/CardActionArea';\n\nfunction UserGameCard({ userGame }) {\n    const { name, image} =  userGame.game\n    const location = useLocation()\n    // console.log(location.pathname === \"/games\")\n    // console.log(userGame.game)\n\n    return (\n        <Grid item xs={4}>\n            <Card className=\"card\" component={\"div\"}>\n            <CardActionArea component={\"div\"}>\n                <Link to={`/user_games/${userGame.id}`}>\n                    <CardMedia\n                        component={\"div\"}\n                        className=\"game-card-img\"\n                        style={{height: \"200px\"}} \n                        // image={image} \n                        title={name}>\n                            <img src={image} alt={name}/>\n                            \n                    </CardMedia>\n                </Link>\n            </CardActionArea>\n            </Card>\n        </Grid>\n    )\n}\n\nexport default UserGameCard","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/SignUp.js",["103","104","105","106"],"import React, { useState } from 'react'\nimport { useHistory, Link } from 'react-router-dom'\n// import { Button } from '@material-ui/core'\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n// import Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright Â© '}\n      <Link color=\"inherit\" to={\"/\"}>\n        LFG\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100vh',\n  },\n  image: {\n    backgroundImage: 'url(/images/wanella.gif)',\n    backgroundRepeat: 'no-repeat',\n    backgroundColor:\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}))\n\nfunction SignUp({ firstGame, handleSignUp }) {\n    const [username, setUsername] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [discord, setDiscord] = useState(\"\")\n    const [errors, setErrors] = useState(\"\")\n    const history = useHistory()\n    const classes = useStyles()\n    const defaultImg = \"https://i.pinimg.com/originals/b1/92/4d/b1924dce177345b5485bb5490ab3441f.jpg\"\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        const formData = { \n            avatar: defaultImg, \n            name: \"\",\n            bio: \"\",\n            lfg: true,\n            username, \n            password, \n            discord \n        }\n        //console.log(formData)\n    \n        fetch(`${process.env.REACT_APP_API_BASE_URL}/signup`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(formData),\n        })\n          .then((r) => r.json())\n          .then((data) => {\n            // then set that user in state in our App component\n            console.log(data.user)\n            if (data.user) {\n                handleSignUp(data.user)\n                localStorage.setItem(\"token\", data.token)\n            } else {\n                console.log(data)\n                setErrors(data.error)\n              // alert('Incorret username or password')\n            }\n          });\n    }\n\n    return (\n      <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign up\n          </Typography>\n          <form className={classes.form} noValidate>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Username\"\n              name=\"username\"\n              // autoComplete=\"username\"\n              autoFocus\n              value={username}\n              onChange={(e) => setUsername(e.target.value)}\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"discord\"\n              label=\"Discord\"\n              type=\"discord\"\n              id=\"discord\"\n              value={discord}\n              onChange={(e) => setDiscord(e.target.value)}\n            />\n\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              onClick={handleSubmit}\n            >\n              Sign Up\n            </Button>\n            <Grid container>\n              <Grid item xs>\n                <Link to={`/games/${firstGame.id}`} variant=\"body2\">\n                  Continue as Guest\n                </Link>\n              </Grid>\n              <Grid item>\n                <Link to={\"/\"} variant=\"body2\">\n                  {\"Sign in\"}\n                </Link>\n              </Grid>\n            </Grid>\n            <Box mt={5}>\n              <Copyright />\n            </Box>\n          </form>\n        </div>\n      </Grid>\n    </Grid>\n    )\n}\n\nexport default SignUp\n",{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":66,"column":11,"nodeType":"113","messageId":"114","endLine":66,"endColumn":18},{"ruleId":"111","severity":1,"message":"115","line":12,"column":8,"nodeType":"113","messageId":"114","endLine":12,"endColumn":17},{"ruleId":"111","severity":1,"message":"116","line":13,"column":8,"nodeType":"113","messageId":"114","endLine":13,"endColumn":20},{"ruleId":"111","severity":1,"message":"117","line":93,"column":20,"nodeType":"113","messageId":"114","endLine":93,"endColumn":29},{"ruleId":"111","severity":1,"message":"118","line":135,"column":11,"nodeType":"113","messageId":"114","endLine":135,"endColumn":23},{"ruleId":"119","severity":1,"message":"120","line":150,"column":13,"nodeType":"121","endLine":150,"endColumn":86},{"ruleId":"111","severity":1,"message":"122","line":4,"column":10,"nodeType":"113","messageId":"114","endLine":4,"endColumn":20},{"ruleId":"123","severity":1,"message":"124","line":62,"column":5,"nodeType":"125","messageId":"126","endLine":62,"endColumn":9},{"ruleId":"111","severity":1,"message":"127","line":4,"column":42,"nodeType":"113","messageId":"114","endLine":4,"endColumn":52},{"ruleId":"111","severity":1,"message":"128","line":4,"column":54,"nodeType":"113","messageId":"114","endLine":4,"endColumn":59},{"ruleId":"111","severity":1,"message":"115","line":4,"column":61,"nodeType":"113","messageId":"114","endLine":4,"endColumn":70},{"ruleId":"111","severity":1,"message":"129","line":4,"column":72,"nodeType":"113","messageId":"114","endLine":4,"endColumn":88},{"ruleId":"111","severity":1,"message":"130","line":4,"column":90,"nodeType":"113","messageId":"114","endLine":4,"endColumn":100},{"ruleId":"111","severity":1,"message":"131","line":4,"column":102,"nodeType":"113","messageId":"114","endLine":4,"endColumn":105},{"ruleId":"111","severity":1,"message":"132","line":4,"column":113,"nodeType":"113","messageId":"114","endLine":4,"endColumn":120},{"ruleId":"111","severity":1,"message":"133","line":5,"column":8,"nodeType":"113","messageId":"114","endLine":5,"endColumn":13},{"ruleId":"111","severity":1,"message":"134","line":2,"column":8,"nodeType":"113","messageId":"114","endLine":2,"endColumn":14},{"ruleId":"111","severity":1,"message":"135","line":3,"column":8,"nodeType":"113","messageId":"114","endLine":3,"endColumn":13},{"ruleId":"107","replacedBy":"136"},{"ruleId":"109","replacedBy":"137"},{"ruleId":"111","severity":1,"message":"138","line":13,"column":11,"nodeType":"113","messageId":"114","endLine":13,"endColumn":19},{"ruleId":"111","severity":1,"message":"139","line":8,"column":8,"nodeType":"113","messageId":"114","endLine":8,"endColumn":24},{"ruleId":"111","severity":1,"message":"140","line":9,"column":8,"nodeType":"113","messageId":"114","endLine":9,"endColumn":16},{"ruleId":"111","severity":1,"message":"141","line":66,"column":12,"nodeType":"113","messageId":"114","endLine":66,"endColumn":18},{"ruleId":"111","severity":1,"message":"112","line":67,"column":11,"nodeType":"113","messageId":"114","endLine":67,"endColumn":18},"no-native-reassign",["142"],"no-negated-in-lhs",["143"],"no-unused-vars","'history' is assigned a value but never used.","Identifier","unusedVar","'TextField' is defined but never used.","'Autocomplete' is defined but never used.","'setSearch' is assigned a value but never used.","'handleSearch' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'makeStyles' is defined but never used.","no-dupe-keys","Duplicate key 'root'.","ObjectExpression","unexpected","'InputLabel' is defined but never used.","'Input' is defined but never used.","'TextareaAutosize' is defined but never used.","'Typography' is defined but never used.","'Box' is defined but never used.","'Divider' is defined but never used.","'Paper' is defined but never used.","'purple' is defined but never used.","'green' is defined but never used.",["142"],["143"],"'location' is assigned a value but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'errors' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]