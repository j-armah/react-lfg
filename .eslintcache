[{"/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/App.js":"1","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/Login.js":"2","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/GamePage.js":"3","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/UserCard.js":"4","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/index.js":"5","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/Nav.js":"6","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/AddGame.js":"7","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/GameCard.js":"8","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/UserShow.js":"9","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/UserGameDetail.js":"10","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/PlaySessionForm.js":"11","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/ReviewForm.js":"12","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/EditUserInfo.js":"13","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/EditUserGameDetail.js":"14","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/theme.js":"15","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/UserGameCard.js":"16","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/SignUp.js":"17","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/InboxComponent.js":"18","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/Inbox.js":"19","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/Dashboard.js":"20","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/dashboard/SentComments.js":"21","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/dashboard/EditReview.js":"22","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/dashboard/ReceivedComments.js":"23","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/UserGameDetailCard.js":"24"},{"size":8382,"mtime":1613339435815,"results":"25","hashOfConfig":"26"},{"size":5294,"mtime":1613334029597,"results":"27","hashOfConfig":"26"},{"size":6110,"mtime":1613068473302,"results":"28","hashOfConfig":"26"},{"size":2315,"mtime":1612926978299,"results":"29","hashOfConfig":"26"},{"size":939,"mtime":1612566091729,"results":"30","hashOfConfig":"26"},{"size":11430,"mtime":1613339138091,"results":"31","hashOfConfig":"26"},{"size":1495,"mtime":1613011697106,"results":"32","hashOfConfig":"26"},{"size":1740,"mtime":1612926063910,"results":"33","hashOfConfig":"26"},{"size":26255,"mtime":1613337025082,"results":"34","hashOfConfig":"26"},{"size":17197,"mtime":1613350530853,"results":"35","hashOfConfig":"26"},{"size":3682,"mtime":1613096550135,"results":"36","hashOfConfig":"26"},{"size":7898,"mtime":1613347013537,"results":"37","hashOfConfig":"26"},{"size":4457,"mtime":1612814457462,"results":"38","hashOfConfig":"26"},{"size":3937,"mtime":1612749101955,"results":"39","hashOfConfig":"26"},{"size":257,"mtime":1612543059693,"results":"40","hashOfConfig":"26"},{"size":1323,"mtime":1613011196963,"results":"41","hashOfConfig":"26"},{"size":5630,"mtime":1613334062162,"results":"42","hashOfConfig":"26"},{"size":4710,"mtime":1613011196962,"results":"43","hashOfConfig":"26"},{"size":371,"mtime":1613011710771,"results":"44","hashOfConfig":"26"},{"size":4891,"mtime":1613336651380,"results":"45","hashOfConfig":"26"},{"size":4041,"mtime":1613336498163,"results":"46","hashOfConfig":"26"},{"size":8036,"mtime":1613334775894,"results":"47","hashOfConfig":"26"},{"size":3413,"mtime":1613336474398,"results":"48","hashOfConfig":"26"},{"size":1554,"mtime":1613349830576,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"18f01r6",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"52"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"52"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"52"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"52"},"/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/App.js",[],["111","112"],"/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/Login.js",[],"/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/GamePage.js",["113","114"],"import React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport UserCard from './UserCard'\nimport GameCard from './GameCard'\nimport { Grid, Typography, Box, Button, Paper } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles';\nimport SportsEsportsIcon from '@material-ui/icons/SportsEsports';\nimport Popover from '@material-ui/core/Popover';\n\nconst useStyles = makeStyles((theme) => ({\n    gamePage: {\n        position: 'relative',\n    },\n    gameBanner: {\n        // position: 'absolute',\n        height: \"40vh\",\n        backgroundSize: \"cover\",\n        backgroundRepeat: \"no-repeat\",\n        backgroundPosition: '0 20%',\n        zIndex: 0\n    },\n    users: {\n        // position: 'absolute',\n        marginTop: -140,\n    },\n    bannerGrid: {\n        height: \"100%\"\n    },\n    box: {\n        height: \"60%\",\n        // position: \"fixed\",\n        // marginLeft: \"calc(100% - 1600px)\",\n        // right: \"20%\",\n        // marginLeft: \"100px\",\n    },\n    popover: {\n        pointerEvents: 'none',\n    },\n    paper: {\n        padding: theme.spacing(1),\n    },\n    gameRec: {\n        height: \"600px\",\n        width: \"1500px\",\n        // overflow: \"auto\",\n    }\n}));\n\nfunction GamePage({ games }) {\n    const [isLoaded, setIsLoaded] = useState(false)\n    const [game, setGame] = useState(null)\n    const [userGames, setUserGames] = useState([])\n    const [anchorEl, setAnchorEl] = useState(null)\n    const params = useParams()\n    const classes = useStyles()\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const open = Boolean(anchorEl);\n    const id = open ? 'simple-popover' : undefined;\n\n    useEffect(() => {\n        fetch(`${process.env.REACT_APP_API_BASE_URL}/games/${params.id}`)\n            .then(resp => resp.json())\n            .then(data => {\n                setGame(data)\n                setIsLoaded(true)\n            })\n    }, [params.id])\n\n    useEffect(() => {\n        fetch(`${process.env.REACT_APP_API_BASE_URL}/user_games/`)\n            .then(resp => resp.json())\n            .then(data => {\n                const filteredUserGames = data.filter(ug => ug.game_id === parseInt(params.id)).filter(ug => ug.user.lfg === true)\n                setUserGames(filteredUserGames)    \n            })\n    }, [params.id])\n\n    if (!isLoaded) return <h2>Loading...</h2>\n    return (\n\n        <Grid container item className={classes.gamePage} xs={\"auto\"}>\n            <Grid \n                item xs={12} \n                className={classes.gameBanner} \n                component={\"div\"}\n                style={{\n                    backgroundImage: \n                    `linear-gradient(\n                        rgba(38, 38, 38, 0.35),\n                        rgba(38, 38, 38, 0.35),\n                        rgba(38, 38, 38, 0.45),\n                        rgba(38, 38, 38, 0.55), \n                        rgba(38, 38, 38, 0.75),\n                        rgba(38, 38, 38, 0.85),\n                        rgba(38, 38, 38, 0.95),   \n                        rgba(38, 38, 38, 1)\n                    ),\n                    url(\"${game.splash}\")`,\n                }}\n            >\n                <Grid container className={classes.bannerGrid}>\n                    <Grid item xs={false} sm={1} />\n                        <Grid item xs={10} className={classes.bannerGrid}>\n                            <Box \n                                className={classes.box}\n                                display=\"flex\"\n                                alignItems=\"center\"\n                            >\n                                <Button\n                                aria-describedby={id}\n                                onClick={handleClick}\n                                >\n                                    <SportsEsportsIcon />\n                                </Button>\n                                <Typography variant={\"h3\"}> {game.name} </Typography>\n                                <Popover\n                                    id={id}\n                                    open={open}\n                                    anchorEl={anchorEl}\n                                    onClose={handleClose}\n                                    anchorOrigin={{\n                                        vertical: 'bottom',\n                                        horizontal: 'left',\n                                    }}\n                                    transformOrigin={{\n                                        vertical: 'top',\n                                        horizontal: 'left',\n                                    }}\n                                >\n                                    <Box p={6} mx=\"auto\" justifyContent=\"center\" alignItems=\"center\" className={classes.gameRec}>\n                                        {/* <Paper className={classes.gameRec}> */}\n                                        <Typography variant={\"h3\"} paragraph> Recommended Games </Typography>\n                                            <Grid container spacing={4}>\n                                                {games.slice(0,9).map(game => <GameCard key={game.id} game={game} handleClose={handleClose}/> )} \n                                            </Grid>\n                                        {/* </Paper> */}\n                                    </Box>\n                                </Popover>\n                            </Box>\n                        </Grid>\n                    <Grid item xs={false} sm={1} />\n                </Grid>\n                \n            </Grid>\n            <Grid item xs={false} sm={1} />\n                <Grid container item xs={10} container spacing={3} className={classes.users}>\n                    \n                    {userGames.map(userGame => \n                        <UserCard key={userGame.id} user={userGame.user} userGameId={userGame.id}/>    \n                    )}\n                </Grid>\n            <Grid item xs={false} sm={1} />\n            \n        </Grid>\n    )\n}\n\nexport default GamePage\n","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/UserCard.js",[],"/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/index.js",[],"/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/Nav.js",["115","116","117","118","119","120","121"],"import React, { useState } from 'react'\nimport { useLocation, useHistory } from 'react-router-dom'\nimport { Button, AppBar, Toolbar, Typography } from '@material-ui/core'\nimport { makeStyles, fade } from '@material-ui/core/styles'\nimport IconButton from '@material-ui/core/IconButton';\nimport InputBase from '@material-ui/core/InputBase';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Avatar from '@material-ui/core/Avatar';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\n\nconst useStyles = makeStyles((theme) => ({\n    grow: {\n        flexGrow: 1,\n    },\n    appBar: {\n        paddingBottom: 0,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n        marginLeft: theme.spacing(1),\n    },\n    title: {\n        // flexGrow: 1,\n        display: 'none',\n        [theme.breakpoints.up('sm')]: {\n            display: 'block',\n        },\n    },\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        '&:hover': {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginRight: theme.spacing(2),\n        marginLeft: 0,\n        width: '100%',\n        // height:'50%',\n        display:'flex',\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: theme.spacing(3),\n            width: 'auto',\n        },\n    },\n    searchIcon: {\n        padding: theme.spacing(0, 2),\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    inputRoot: {\n        color: 'inherit',\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 0),\n        // vertical padding + font size from searchIcon\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('md')]: {\n            width: '12ch',\n            '&:focus': {\n                width: '22ch',\n            },\n        },\n    },\n    sectionDesktop: {\n        display: 'none',\n        [theme.breakpoints.up('md')]: {\n            display: 'flex',\n        },\n    },\n    large: {\n        width: theme.spacing(7),\n        height: theme.spacing(7),\n    },\n    login: {\n        marginRight: theme.spacing(1),\n    },\n    form: {\n        width: '100%',\n    }\n}));\n\n\nfunction Nav({ currentUser, handleLogout, users }) {\n    const [search, setSearch] = useState(\"\")\n    const [anchorEl, setAnchorEl] = useState(null)\n    const history = useHistory()\n    const classes = useStyles()\n    const location = useLocation()\n    const isMenuOpen = Boolean(anchorEl)\n\n    //  test \n    const [value, setValue] = useState(null);\n    const [inputValue, setInputValue] = React.useState('');\n\n    const handleProfileMenuOpen = (event) => {\n        // console.log(event.currentTarget)\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleMenuCloseProfile = () => {\n        history.push(`/users/${currentUser.id}`)\n        setAnchorEl(null);\n    };\n\n    const handleLogoutClose = () => {\n        setAnchorEl(null);\n        handleLogout()\n    }\n\n    const handleMenuCloseInbox = () => {\n        history.push(`/inbox`)\n        setAnchorEl(null);\n    };\n\n    const handleMenuCloseDash = () => {\n        history.push(`/dashboard`)\n        setAnchorEl(null);\n    };\n\n    const handleMenuClose = () => {\n        setAnchorEl(null);\n    };\n\n    const menuId = 'primary-search-account-menu';\n    const renderMenu = (\n        <Menu\n            anchorEl={anchorEl}\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n            id={menuId}\n            keepMounted\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n            open={isMenuOpen}\n            onClose={handleMenuClose}\n        >\n            <MenuItem onClick={handleMenuCloseProfile}>Profile</MenuItem>\n            <MenuItem onClick={handleMenuCloseInbox}>Inbox</MenuItem>\n            <MenuItem onClick={handleMenuCloseDash}>Dashboard</MenuItem>\n            <MenuItem onClick={handleLogoutClose}>Logout</MenuItem> \n        </Menu>\n    );\n    \n    // console.log(value)\n    const handleSearch = (event) => {\n        event.preventDefault()\n\n        // console.log(inputValue)\n        // console.log(value)\n        // debugger\n        if (value !== null) {\n            // console.log(value)\n            const searchUser = users.find(user => value === user.username)\n            history.push(`/users/${searchUser.id}`)\n            setValue(null)\n        }\n        \n    }\n    \n    // console.log(search)\n    \n    if (location.pathname === \"/\" || location.pathname === \"/signup\") return null\n    return (\n    <div className={classes.grow}>\n        \n    <AppBar position=\"static\" className={classes.appBar}>\n        <Toolbar id=\"back-to-top-anchor\">\n        <div className=\"logo\">\n            <img height=\"50px\" width=\"110px\" src=\"https://i.imgur.com/NoEHEH8.png\" />\n        </div>\n        <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n        >\n            <MenuIcon />\n        </IconButton>\n        <Button className={classes.title} onClick={() => history.push(\"/games\")}>\n            All Games\n        </Button>\n        \n        \n        <div className={classes.grow} />\n        <div className={classes.search}>\n                {/* <div className={classes.searchIcon}>\n                    <SearchIcon />\n                </div>\n                <InputBase\n                placeholder=\"Search…\"\n                classes={{\n                    root: classes.inputRoot,\n                    input: classes.inputInput,\n                }}\n                inputProps={{ 'aria-label': 'search' }}\n                /> */}\n            <form onSubmit={handleSearch}>\n                <Autocomplete\n                    value={value}\n                    onChange={(event, newValue) => {\n                    setValue(newValue);\n                    }}\n                    inputValue={inputValue}\n                    onInputChange={(event, newInputValue) => {\n                    setInputValue(newInputValue);\n                    }}\n                    id=\"search-users\"\n                    options={users.sort((userA, userB) => \n                        userB.avg - userA.avg\n                        ).map((user) => \n                        user.username\n                    )}\n        \n                    style={{ width: 300 }}\n                    renderInput={(params) => <TextField {...params} \n                    // InputProps={{\n                    //     startAdornment: (\n                    //     <InputAdornment position=\"start\">\n                    //         <SearchIcon />\n                    //     </InputAdornment>\n                    //     ),\n                    // }}    \n                    label=\"Search users...\" variant=\"filled\" />\n                    }   \n                />\n            </form>\n                {/* <form className={classes.form} onSubmit={handleSearch}>\n                <Autocomplete\n                    // freeSolo\n                    fullWidth\n                    autoSelect={true}\n                    id=\"free-solo-2-demo\"\n                    disableClearable\n                    options={users.map((user) => \n                        user.username\n                        )}\n                    onSubmit={() => console.log(search)}\n                    inputValue={search}\n                    onInputChange={(e) => setSearch(e.target.value)}\n                    renderInput={(params) => (\n                    <TextField\n                        {...params}\n                        label=\"Search Users\"\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        className={classes.autocomplete}\n                        // value={search}\n                        // onChange={(e) => setSearch(e.target.value)}\n                        // classes={{\n                        //     root: classes.inputRoot,\n                        //     input: classes.inputInput,\n                        // }}\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                />\n                </form> */}\n                \n        </div>\n        \n        \n        <div className={classes.sectionDesktop}>\n            \n            {/* <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n            <Badge badgeContent={4} color=\"secondary\">\n                <MailIcon />\n            </Badge>\n            </IconButton>\n            <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\n            <Badge badgeContent={17} color=\"secondary\">\n                <NotificationsIcon />\n            </Badge>\n            </IconButton> */}\n            {!currentUser ? \n            <div>\n                <Button onClick={() => history.push('/')}variant=\"outlined\" color=\"inherit\" className={classes.login}>Login</Button>\n                <Button color=\"secondary\" variant=\"contained\">Signup</Button>\n            </div>\n            \n            :\n            <div>\n            <IconButton\n                edge=\"end\"\n                aria-label={\"current user\"}\n                aria-controls={menuId}\n                aria-haspopup=\"true\"\n                onClick={handleProfileMenuOpen}\n                color=\"inherit\"\n            >\n                <Avatar src={currentUser.avatar} className={classes.large}/>\n            </IconButton>\n            </div>}\n        </div>\n        </Toolbar>\n    </AppBar>\n    {renderMenu}\n    </div>\n    );\n\n    // const location = useLocation()\n    // if (location.pathname === \"/\") return null\n    // return (\n    //     <AppBar className=\"nav\" position=\"static\">\n    //         <Toolbar>  \n    //             <Typography component={'div'} className=\"nav-games\">\n    //                 <NavLink to={\"/games\"}>\n    //                     Games\n    //                 </NavLink>\n    //             </Typography>              \n    //             <Typography component={'div'} className=\"user-nav-div\">\n    //                 {!currentUser ?\n    //                     <div>\n    //                         <NavLink exact to={\"/\"}>\n    //                             Login\n    //                         </NavLink>\n    //                     </div> \n    //                     :\n    //                     <div className=\"logged-in\">\n    //                         <div className='welcome-div'>\n    //                             <NavLink exact to={`/users/${currentUser.id}`} className=\"nav-button\">\n    //                                <Typography>Welcome, {currentUser.username}!</Typography> \n    //                             </NavLink>\n    //                             <Button color=\"secondary\" variant=\"contained\" className=\"nav-button\" onClick={handleLogout}>Logout</Button>\n    //                         </div>\n    //                     </div>} \n    //             </Typography>\n    //         </Toolbar>\n    //     </AppBar>\n    // )\n}\n\n\n\nexport default Nav\n","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/AddGame.js",[],"/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/GameCard.js",[],"/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/UserShow.js",[],"/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/UserGameDetail.js",["122","123"],"/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/PlaySessionForm.js",["124","125"],"import React , { useState } from 'react'\n// import DateTimePicker from 'react-datetime-picker'\nimport { format } from 'date-fns';\n// import DateFnsUtils from '@date-io/date-fns'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { FormControl, Button, FormLabel, Typography, Grid, TextField } from '@material-ui/core';\n// import DateTimePicker from '@material-ui/lab/DateTimePicker';\n// import AdapterDateFns from '@material-ui/lab/AdapterDateFns';\n// import LocalizationProvider from '@material-ui/lab/LocalizationProvider';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      width: '25ch',\n    },\n    label: {\n        margin: theme.spacing(2),\n    }\n}));\n\nfunction PlaySessionForm({ currentUser, userGame, setOpen}) {\n    // const [dateTime, setDateTime] = useState(null)\n    const [dateTime, setDateTime] = useState(new Date());\n    const classes = useStyles()\n\n    // console.log(\"currentUser in form\", currentUser)\n    // console.log(\"usergame on form\", userGame)\n\n\n    function handleSubmit(event) {\n        event.preventDefault()\n\n        const playRequest = {\n            sender_id: currentUser.id,\n            receiver_id: parseInt(userGame.user.id, 10),\n            game_id: parseInt(userGame.game_id, 10),\n            is_accepted: false,\n            rejected: false,\n            time: dateTime\n        }\n\n        console.log(playRequest)\n\n        fetch(`${process.env.REACT_APP_API_BASE_URL}/play_sessions`, {\n            method: 'POST',\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(playRequest)\n        })\n        .then(resp => resp.json())\n        .then(data => {\n            console.log(data)\n            setOpen(false)\n        })\n\n    }\n\n    return (\n        <Grid container className={classes.root} spacing={2}>\n            <Grid item xs={6}>\n                <div>\n                    <Typography paragraph>Request to {userGame.user.username}</Typography>\n                    <img height=\"250px\" src={userGame.user.avatar} alt={userGame.user.username} className=\"request-form-img\"/>\n                </div>\n            </Grid>  \n            <Grid item xs={6}>\n            <FormControl onSubmit={handleSubmit}>\n                \n                <FormLabel >Start Time: </FormLabel>\n{/* \n                <DateTimePicker\n                    onChange={setDateTime}\n                    value={dateTime}\n\n                /> */}\n                {/* <LocalizationProvider dateAdapter={AdapterDateFns}>\n                    <DateTimePicker\n                        renderInput={(props) => <TextField {...props} />}\n                        label=\"DateTimePicker\"\n                        value={value}\n                        onChange={(newValue) => {\n                        setValue(newValue);\n                        }}\n                    />\n                    </LocalizationProvider> */}\n                    <TextField\n                        id=\"datetime-local\"\n                        label=\"Next appointment\"\n                        type=\"datetime-local\"\n                        // defaultValue={format(Date.now, 'YYYY-MM-DD[T]HH:mmZZ')}\n                        style={{ width: 250 }}\n                        InputLabelProps={{\n                        shrink: true,\n                        }}\n                    />\n                <Button color=\"secondary\" variant=\"contained\" onClick={handleSubmit} > Send Request </Button>\n            </FormControl>\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default PlaySessionForm\n","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/ReviewForm.js",["126","127","128","129","130","131","132","133","134","135"],"import React, { useState, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport Rating from '@material-ui/lab/Rating';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { FormControl, Button, FormLabel, InputLabel, Input, TextField, TextareaAutosize, Typography, Box ,Card ,Divider ,Grid } from '@material-ui/core';\nimport CardMedia from '@material-ui/core/CardMedia';\n// import CardActionArea from '@material-ui/core/CardActionArea';\n// import CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      width: '25ch',\n    },\n    label: {\n        margin: theme.spacing(2),\n    },\n    cardContent: {\n        alignItems: \"auto\"\n    }\n}));\n\nfunction ReviewForm({ currentUser, sessionId, reviewee }) {\n    const [contents, setContents] = useState(\"\")\n    const [rating, setRating] = useState(5)\n    const [tags, setTags] = useState([])\n    const [addedTags, setAddedTags] = useState([])\n    const history = useHistory()\n    const classes = useStyles()\n    const [state, setState] = useState({\n        2: false,\n        3: false,\n        4: false,\n        5: false,\n        6: false,\n        7: false,\n        8: false,\n        9: false,\n        10: false,\n    });\n\n\n    console.log(rating)\n    console.log(reviewee)\n    console.log(state)\n\n    \n    const handleChange = (event) => {\n        setState({ ...state, [event.target.name]: event.target.checked });\n    };\n\n\n    useEffect(() => {\n        fetch(`${process.env.REACT_APP_API_BASE_URL}/tags`)\n            .then(resp => resp.json())\n            .then(data => {\n                setTags(data)\n            })\n    }, [])\n\n    function handleSubmit(event) {\n        event.preventDefault()\n\n        const reviewData = {\n            reviewer_id: parseInt(currentUser.id),\n            reviewee_id: parseInt(reviewee.id),\n            contents: contents,\n            rating: parseFloat(rating),\n            play_session_id: parseInt(sessionId)\n        }\n\n        let tagsArray = []\n\n        for (const [key, value] of Object.entries(state)) {\n            if (value === true) {\n                tagsArray = [...tagsArray, parseInt(key)]\n            }\n        }\n\n        console.log(reviewData)\n        console.log(tagsArray)\n\n\n        fetch(`${process.env.REACT_APP_API_BASE_URL}/reviews`, {\n            method: 'POST',\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(reviewData)\n        })\n        .then(resp => resp.json())\n        .then(newReviewObj => {\n            console.log(newReviewObj)\n            // if (newReviewObj.id === null) {\n            //     alert(\"Can only review a user once!\")\n            // } else {\n            //     history.push(`/users/${currentUser.id}`)\n            // }\n            for (const id of tagsArray) {\n                fetch(`${process.env.REACT_APP_API_BASE_URL}/review_tags`, {\n                    method: 'POST',\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    }, \n                    body: JSON.stringify({\n                        review_id: newReviewObj.id,\n                        tag_id: id\n                    })\n                })\n                .then(resp => resp.json())\n                .then(reviewTag => {\n                    console.log(reviewTag)\n                })\n            }\n            console.log(\"done\")\n        })\n    }\n    return (\n        <Grid container>\n            <Grid item xs={4}/>\n            <Card alignContent=\"center\">\n                <CardHeader \n                    title=\"Review\"\n                >\n                    {\"hEY\"}\n                </CardHeader>\n                <CardMedia>\n                    <img height=\"400px\"src={reviewee.avatar} alt={reviewee.username} />\n                </CardMedia>\n                    <CardContent className={classes.cardContent}>\n                        <FormControl onSubmit={handleSubmit}>\n                            <label>\n                                Review {reviewee.username}<br/>\n                                <textarea name=\"content\" value={contents} onChange ={event => setContents(event.target.value)}/>\n                                <br/>\n\n                                <>\n                                <FormLabel> Rate: </FormLabel>\n                                <Rating\n                                    name=\"rating\"\n                                    precision={0.5}\n                                    value={rating}\n                                    onChange={(event, newValue) => {\n                                        setRating(newValue);\n                                    }}\n                                />\n                                </>\n                            </label>\n                            <Box>\n                                {/* {tagBoxes}  */}\n                                <FormControlLabel\n                                    control={<Checkbox checked={state.id} onChange={handleChange} name={2} />}\n                                    label={\"Chill\"}\n                                />\n                                <FormControlLabel\n                                    control={<Checkbox checked={state.id} onChange={handleChange} name={3} />}\n                                    label={\"Tilt-proof\"}\n                                />\n                                <FormControlLabel\n                                    control={<Checkbox checked={state.id} onChange={handleChange} name={4} />}\n                                    label={\"Team player\"}\n                                />\n                                <FormControlLabel\n                                    control={<Checkbox checked={state.id} onChange={handleChange} name={5} />}\n                                    label={\"Friendly\"}\n                                />\n                                <FormControlLabel\n                                    control={<Checkbox checked={state.id} onChange={handleChange} name={6} />}\n                                    label={\"Interactive\"}\n                                />\n                                <FormControlLabel\n                                    control={<Checkbox checked={state.id} onChange={handleChange} name={7} />}\n                                    label={\"Strategic\"}\n                                />\n                                <FormControlLabel\n                                    control={<Checkbox checked={state.id} onChange={handleChange} name={8} />}\n                                    label={\"Humorous\"}\n                                />\n                                <FormControlLabel\n                                    control={<Checkbox checked={state.id} onChange={handleChange} name={9} />}\n                                    label={\"Creative\"}\n                                />\n                                <FormControlLabel\n                                    control={<Checkbox checked={state.id} onChange={handleChange} name={10} />}\n                                    label={\"Carry\"}\n                                />\n                            </Box>\n                            <Button variant=\"contained\" color=\"secondary\" onClick={handleSubmit} className=\"submit-button\">Submit Review</Button>\n                        </FormControl>\n                    </CardContent>\n                </Card>\n            <Grid item xs={4}/>\n        </Grid>\n    )\n}\n\n\n\nexport default ReviewForm\n","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/EditUserInfo.js",[],"/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/EditUserGameDetail.js",[],"/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/theme.js",["136","137"],"import { createMuiTheme } from '@material-ui/core/styles';\nimport purple from '@material-ui/core/colors/purple';\nimport green from '@material-ui/core/colors/green';\n\nconst theme = createMuiTheme({\n  palette: {\n    type: \"dark\"\n  },\n});\n\nexport default theme",["138","139"],"/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/UserGameCard.js",["140"],"import React from 'react'\nimport { Link, useLocation } from 'react-router-dom'\nimport Card from '@material-ui/core/Card'\n// import CardActions from '@material-ui/core/CardActions';\n// import CardContent from '@material-ui/core/CardContent';\n// import { makeStyles } from '@material-ui/styles'\nimport { Grid } from '@material-ui/core';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardActionArea from '@material-ui/core/CardActionArea';\n\nfunction UserGameCard({ userGame }) {\n    const { name, image} =  userGame.game\n    const location = useLocation()\n    // console.log(location.pathname === \"/games\")\n    // console.log(userGame.game)\n\n    return (\n        <Grid item xs={4}>\n            <Card className=\"card\" component={\"div\"}>\n            <CardActionArea component={\"div\"}>\n                <Link to={`/user_games/${userGame.id}`}>\n                    <CardMedia\n                        component={\"div\"}\n                        className=\"game-card-img\"\n                        style={{height: \"180px\"}} \n                        // image={image} \n                        title={name}>\n                            <img  src={image} alt={name}/>\n                    </CardMedia>\n                </Link>\n            </CardActionArea>\n            </Card>\n        </Grid>\n    )\n}\n\nexport default UserGameCard","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/SignUp.js",[],"/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/InboxComponent.js",["141"],"import React, { useEffect } from 'react'\nimport Talk from \"talkjs\";\n\n\nconst InboxComponent = ({ user, otherUser }) => {\n    const talkjsContainer = React.createRef();\n\n    console.log(user)\n\n    useEffect(() => {\n        \n        const currentUser = user;\n\n        Talk.ready.then(() => {\n            let me = new Talk.User({\n                id: currentUser.id,\n                name: currentUser.username,\n                photoUrl: currentUser.avatar,\n                welcomeMessage: \"Hey there! How are you? :-)\"\n            });\n\n            const session = new Talk.Session({\n                appId: \"tZAIJPQN\",\n                me: me\n            });\n\n            // console.log(session)\n            if (otherUser) {\n                let other = new Talk.User({\n                    id: otherUser.id,\n                    name: otherUser.username,\n                    // email: \"Sebastian@example.com\",\n                    photoUrl: otherUser.avatar,\n                    // welcomeMessage: \"Hey, how can I help?\"\n                });\n            \n                const conversation = session.getOrCreateConversation(Talk.oneOnOneId(me, other))\n                conversation.setParticipant(me);\n                conversation.setParticipant(other);\n    \n                \n                const inbox = session.createInbox({selected: conversation}); //{selected: conversation}\n                inbox.mount(talkjsContainer.current);\n            } else {\n                const inbox = session.createInbox(); //{selected: conversation}\n                inbox.mount(talkjsContainer.current);\n            }\n            // console.log(other)\n        })\n    },[])\n\n    console.log(talkjsContainer.current)\n    // if (talkjsContainer.current === null) return <h1>Loading...</h1>\n    return (\n        <div ref={talkjsContainer} className=\"chatbox-container\"></div>\n        // <div></div>\n    )\n}\n\n// class InboxComponent extends React.Component {\n    \n//     constructor(props) {\n//       super(props)\n//       this.talkjsContainer = React.createRef();\n//     }\n    \n//     componentDidMount() {    \n//       Talk.ready.then(() => {\n//         var me = new Talk.User({\n//           id: this.props.user.id,\n//           name: this.props.user.username,\n//         //   email: \"demo@talkjs.com\",\n//           photoUrl: this.props.user.avatar,\n//         //   welcomeMessage: \"Hey there! How are you? :-)\",\n//           role: \"user\"\n//         });\n        \n//         window.talkSession = new Talk.Session({\n//           appId: \"tZAIJPQN\",\n//           me: me\n//         });\n        \n//         var other = new Talk.User({\n//           id: this.props.otherUser.id,\n//           name: this.props.otherUser.username,\n//         //   email: \"demo@talkjs.com\",\n//           photoUrl: this.props.otherUser.avatar,\n//         //   welcomeMessage: \"Hey, how can I help?\",\n//           role: \"user\"\n//         });\n  \n//         var conversation = window.talkSession.getOrCreateConversation(Talk.oneOnOneId(me, other));\n//         conversation.setParticipant(me);\n//         conversation.setParticipant(other);\n        \n//         var inbox = window.talkSession.createInbox({selected: conversation});\n//         inbox.mount(this.talkjsContainer.current);\n//       });\n//     }\n  \n//     render() {\n//       return (\n//         <div ref={this.talkjsContainer} className=\"chatbox-container\"></div>\n//       )\n//     }\n//   }\n\n\n\n// class InboxComponent extends Component {\n\n//     constructor(props) {\n//         super(props);\n\n//         this.inbox = undefined;\n//         let currentUser;\n//         const currentTalkjsUser = localStorage.getItem('currentTalkjsUser');\n//         if (currentTalkjsUser) {\n//             currentUser = JSON.parse(currentTalkjsUser)\n//         }\n\n//         this.state = {\n//             currentUser\n//         }\n//     }\n\n\n//     componentDidMount() {\n//         Talk.ready\n//             .then(() => {\n//                 const me = new Talk.User(this.state.currentUser);\n                \n//                 if (!window.talkSession) {\n//                     window.talkSession = new Talk.Session({\n//                         appId: \"tZAIJPQN\",\n//                         me: me\n//                     });\n//                 }\n            \n//                 this.inbox = window.talkSession.createInbox();\n//                 this.inbox.mount(this.container);\n\n//             })\n//             .catch(e => console.error(e));\n//     }\n\n//     render() {\n//         return (\n//             <Fragment>\n//                 <div style={{height: '500px'}} className=\"inbox-container\" ref={c => this.container = c}>Loading...</div>\n//             </Fragment>\n//         );\n//     }\n//   }\n  \nexport default InboxComponent\n","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/Inbox.js",[],"/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/Dashboard.js",["142","143","144","145"],"import React, { useState, useEffect } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport { Grid, Box } from '@material-ui/core'\nimport SentComments from './dashboard/SentComments';\nimport ReceivedComments from './dashboard/ReceivedComments';\nimport List from '@material-ui/core/List';\nimport EditReview from './dashboard/EditReview';\nimport Modal from '@material-ui/core/Modal';\nimport Fade from '@material-ui/core/Fade';\nimport Backdrop from '@material-ui/core/Backdrop';\n\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    comments: {\n        marginRight: theme.spacing(4),\n    }\n}))\n\n\nfunction Dashboard({ currentUser }) {\n    const classes = useStyles()\n    const [tab, setTab] = useState(0)\n    const [review, setReview] = useState(null)\n    const [sentReviews, setSentReviews] = useState([])\n    const [user, setUser] = useState(null)\n    const [isLoaded, setIsLoaded] = useState(false)\n    // const [requestTab, setRequestTab] = React.useState(0);\n    console.log(currentUser)\n    \n    // useEffect(() => {\n    //     const sentReviews = currentUser.reviews_as_reviewer.map(review => <SentComments key={review.id} review={review}/>)\n    // }, [])\n    // const handleRequestChange = (event, newValue) => {\n    //   setRequestTab(newValue);\n    // };\n\n    const handleChange = (event, newValue) => {\n        setTab(newValue);\n    };\n\n    const handleEdit = (review) => {\n        console.log(review)\n        setReview(review)\n        setOpen(true)\n    }\n\n    const [open, setOpen] = React.useState(false);\n\n    const handleOpen = () => {\n      setOpen(true);\n    };\n  \n    const handleClose = () => {\n      setOpen(false);\n    };\n\n    const updateReview = (updReview) => {\n        setOpen(false)\n        console.log(updReview)\n\n        const updatedReviews = sentReviews.map(review => {\n            if (review.id === updReview.id) {\n                return {...review, rating: updReview.rating, contents: updReview.contents}\n            } else {\n                return review\n            }\n        })\n        setSentReviews(updatedReviews)\n    }\n\n    const deleteReview = (delReview) => {\n        console.log(delReview)\n\n        fetch(`${process.env.REACT_APP_API_BASE_URL}/reviews/${delReview.id}`, {\n            method: 'DELETE'\n        })\n        .then(resp => resp.json())\n        .then(data => {\n            const updatedReviews = sentReviews.filter(review => review.id !== delReview.id)\n            setSentReviews(updatedReviews)\n        })\n    } \n\n    useEffect(() => {\n        fetch(`${process.env.REACT_APP_API_BASE_URL}/users/${currentUser.id}`)\n            .then(resp => resp.json())\n            .then(data => {\n                setUser(data)\n                setSentReviews(data.reviews_as_reviewer.reverse())\n                setIsLoaded(true)\n                \n            })\n    }, [])\n   \n\n    // console.log(currentUser.reviews_as_reviewee)\n    if (!isLoaded) return <h1>Loading...</h1>\n    return (\n        <>\n        <Grid container >\n            <Grid item xs={12}>\n            <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n                <Tabs value={tab} onChange={handleChange} >\n                    <Tab label=\"Sent Comments\"  />\n                    <Tab label=\"Received Comments\"  />\n                    {/* <Tab label=\"Sent Request\"  />\n                    <Tab label=\"Received Request\"  />\n                    <Tab label=\"Accepted Request\"  />   */}\n                </Tabs>       \n            </Box>\n            </Grid>\n            \n            <Grid item xs={12}>\n            <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n                { tab === 0 ? <List>{sentReviews.map(review => <SentComments key={review.id} review={review} handleEdit={handleEdit} deleteReview={deleteReview}/>)}</List>  : null}\n                { tab === 1 ? <List>{user.reviews_as_reviewee.map(review => <ReceivedComments key={review.id} review={review} />)}</List> : null}\n                { tab === 2 ? 'display sent request' : null}\n                { tab === 3 ? 'display received request' : null}\n                { tab === 4 ? 'display accepted request' : null}\n                </Box>\n            </Grid>\n        </Grid>\n\n        <Modal\n            className={classes.modal}\n            open={open}\n            onClose={handleClose}\n            closeAfterTransition\n            BackdropComponent={Backdrop}\n            BackdropProps={{\n            timeout: 500,\n            }}\n        >\n            <Fade in={open}>\n            <div className={classes.paper}>\n                <EditReview review={review} updateReview={updateReview} />\n            </div>\n            </Fade>\n        </Modal>\n        </>\n    )\n}\n\nexport default Dashboard\n","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/dashboard/SentComments.js",["146"],"import React from 'react'\nimport ListItem from '@material-ui/core/ListItem';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport Avatar from '@material-ui/core/Avatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Box, Card, CardMedia, CardContent, Typography, Divider, Chip} from '@material-ui/core';\nimport Rating from '@material-ui/lab/Rating';\nimport EditIcon from '@material-ui/icons/Edit';\n\n\nconst useStyles = makeStyles((theme) => ({\n    margin: {\n      margin: theme.spacing(1),\n    },\n    modal: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n      },\n      paper: {\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n    },\n    section2: {\n        margin: theme.spacing(1),\n    },\n    card: {\n        width: \"70%\",\n        height: \"100%\"\n    },\n    details: {\n        display: 'flex',\n        flexDirection: 'column',\n        width: \"100%\"\n    },\n    content: {\n        // flex: '1 0 auto',\n        width: \"100%\",\n        paddingLeft: \"0px\"\n    },\n    root: {\n        display: 'flex',\n        borderRadius: 10,\n    },\n    cover: {\n        width: 150,\n    },\n    large: {\n        width: theme.spacing(10),\n        height: theme.spacing(10),\n    },\n    box: {\n        height: \"100%\",\n        width: \"100%\"\n    },\n    userShow: {\n        marginTop: 10,\n    },\n    border: {\n        borderRadius: 10,\n        marginTop: theme.spacing(2)\n    },\n    chip: {\n        margin: theme.spacing(0.5),\n    },\n  }));\n\n\nfunction SentComments({ review, handleEdit, deleteReview }) {\n    const classes = useStyles();\n    \n    return (\n        <>\n        <Box key={review.id}>\n        <ListItem >\n            {/* <ListItemAvatar>\n            <Avatar src={review.reviewer.avatar} />\n            </ListItemAvatar> */}\n            <ListItemText>\n                <Card className={classes.root} >\n                    <CardMedia\n                        className={classes.cover}\n                    >\n                        <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\" className={classes.box}>\n                            <Avatar src={review.reviewee.avatar} className={classes.large}/>\n                        </Box>     \n                    </CardMedia>\n                    <div className={classes.details}>\n                        <CardContent className={classes.content}>\n                            <Typography className={classes.section2} variant={\"h6\"}>\n                                {review.reviewee.username}\n                            </Typography>\n                            <Rating className={classes.section2} name=\"read-only\" precision={0.5} value={review.rating} size=\"small\" readOnly />\n                            <Divider variant=\"middle\"/>\n                            <Typography paragraph className={classes.section2}>{review.contents}</Typography>\n                            <Typography variant={\"subtitle2\"} className={classes.section2} color=\"textSecondary\">{review.game}</Typography>\n                            {review.tags.map(tag => <Chip color=\"secondary\" clickable size=\"small\"label={tag.name} className={classes.chip}/>)}\n                        </CardContent>\n                    </div>\n                    \n                </Card>\n            </ListItemText>\n            {/* <ListItemSecondaryAction> */}\n                <IconButton edge=\"end\" onClick={() => handleEdit(review)}>\n                    <EditIcon />\n                </IconButton>\n                <IconButton edge=\"end\" onClick={() => deleteReview(review)}>\n                    <DeleteIcon />\n                </IconButton>\n            {/* </ListItemSecondaryAction> */}\n        </ListItem>\n        </Box>\n        </>\n    )\n}\n\nexport default SentComments\n","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/dashboard/EditReview.js",["147","148","149","150","151","152","153","154"],"import React, { useState, useEffect } from 'react'\n// import { useHistory } from 'react-router-dom'\nimport Rating from '@material-ui/lab/Rating';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { FormControl, Button, FormLabel, InputLabel, Input, TextField, TextareaAutosize, Typography, Box ,Card ,Divider ,Grid } from '@material-ui/core';\nimport CardMedia from '@material-ui/core/CardMedia';\n// import CardActionArea from '@material-ui/core/CardActionArea';\n// import CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\n// import Checkbox from '@material-ui/core/Checkbox';\n// import FormControlLabel from '@material-ui/core/FormControlLabel';\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n    //   width: '25ch',\n    },\n    label: {\n        margin: theme.spacing(2),\n    },\n    cardContent: {\n        alignItems: \"auto\"\n    }\n}));\n\nfunction EditReview({ review, updateReview }) {\n    const [contents, setContents] = useState(review.contents)\n    const [rating, setRating] = useState(review.rating)\n    // const [tags, setTags] = useState([])\n    // const [addedTags, setAddedTags] = useState([])\n    // const history = useHistory()\n    const classes = useStyles()\n    const reviewee = review.reviewee\n    // const [state, setState] = useState({\n    //     2: false,\n    //     3: false,\n    //     4: false,\n    //     5: false,\n    //     6: false,\n    //     7: false,\n    //     8: false,\n    //     9: false,\n    //     10: false,\n    // });\n\n    \n\n    // console.log(review.tags)\n\n\n\n    // const tagBoxes = tags.map(tag => <TagBox key={tag.id} tag={tag} addedTags={addedTags} setTags/>)\n\n    // const handleChange = (event) => {\n    //     setState({ ...state, [event.target.name]: event.target.checked });\n    // };\n\n\n    // useEffect(() => {\n    //     fetch(`${process.env.REACT_APP_API_BASE_URL}/tags`)\n    //         .then(resp => resp.json())\n    //         .then(data => {\n    //             setTags(data)\n    //         })\n    // }, [])\n\n    function handleSubmit(event) {\n        event.preventDefault()\n\n        const reviewData = {\n            contents: contents,\n            rating: parseFloat(rating),\n        }\n\n        // let tagsArray = []\n\n        // for (const [key, value] of Object.entries(state)) {\n        //     if (value === true) {\n        //         tagsArray = [...tagsArray, parseInt(key)]\n        //     }\n        // }\n\n        // console.log(reviewData)\n        // console.log(tagsArray)\n\n\n        fetch(`${process.env.REACT_APP_API_BASE_URL}/reviews/${review.id}`, {\n            method: 'PATCH',\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(reviewData)\n        })\n        .then(resp => resp.json())\n        .then(newReviewObj => {\n            console.log(newReviewObj)\n            updateReview(newReviewObj)\n            // if (newReviewObj.id === null) {\n            //     alert(\"Can only review a user once!\")\n            // } else {\n            //     history.push(`/users/${currentUser.id}`)\n            // }\n            // for (const id of tagsArray) {\n            //     fetch(`${process.env.REACT_APP_API_BASE_URL}/review_tags`, {\n            //         method: 'POST',\n            //         headers: {\n            //             \"Content-Type\": \"application/json\"\n            //         }, \n            //         body: JSON.stringify({\n            //             review_id: newReviewObj.id,\n            //             tag_id: id\n            //         })\n            //     })\n            //     .then(resp => resp.json())\n            //     .then(reviewTag => {\n            //         console.log(reviewTag)\n            //     })\n            // }\n            // console.log(\"done\")\n        })\n    }\n    return (\n        <Grid container>\n            <Grid item xs={4}/>\n            <Card alignContent=\"center\">\n                <CardHeader \n                    title=\"Review\"\n                >\n                </CardHeader>\n                <CardMedia>\n                    <img height=\"400px\"src={reviewee.avatar} alt={reviewee.username} />\n                </CardMedia>\n                    <CardContent className={classes.cardContent}>\n                        <FormControl onSubmit={handleSubmit}>\n                            <label>\n                                Review {reviewee.username}<br/>\n                                <textarea name=\"content\" value={contents} onChange ={event => setContents(event.target.value)}/>\n                                <br/>\n\n                                <>\n                                <FormLabel> Rate: </FormLabel>\n                                <Rating\n                                    name=\"rating\"\n                                    precision={0.5}\n                                    value={rating}\n                                    onChange={(event, newValue) => {\n                                        setRating(newValue);\n                                    }}\n                                />\n                                </>\n                            </label>\n                            {/* <Box>\n                                \n                                <FormControlLabel\n                                    control={<Checkbox checked={state.id} onChange={handleChange} name={2} />}\n                                    label={\"Chill\"}\n                                />\n                                <FormControlLabel\n                                    control={<Checkbox checked={state.id} onChange={handleChange} name={3} />}\n                                    label={\"Tilt-proof\"}\n                                />\n                                <FormControlLabel\n                                    control={<Checkbox checked={state.id} onChange={handleChange} name={4} />}\n                                    label={\"Team player\"}\n                                />\n                                <FormControlLabel\n                                    control={<Checkbox checked={state.id} onChange={handleChange} name={5} />}\n                                    label={\"Friendly\"}\n                                />\n                                <FormControlLabel\n                                    control={<Checkbox checked={state.id} onChange={handleChange} name={6} />}\n                                    label={\"Interactive\"}\n                                />\n                                <FormControlLabel\n                                    control={<Checkbox checked={state.id} onChange={handleChange} name={7} />}\n                                    label={\"Strategic\"}\n                                />\n                                <FormControlLabel\n                                    control={<Checkbox checked={state.id} onChange={handleChange} name={8} />}\n                                    label={\"Humorous\"}\n                                />\n                                <FormControlLabel\n                                    control={<Checkbox checked={state.id} onChange={handleChange} name={9} />}\n                                    label={\"Creative\"}\n                                />\n                                <FormControlLabel\n                                    control={<Checkbox checked={state.id} onChange={handleChange} name={10} />}\n                                    label={\"Carry\"}\n                                />\n                            </Box> */}\n                            <Button variant=\"contained\" color=\"secondary\" onClick={handleSubmit} className=\"submit-button\">Edit Review</Button>\n                        </FormControl>\n                    </CardContent>\n                </Card>\n            <Grid item xs={4}/>\n        </Grid>\n    )\n}\n\nexport default EditReview\n","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/dashboard/ReceivedComments.js",[],"/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/UserGameDetailCard.js",["155"],"import React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Box, Paper } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme) => ({\n    title: {\n      color: theme.palette.secondary,\n      \n    },\n    titleBar: {\n      background:\n        'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\n        borderBottomLeftRadius: 10,\n        borderBottomRightRadius: 10,\n    },\n    tile: {\n        height: \"150px\",\n        width: \"200px\",\n        borderRadius: \"30px\",\n        marginRight: \"10px\"\n    },\n    box: {\n        borderRadius: \"30px\"\n    }\n  }));\n\n\nfunction UserGameDetailCard({ userGame }) {\n    const classes = useStyles()\n    const game = userGame.game\n    const history = useHistory()\n    return (\n        <Box className={classes.box}>\n            <GridListTile key={game.id} className={classes.tile} onClick={() => history.push(`/user_games/${userGame.id}`)}>\n                <img src={game.image} alt={game.name} style={{borderRadius: 10, width: \"100%\", objectFit: \"cover\", height: \"100%\"}}/>\n                <GridListTileBar\n                title={game.name}\n                classes={{\n                    root: classes.titleBar,\n                    title: classes.title,\n                }}\n                />\n            </GridListTile>\n          </Box>\n    )\n}\n\nexport default UserGameDetailCard\n",{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","severity":1,"message":"161","line":5,"column":41,"nodeType":"162","messageId":"163","endLine":5,"endColumn":46},{"ruleId":"164","severity":1,"message":"165","line":154,"column":46,"nodeType":"166","endLine":154,"endColumn":55},{"ruleId":"160","severity":1,"message":"167","line":3,"column":35,"nodeType":"162","messageId":"163","endLine":3,"endColumn":45},{"ruleId":"160","severity":1,"message":"168","line":6,"column":8,"nodeType":"162","messageId":"163","endLine":6,"endColumn":17},{"ruleId":"160","severity":1,"message":"169","line":7,"column":8,"nodeType":"162","messageId":"163","endLine":7,"endColumn":22},{"ruleId":"160","severity":1,"message":"170","line":11,"column":8,"nodeType":"162","messageId":"163","endLine":11,"endColumn":18},{"ruleId":"160","severity":1,"message":"171","line":97,"column":12,"nodeType":"162","messageId":"163","endLine":97,"endColumn":18},{"ruleId":"160","severity":1,"message":"172","line":97,"column":20,"nodeType":"162","messageId":"163","endLine":97,"endColumn":29},{"ruleId":"173","severity":1,"message":"174","line":180,"column":13,"nodeType":"175","endLine":180,"endColumn":86},{"ruleId":"160","severity":1,"message":"176","line":7,"column":8,"nodeType":"162","messageId":"163","endLine":7,"endColumn":20},{"ruleId":"160","severity":1,"message":"177","line":23,"column":8,"nodeType":"162","messageId":"163","endLine":23,"endColumn":17},{"ruleId":"160","severity":1,"message":"178","line":3,"column":10,"nodeType":"162","messageId":"163","endLine":3,"endColumn":16},{"ruleId":"160","severity":1,"message":"179","line":28,"column":22,"nodeType":"162","messageId":"163","endLine":28,"endColumn":33},{"ruleId":"160","severity":1,"message":"180","line":5,"column":42,"nodeType":"162","messageId":"163","endLine":5,"endColumn":52},{"ruleId":"160","severity":1,"message":"181","line":5,"column":54,"nodeType":"162","messageId":"163","endLine":5,"endColumn":59},{"ruleId":"160","severity":1,"message":"182","line":5,"column":61,"nodeType":"162","messageId":"163","endLine":5,"endColumn":70},{"ruleId":"160","severity":1,"message":"183","line":5,"column":72,"nodeType":"162","messageId":"163","endLine":5,"endColumn":88},{"ruleId":"160","severity":1,"message":"167","line":5,"column":90,"nodeType":"162","messageId":"163","endLine":5,"endColumn":100},{"ruleId":"160","severity":1,"message":"184","line":5,"column":113,"nodeType":"162","messageId":"163","endLine":5,"endColumn":120},{"ruleId":"160","severity":1,"message":"185","line":37,"column":12,"nodeType":"162","messageId":"163","endLine":37,"endColumn":16},{"ruleId":"160","severity":1,"message":"186","line":38,"column":12,"nodeType":"162","messageId":"163","endLine":38,"endColumn":21},{"ruleId":"160","severity":1,"message":"187","line":38,"column":23,"nodeType":"162","messageId":"163","endLine":38,"endColumn":35},{"ruleId":"160","severity":1,"message":"188","line":39,"column":11,"nodeType":"162","messageId":"163","endLine":39,"endColumn":18},{"ruleId":"160","severity":1,"message":"189","line":2,"column":8,"nodeType":"162","messageId":"163","endLine":2,"endColumn":14},{"ruleId":"160","severity":1,"message":"190","line":3,"column":8,"nodeType":"162","messageId":"163","endLine":3,"endColumn":13},{"ruleId":"156","replacedBy":"191"},{"ruleId":"158","replacedBy":"192"},{"ruleId":"160","severity":1,"message":"193","line":13,"column":11,"nodeType":"162","messageId":"163","endLine":13,"endColumn":19},{"ruleId":"194","severity":1,"message":"195","line":50,"column":7,"nodeType":"196","endLine":50,"endColumn":9,"suggestions":"197"},{"ruleId":"160","severity":1,"message":"198","line":3,"column":8,"nodeType":"162","messageId":"163","endLine":3,"endColumn":14},{"ruleId":"160","severity":1,"message":"167","line":6,"column":8,"nodeType":"162","messageId":"163","endLine":6,"endColumn":18},{"ruleId":"160","severity":1,"message":"199","line":56,"column":11,"nodeType":"162","messageId":"163","endLine":56,"endColumn":21},{"ruleId":"194","severity":1,"message":"200","line":100,"column":8,"nodeType":"196","endLine":100,"endColumn":10,"suggestions":"201"},{"ruleId":"160","severity":1,"message":"202","line":5,"column":8,"nodeType":"162","messageId":"163","endLine":5,"endColumn":31},{"ruleId":"160","severity":1,"message":"203","line":1,"column":27,"nodeType":"162","messageId":"163","endLine":1,"endColumn":36},{"ruleId":"160","severity":1,"message":"180","line":5,"column":42,"nodeType":"162","messageId":"163","endLine":5,"endColumn":52},{"ruleId":"160","severity":1,"message":"181","line":5,"column":54,"nodeType":"162","messageId":"163","endLine":5,"endColumn":59},{"ruleId":"160","severity":1,"message":"182","line":5,"column":61,"nodeType":"162","messageId":"163","endLine":5,"endColumn":70},{"ruleId":"160","severity":1,"message":"183","line":5,"column":72,"nodeType":"162","messageId":"163","endLine":5,"endColumn":88},{"ruleId":"160","severity":1,"message":"167","line":5,"column":90,"nodeType":"162","messageId":"163","endLine":5,"endColumn":100},{"ruleId":"160","severity":1,"message":"204","line":5,"column":102,"nodeType":"162","messageId":"163","endLine":5,"endColumn":105},{"ruleId":"160","severity":1,"message":"184","line":5,"column":113,"nodeType":"162","messageId":"163","endLine":5,"endColumn":120},{"ruleId":"160","severity":1,"message":"161","line":6,"column":15,"nodeType":"162","messageId":"163","endLine":6,"endColumn":20},"no-native-reassign",["205"],"no-negated-in-lhs",["206"],"no-unused-vars","'Paper' is defined but never used.","Identifier","unusedVar","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Typography' is defined but never used.","'InputBase' is defined but never used.","'InputAdornment' is defined but never used.","'SearchIcon' is defined but never used.","'search' is assigned a value but never used.","'setSearch' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'UserGameCard' is defined but never used.","'Draggable' is defined but never used.","'format' is defined but never used.","'setDateTime' is assigned a value but never used.","'InputLabel' is defined but never used.","'Input' is defined but never used.","'TextField' is defined but never used.","'TextareaAutosize' is defined but never used.","'Divider' is defined but never used.","'tags' is assigned a value but never used.","'addedTags' is assigned a value but never used.","'setAddedTags' is assigned a value but never used.","'history' is assigned a value but never used.","'purple' is defined but never used.","'green' is defined but never used.",["205"],["206"],"'location' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'otherUser', 'talkjsContainer', and 'user'. Either include them or remove the dependency array.","ArrayExpression",["207"],"'AppBar' is defined but never used.","'handleOpen' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'currentUser.id'. Either include it or remove the dependency array.",["208"],"'ListItemSecondaryAction' is defined but never used.","'useEffect' is defined but never used.","'Box' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"209","fix":"210"},{"desc":"211","fix":"212"},"Update the dependencies array to be: [otherUser, talkjsContainer, user]",{"range":"213","text":"214"},"Update the dependencies array to be: [currentUser.id]",{"range":"215","text":"216"},[1642,1644],"[otherUser, talkjsContainer, user]",[3006,3008],"[currentUser.id]"]