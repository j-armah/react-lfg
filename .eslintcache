[{"/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/App.js":"1","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/Login.js":"2","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/GamePage.js":"3","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/UserCard.js":"4","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/index.js":"5","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/Nav.js":"6","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/AddGame.js":"7","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/GameCard.js":"8","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/UserShow.js":"9","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/UserGameDetail.js":"10","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/PlaySessionForm.js":"11","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/ReviewForm.js":"12","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/EditUserInfo.js":"13","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/EditUserGameDetail.js":"14","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/theme.js":"15","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/UserGameCard.js":"16","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/SignUp.js":"17","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/InboxComponent.js":"18","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/Inbox.js":"19","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/Dashboard.js":"20","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/dashboard/SentComments.js":"21","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/dashboard/EditReview.js":"22","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/dashboard/ReceivedComments.js":"23","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/UserGameDetailCard.js":"24"},{"size":9387,"mtime":1614708007741,"results":"25","hashOfConfig":"26"},{"size":5827,"mtime":1614707759911,"results":"27","hashOfConfig":"26"},{"size":10194,"mtime":1614708332156,"results":"28","hashOfConfig":"26"},{"size":3870,"mtime":1613495302023,"results":"29","hashOfConfig":"26"},{"size":939,"mtime":1612566091729,"results":"30","hashOfConfig":"26"},{"size":11514,"mtime":1614795311338,"results":"31","hashOfConfig":"26"},{"size":1495,"mtime":1613011697106,"results":"32","hashOfConfig":"26"},{"size":1740,"mtime":1612926063910,"results":"33","hashOfConfig":"26"},{"size":30096,"mtime":1614708305395,"results":"34","hashOfConfig":"26"},{"size":23823,"mtime":1613523978532,"results":"35","hashOfConfig":"26"},{"size":4102,"mtime":1614707835184,"results":"36","hashOfConfig":"26"},{"size":8335,"mtime":1613449854985,"results":"37","hashOfConfig":"26"},{"size":5020,"mtime":1613506988462,"results":"38","hashOfConfig":"26"},{"size":4453,"mtime":1613450099862,"results":"39","hashOfConfig":"26"},{"size":257,"mtime":1612543059693,"results":"40","hashOfConfig":"26"},{"size":1313,"mtime":1613449325011,"results":"41","hashOfConfig":"26"},{"size":6119,"mtime":1613507477315,"results":"42","hashOfConfig":"26"},{"size":4713,"mtime":1613578286498,"results":"43","hashOfConfig":"26"},{"size":371,"mtime":1613011710771,"results":"44","hashOfConfig":"26"},{"size":5441,"mtime":1614707864659,"results":"45","hashOfConfig":"26"},{"size":4200,"mtime":1613449638794,"results":"46","hashOfConfig":"26"},{"size":9012,"mtime":1614707800657,"results":"47","hashOfConfig":"26"},{"size":3620,"mtime":1613449635000,"results":"48","hashOfConfig":"26"},{"size":1547,"mtime":1613408950917,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"18f01r6",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/App.js",[],["107","108"],"/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/Login.js",[],"/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/GamePage.js",[],"/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/UserCard.js",["109"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport Card from '@material-ui/core/Card'\n// import CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\n// import { makeStyles } from '@material-ui/styles'\nimport { Typography, Grid, Box } from '@material-ui/core';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport StarIcon from '@material-ui/icons/Star';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles((theme) => ({\n    star: {\n        color: \"#ffd939\",\n        marginRight: theme.spacing(0.2)\n    },\n    text: {\n        marginLeft: theme.spacing(0.2)\n    },\n    load: {\n        height: \"30vh\",\n        width: \"100%\"\n    },\n    loadBox: {\n        width: \"100%\"\n    },\n    box: {\n        borderRadius: 10,\n        height: \"102%\",\n    }\n  }));\n\nfunction UserCard({ user, userGameId, userGame }) {\n    const {avatar, username} = user\n    const [userGameReviews, setUserGameReviews] = useState([])\n    const [isLoaded, setIsLoaded] = useState(false)\n\n    const classes = useStyles()\n\n    useEffect(() => {\n        fetch(`${process.env.REACT_APP_API_BASE_URL}/users/${user.id}`)\n            .then(resp => resp.json())\n            .then(userObj => {\n                const reviews = userObj.reviews_as_reviewee.filter(review => review.game === userGame.game.name)\n                setUserGameReviews(reviews)\n                setIsLoaded(true)\n            })\n    }, [])\n    \n\n    \n    const avgGameScore = () => {\n        const avg = userGameReviews.reduce((sum, review) => sum + review.rating, 0) / userGameReviews.length\n        return userGameReviews.length > 0 ?  avg.toFixed(1) :  \"0\"\n    }\n    \n    if (!isLoaded) return (\n        <Grid item xs={3}>\n            {/* <Card className={classes.load} >\n                <Box className={classes.load}>\n                    <CircularProgress color=\"secondary\" />\n                </Box>   \n            </Card> */}\n            <Grid item className={classes.load}>\n                <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" className={classes.loadBox}>\n                    <CircularProgress color=\"secondary\" />\n                </Box>\n            </Grid>\n        </Grid>\n    )\n    return (\n        <Grid item xs={3}>\n            <Card className={classes.box}>\n                <CardActionArea>\n                    <Link to={`/user_games/${userGameId}`}>\n                        <CardMedia \n                            component={\"div\"} \n                            style={{ height: \"250px\" }} \n                            // width=\"100%\" \n                            // image={avatar} \n                            title={username}\n                            className=\"user-card-img\"\n                        >\n                            <img src={avatar} alt={username}/>\n                        </CardMedia>\n                    </Link>\n                </CardActionArea>\n                <CardContent>\n                    <Box display=\"flex\" >\n                        <Box flexGrow={1}>                   \n                            <Typography variant={\"h5\"} > {username} </Typography>\n                        </Box> \n                        <Box display=\"flex\" >\n                            <StarIcon className={classes.star}/> \n                            <Typography variant={\"body1\"} className={classes.text}> {avgGameScore()} </Typography>\n                            <Typography className={classes.text} color=\"textSecondary\">({userGameReviews.length})</Typography>\n                        </Box> \n                    </Box>\n                </CardContent>\n            </Card>\n        </Grid>\n    )    \n}\n\nexport default UserCard\n","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/index.js",[],"/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/Nav.js",[],"/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/AddGame.js",[],"/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/GameCard.js",[],"/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/UserShow.js",[],"/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/UserGameDetail.js",["110"],"import React, { useEffect, useState } from 'react';\nimport { useParams, Link, useHistory } from 'react-router-dom';\n// import Modal from 'react-modal';\nimport PlaySessionForm from './PlaySessionForm';\nimport EditUserGameDetail from './EditUserGameDetail';\nimport GameCard from './GameCard'\n// import UserGameCard from './UserGameCard'\nimport { Grid, Typography, Button, Box, Divider, Card } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport Rating from '@material-ui/lab/Rating';\nimport Avatar from '@material-ui/core/Avatar';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport SportsEsportsIcon from '@material-ui/icons/SportsEsports';\nimport Popover from '@material-ui/core/Popover';\nimport Chip from '@material-ui/core/Chip';\nimport UserGameDetailCard from './UserGameDetailCard'\nimport GridList from '@material-ui/core/GridList';\nimport ChatIcon from '@material-ui/icons/Chat';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n// import { useGradientBtnStyles } from '@mui-treasury/styles/button/gradient';\n// import { usePushingGutterStyles } from '@mui-treasury/styles/gutter/pushing';\n// import Draggable from 'react-draggable';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      width: '100%',\n      maxWidth: 360,\n      backgroundColor: theme.palette.background.paper,\n      borderRadius: 10,\n    },\n    section1: {\n      margin: theme.spacing(3, 2),\n    },\n    section2: {\n      margin: theme.spacing(1),\n    },\n    section3: {\n      margin: theme.spacing(3, 1, 1),\n    },\n    margin: {\n        margin: theme.spacing(1),\n    },\n    modal: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    paper: {\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n    },\n    details: {\n        display: 'flex',\n        flexDirection: 'column',\n        width: \"100%\"\n    },\n    content: {\n        // flex: '1 0 auto',\n        width: \"100%\",\n        paddingLeft: \"0px\"\n    },\n    rootCard: {\n        display: 'flex',\n        borderRadius: 10,\n    },\n    cover: {\n        width: 150,\n    },\n    large: {\n        width: theme.spacing(10),\n        height: theme.spacing(10),\n    },\n    box: {\n        height: \"100%\",\n        width: \"100%\"\n    },\n    userGamePage: {\n        position: 'relative',\n    },\n    gameBanner: {\n        marginTop: \"15px\",\n        height: \"40vh\",\n        backgroundSize: \"cover\",\n        backgroundRepeat: \"no-repeat\",\n        backgroundPosition: '0 20%',\n        zIndex: 0\n    },\n    userGameDetail: {\n        // position: 'absolute',\n        marginTop: -140,\n        zIndex: 1,\n        height: \"60%\"\n    },\n    bannerGrid: {\n        height: \"100%\"\n    },\n    boxBanner: {\n        height: \"60%\",\n        // positin: \"fixed\",\n        // marginLeft: \"calc(100% - 1600px)\",\n        // right: \"20%\",\n        // marginLeft: \"100px\",\n    },\n    popover: {\n        pointerEvents: 'none',\n    },\n    gameRec: {\n        height: \"600px\",\n        width: \"1500px\",\n        // overflow: \"auto\",\n    },\n    image: {\n        borderRadius: 10,\n    },\n    chip: {\n        margin: theme.spacing(0.5),\n    },\n    gridList: {\n        flexWrap: 'nowrap',\n        // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n        transform: 'translateZ(0)',\n    },\n    gameBtn: {\n        background: 'linear-gradient(45deg, #2b5876 0%, #4e4376  51%, #2b5876  100%)',\n        backgroundSize: '200% auto',\n        border: 0,\n        transition: '0.5s',\n        boxShadow: '0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24)',\n        color: 'white',\n        height: 48,\n        padding: '0 45px',\n        '&:hover': {\n            transform: 'scale(1.1)',\n            backgroundPosition: 'right center',\n        },\n        borderRadius: 50,\n    },\n    chatBtn: {\n        background: 'linear-gradient(45deg, #2b5876 0%, #4e4376  51%, #2b5876  100%)',\n        backgroundSize: '200% auto',\n        border: 0,\n        transition: '0.5s',\n        boxShadow: '0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24)',\n        color: 'white',\n        height: 63,\n        // padding: '0 0px',\n        '&:hover': {\n            transform: 'scale(1.1)',\n            backgroundPosition: 'right center',\n        },\n        borderRadius: 50,\n    },\n    bannerBtn: {\n        background: 'linear-gradient(45deg, #2b5876 0%, #4e4376  51%, #2b5876  100%)',\n        backgroundSize: '200% auto',\n        border: 0,\n        marginRight: theme.spacing(1),\n        transition: '0.8s',\n        boxShadow: '0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24)',\n        color: 'white',\n        height: 63.9,\n        // padding: '0 0px',\n        '&:hover': {\n            transform: 'scale(1.1)',\n            backgroundPosition: 'right center',\n        },\n        borderRadius: 50,\n    },\n    load: {\n        height: \"100vh\",\n        width: \"100%\"\n    },\n        loadBox: {\n        width: \"100%\"\n    },\n    paperBanner: {\n        background: 'linear-gradient(90deg,rgba(43, 88, 118, .35), rgba(78, 67, 118, .2))',\n        backgroundSize: '200% auto',\n        borderRadius: 10,\n        height: theme.spacing(14),\n    },\n    bannerGrid: {\n        height: \"100%\",\n    }\n}));\n\n\n\nfunction UserGameDetail({ currentUser, games, handleStartChat, setOtherUser}) {\n    const [isLoaded, setIsLoaded] = useState(false)\n    const [userGame, setUserGame] = useState(null)\n    const [user, setUser] = useState(null)\n    const [open, setOpen] = useState(false)\n    // const [openEdit, setOpenEdit] = useState(false)\n    const [anchorEl, setAnchorEl] = useState(null)\n    const [showMore, setShowMore] = useState(3)\n    const [userGameReviews, setUserGameReviews] = useState([])\n    const [recommends, setRecommends] = useState(0)\n    const params = useParams()\n    const classes = useStyles()\n    const history = useHistory()\n    const [anchorElEdit, setAnchorElEdit] = useState(null);\n    // const chubbyStyles = useGradientBtnStyles({ chubby: true });\n\n    const handleClickEdit = (event) => {\n      setAnchorElEdit(event.currentTarget);\n    };\n  \n    const handleCloseEdit = () => {\n      setAnchorElEdit(null);\n    };\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n    \n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClosePopover = () => {\n        setAnchorEl(null);\n    };\n\n    const openPop = Boolean(anchorEl);\n    const id = openPop ? 'simple-popover' : undefined;\n\n    const openEdit = Boolean(anchorElEdit);\n    const idEdit = openEdit ? 'simple-popover' : undefined;\n    \n    const handleChat = (event) => {\n        // console.log(user)\n        setOtherUser(user)\n        const fab = document.querySelector('#fab')\n        // console.log(fab)\n        handleStartChat(fab)\n    }\n\n    const avgGameScore = () => {\n        const avg = userGameReviews.reduce((sum, review) => sum + review.rating, 0) / userGameReviews.length\n       return userGameReviews.length > 0 ?  avg.toFixed(1) :  \"0\"\n    }\n\n    function handleDelete() {\n        fetch(`${process.env.REACT_APP_API_BASE_URL}/user_games/${params.id}`, {\n            method: \"DELETE\"\n        })\n        .then(resp => resp.json)\n        .then(history.push(`/users/${user.id}`))\n    }\n\n    const countTags = () => {\n        const hash = {}\n        const array = []\n        const tags = userGameReviews.map(review => review.tags)\n\n        for (const tagArray of tags) {\n            for (let j=0; j < tagArray.length; j++) {\n                if(hash[tagArray[j].name]){\n                    hash[tagArray[j].name] += 1\n                } else {\n                    hash[tagArray[j].name] = 1\n                }\n            }\n        }\n\n\n        for(const prop in hash) {\n            array.push({[prop]: hash[prop]})\n        }\n\n        // console.log(hash)\n        // console.log(array)\n        return array\n    }\n\n    useEffect(() => {\n        fetch(`${process.env.REACT_APP_API_BASE_URL}/user_games/${params.id}`)\n            .then(resp => resp.json())\n            .then(data => {\n                setUserGame(data)\n                // console.log(data.game.name)\n                \n                fetch(`${process.env.REACT_APP_API_BASE_URL}/users/${data.user.id}`)\n                    .then(resp => resp.json())\n                    .then(userObj => {\n                        // console.log(userObj)\n                        setUser(userObj)\n                        const reviews = userObj.reviews_as_reviewee.filter(review => review.game === data.game.name)\n                        const recommended = reviews.filter(review => review.rating >= 4).length\n                        setRecommends(recommended)\n                        setUserGameReviews(reviews)\n                        setIsLoaded(true)\n                    })\n            })\n    }, [params.id])\n\n    // console.log(userGameReviews)\n    if (!isLoaded) return (\n        <Grid container className={classes.load}>\n            <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" className={classes.loadBox}>\n                <CircularProgress color=\"secondary\" />\n            </Box>\n        </Grid>\n    )\n    return (\n        <Grid container spacing={4} className={classes.userGamePage} component={\"div\"}>\n            <Grid \n                item xs={12} \n                className={classes.gameBanner} \n                component={\"div\"}\n                style={{\n                    backgroundImage: \n                    `linear-gradient(\n                        rgba(38, 38, 38, 0.45),\n                        rgba(38, 38, 38, 0.55), \n                        rgba(38, 38, 38, 0.75),\n                        rgba(38, 38, 38, 0.85),\n                        rgba(38, 38, 38, 0.95),   \n                        rgba(38, 38, 38, 1)\n                    ),\n                    url(\"${userGame.game.splash}\")`,\n                }}\n            >\n                <Grid container className={classes.bannerGrid}>\n                    <Grid item xs={false} sm={1} />\n                        <Grid item xs={10} className={classes.bannerGrid}>\n                            <Box \n                                className={classes.boxBanner}\n                                display=\"flex\"\n                                alignItems=\"center\"\n                            >\n                                <Button\n                                    aria-describedby={id}\n                                    onClick={handleClick}\n                                    className={classes.bannerBtn}\n                                    ><SportsEsportsIcon />\n                                </Button>\n                                <Typography variant={\"h3\"} onClick={() => history.push(`/games/${userGame.game.id}`)}> {userGame.game.name} </Typography>\n                                <Popover\n                                    id={id}\n                                    open={openPop}\n                                    anchorEl={anchorEl}\n                                    onClose={handleClosePopover}\n                                    anchorOrigin={{\n                                        vertical: 'bottom',\n                                        horizontal: 'left',\n                                    }}\n                                    transformOrigin={{\n                                        vertical: 'top',\n                                        horizontal: 'left',\n                                    }}\n                                >\n                                    <Box p={6} mx=\"auto\" justifyContent=\"center\" alignItems=\"center\" className={classes.gameRec}>\n                                        {/* <Paper className={classes.gameRec}> */}\n                                        <Typography variant={\"h3\"} paragraph> Recommended Games </Typography>\n                                            <Grid container spacing={4}>\n                                                {games.slice(0,9).map(game => <GameCard key={game.id} game={game}/> )} \n                                            </Grid>\n                                        {/* </Paper> */}\n                                    </Box>\n                                </Popover>\n                            </Box>\n                        </Grid>\n                    <Grid item xs={false} sm={1} />\n                </Grid>\n            </Grid>\n            {/* SideBar */}\n            <Grid item xs={false} sm={1} />\n            <Grid item xs={7} container spacing={2} className={classes.userGameDetail}>\n                <Grid container item xs={12} direction=\"column\">\n                    <Paper className={classes.paperBanner}>\n                        <Box display=\"flex\" alignItems=\"center\" className={classes.bannerGrid}>\n                        <Grid item xs={4} >\n                            <Box ml={2}>\n                                <Typography paragraph variant={\"subtitle2\"}>Review Score: </Typography>\n                                <Box display=\"flex\" >\n                                    <Box fontWeight=\"fontWeightBold\" fontSize={26}>{avgGameScore()}</Box><Box fontSize={24}>/ 5.0</Box> <Rating precision={0.1} value={parseFloat(avgGameScore())} size=\"large\" readOnly />\n                                </Box>  \n                            </Box>\n                        </Grid>\n                        <Grid item xs={3}>\n                            <Typography paragraph variant={\"subtitle2\"}>Sessions </Typography>\n                            <Box fontWeight=\"fontWeightBold\" fontSize={26}> {userGameReviews.length} </Box>\n                        </Grid>\n                        <Grid item xs={3}>\n                            <Typography paragraph variant={\"subtitle2\"}>Recommended </Typography>\n                            <Box fontWeight=\"fontWeightBold\" fontSize={26}> {recommends} </Box>\n                        </Grid>\n                        </Box>\n                    </Paper>\n                </Grid>\n                <Grid item xs={12} >\n                    <div className=\"user-game-img-div\">\n                        <img height=\"100%\" width=\"100%\" className={classes.image} src={userGame.image} alt=\"placeholder\" />\n                    </div>\n                </Grid>\n                <Grid item xs={12} className=\"user-game-detail\" component={\"div\"}>\n                    <Typography paragraph variant={\"h4\"}> Details </Typography>\n                    <Paper >\n                        <Box p={2} m={1} className={classes.image}>\n                            <Typography className={classes.section2}> Level: {userGame.level} </Typography>\n                            <Typography className={classes.section2}> Platform: {userGame.platform} </Typography>\n                            <Typography className={classes.section2}> Server: {userGame.server} </Typography>\n                            <Divider variant=\"middle\"/>\n                            <Typography paragraph className={classes.section2} > {userGame.details} </Typography>\n                        </Box>\n                    </Paper>\n                </Grid>\n                \n                <Grid item xs={12} className=\"user-reviews\" component={\"div\"}>\n                    <Grid container className=\"review-head\" justify=\"space-between\">\n                        <Typography variant={\"h4\"}>\n                            Comments <Typography display=\"inline\" color=\"textSecondary\">({userGameReviews.length})</Typography>\n                        </Typography>\n                        <Typography variant={\"h6\"}>\n                            {avgGameScore()} Score\n                            {/* {user.reviews_as_reviewee.length === 0 ? \"0\" :\n                                \n                                (user.reviews_as_reviewee.map(review => review.rating)\n                                .reduce((a, b) => a + b, 0) / user.reviews_as_reviewee.length).toFixed(2)\n                            } Score */}\n                        </Typography>\n                    </Grid>\n                    <Box>\n                        {countTags().map(tagObj => <Chip color=\"secondary\" clickable size=\"small\"label={`${Object.keys(tagObj)} (${Object.values(tagObj)})`} className={classes.chip}/>)}\n                    </Box>\n\n                    {userGameReviews.slice(0,showMore).map(review => {\n                        return (\n                            <Box mt={2} key={review.id} >\n                                <Card className={classes.rootCard} >\n                                    <CardMedia\n                                        className={classes.cover}\n                                    >\n                                        <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\" className={classes.box}>\n                                            <Avatar src={review.reviewer.avatar} className={classes.large}/>\n                                        </Box>     \n                                    </CardMedia>\n                                    <div className={classes.details}>\n                                        <CardContent className={classes.content}>\n                                            <Typography className={classes.section2} variant={\"h6\"}>\n                                                {review.reviewer.username}\n                                            </Typography>\n                                            <Rating className={classes.section2} name=\"read-only\" precision={0.5} value={review.rating} size=\"small\" readOnly />\n                                            <Divider variant=\"middle\"/>\n                                            <Typography paragraph className={classes.section2}>{review.contents}</Typography>\n                                            {review.tags.map(tag => <Chip color=\"secondary\" clickable size=\"small\"label={tag.name} className={classes.chip}/>)}\n                                        </CardContent>\n                                    </div>\n                                </Card>\n                            </Box>\n                        )\n                    })}\n                </Grid>\n                {userGameReviews.length <= 3 ? null :\n                <Box width=\"100%\">\n                    <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n                        <Button size=\"small\" color=\"secondary\" onClick={() => setShowMore(showMore + 3)}> + See More </Button>\n                    </Box>\n                </Box>}\n            </Grid>\n            <Grid item xs={3} component={\"div\"} className={classes.userGameDetail}>\n                {!currentUser ? \n                <Box display=\"flex\" justifyContent=\"space-between\" alignContent=\"center\" m={2}>                 \n                    <Button onClick={handleChat} disabled className={classes.chatBtn}>\n                        <ChatIcon />\n                    </Button>\n                    <Button className={classes.gameBtn} color=\"secondary\" variant=\"contained\" type=\"button\" size=\"small\" disabled onClick={handleOpen}>\n                        Login to Request\n                    </Button>\n                </Box>     \n                : currentUser.id === userGame.user.id ? \n                <Box display=\"flex\" justifyContent=\"space-between\" alignContent=\"center\" m={2}>                 \n                    <Button onClick={handleChat} disabled className={classes.chatBtn}>\n                        <ChatIcon />\n                    </Button>\n                    <Button className={classes.gameBtn} color=\"secondary\" variant=\"contained\" type=\"button\" size=\"small\" disabled onClick={handleOpen}>\n                        Let's Game\n                    </Button>\n                </Box>   \n                :\n                <Box display=\"flex\" justifyContent=\"space-between\" alignContent=\"center\" m={2}> \n                    {/* Needs to be logged in to open this modal , or needs to open login modal if clicked on */}\n                    \n                    <Button onClick={handleChat} className={classes.chatBtn}>\n                        <ChatIcon />\n                    </Button>\n                    <Button className={classes.gameBtn} color=\"secondary\" variant=\"contained\" type=\"button\" size=\"small\" onClick={handleOpen}>\n                        Let's Game\n                    </Button>\n                </Box>}\n\n                <img height=\"100%\" width=\"100%\" className={classes.image} src={user.avatar} alt={user.username}/>\n                    \n                <Link to={`/users/${user.id}`} style={{ textDecoration: 'none' }}>\n                    <Typography paragraph variant={\"h3\"}>{user.username}</Typography>\n                </Link>\n\n\n                <Box>\n                    <Typography paragraph variant={\"h4\"}>Other Games</Typography>\n                    {/* <Grid container item xs={12} spacing={2} className={classes.gameCards} >\n                        {user.user_games.slice(0,3).map(userGame => <UserGameCard key={userGame.id} userGame={userGame} />)}\n                    </Grid> */}\n                    <GridList className={classes.gridList} cols={2.5}>\n                        {user.user_games.map(userGame => <UserGameDetailCard key={userGame.id} userGame={userGame} />)}\n                    </GridList>\n                    \n                </Box>\n                {!currentUser ? \n                null  \n                : currentUser.id === userGame.user.id ? \n                <Box>\n                    <div>\n                        <Button onClick={handleDelete} className={classes.section2} color=\"secondary\" variant=\"contained\"> Remove this game</Button>\n                        <Button onClick={handleClickEdit} color=\"secondary\" variant=\"contained\">Edit Game Details</Button>\n                        <Popover\n                            id={idEdit}\n                            open={openEdit}\n                            anchorEl={anchorElEdit}\n                            onClose={handleCloseEdit}\n                            anchorOrigin={{\n                            vertical: 'top',\n                            horizontal: 'left',\n                            }}\n                            transformOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'right',\n                            }}\n                        >\n                            <Box>\n                                <EditUserGameDetail userGame={userGame} setUserGame={setUserGame} handleCloseEdit={handleCloseEdit}/>\n                            </Box> \n                        </Popover>\n                        \n                    </div>\n                </Box> : null}\n                \n            </Grid>\n            {/* SideBar */}\n            <Grid item xs={false} sm={1} /> {}\n            <Modal\n                aria-labelledby=\"transition-modal-title\"\n                aria-describedby=\"transition-modal-description\"\n                className={classes.modal}\n                open={open}\n                onClose={handleClose}\n                closeAfterTransition\n                BackdropComponent={Backdrop}\n                BackdropProps={{\n                timeout: 500,\n                }}\n            >\n                <Fade in={open}>\n                <div className={classes.paper}>\n                    <PlaySessionForm currentUser={currentUser} userGame={userGame} setOpen={setOpen}/>\n                </div>\n                </Fade>\n            </Modal>\n\n        </Grid>\n    )\n}\n\nexport default UserGameDetail\n","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/PlaySessionForm.js",[],"/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/ReviewForm.js",["111"],"import React, { useState, useEffect } from 'react'\n// import { useHistory } from 'react-router-dom'\nimport Rating from '@material-ui/lab/Rating';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { FormControl, Button, FormLabel, TextareaAutosize, Typography, Box, Grid, Paper } from '@material-ui/core';\n// import CardMedia from '@material-ui/core/CardMedia';\n// import CardActionArea from '@material-ui/core/CardActionArea';\n// import CardActions from '@material-ui/core/CardActions';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Avatar from '@material-ui/core/Avatar';\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      width: '25ch',\n    },\n    label: {\n        margin: theme.spacing(2),\n    },\n    cardContent: {\n        alignItems: \"auto\"\n    },\n    large: {\n        width: theme.spacing(50),\n        height: theme.spacing(50),\n    },\n    avatarBox: {\n        margin: theme.spacing(2)\n    },\n    tagBox: {\n        maringTop: theme.spacing(2)\n        // width: \"50%\"\n    },\n    textArea: {\n        marginLeft: theme.spacing(10),\n        marginRight: theme.spacing(10),\n        marginBottom: theme.spacing(2),\n        marginTop: theme.spacing(2)\n        // width: \"80%\"\n    },\n    submit: {\n        marginLeft: theme.spacing(10),\n        marginRight: theme.spacing(10),\n        marginBottom: theme.spacing(2)\n    }\n}));\n\nfunction ReviewForm({ currentUser, session, reviewee, handleCloseReview, updateSession }) {\n    const [contents, setContents] = useState(\"\")\n    const [rating, setRating] = useState(5)\n    const [tags, setTags] = useState([])\n    // const [addedTags, setAddedTags] = useState([])\n    // const history = useHistory()\n    const classes = useStyles()\n    const [state, setState] = useState({\n        2: false,\n        3: false,\n        4: false,\n        5: false,\n        6: false,\n        7: false,\n        8: false,\n        9: false,\n        10: false,\n    });\n\n\n    console.log(rating)\n    console.log(reviewee)\n    console.log(state)\n\n    \n    const handleChange = (event) => {\n        setState({ ...state, [event.target.name]: event.target.checked });\n    };\n\n\n    useEffect(() => {\n        fetch(`${process.env.REACT_APP_API_BASE_URL}/tags`)\n            .then(resp => resp.json())\n            .then(data => {\n                setTags(data)\n            })\n    }, [])\n\n    function handleSubmit(event) {\n        event.preventDefault()\n\n        const reviewData = {\n            reviewer_id: parseInt(currentUser.id),\n            reviewee_id: parseInt(reviewee.id),\n            contents: contents,\n            rating: parseFloat(rating),\n            play_session_id: parseInt(session.id)\n        }\n\n        let tagsArray = []\n\n        for (const [key, value] of Object.entries(state)) {\n            if (value === true) {\n                tagsArray = [...tagsArray, parseInt(key)]\n            }\n        }\n\n        console.log(reviewData)\n        console.log(tagsArray)\n\n\n        fetch(`${process.env.REACT_APP_API_BASE_URL}/reviews`, {\n            method: 'POST',\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(reviewData)\n        })\n        .then(resp => resp.json())\n        .then(newReviewObj => {\n            console.log(newReviewObj)\n            // if (newReviewObj.id === null) {\n            //     alert(\"Can only review a user once!\")\n            // } else {\n            //     history.push(`/users/${currentUser.id}`)\n            // }\n            for (const id of tagsArray) {\n                fetch(`${process.env.REACT_APP_API_BASE_URL}/review_tags`, {\n                    method: 'POST',\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    }, \n                    body: JSON.stringify({\n                        review_id: newReviewObj.id,\n                        tag_id: id\n                    })\n                })\n                .then(resp => resp.json())\n                .then(reviewTag => {\n                    console.log(reviewTag)\n                })\n            }\n            console.log(\"done\")\n            handleCloseReview()\n            updateSession(session ,newReviewObj)\n        })\n    }\n    return (\n        <Paper>\n        <Grid container>\n            <Grid item xs={1}/>\n            <Grid item xs={10}>\n            \n                <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" className={classes.avatarBox}>\n                    <Avatar src={reviewee.avatar} className={classes.large}/>\n                </Box>\n                <FormControl onSubmit={handleSubmit}>\n                    <Box display=\"flex\" justifyContent=\"center\"><Typography paragraph variant={\"h6\"}> Comment for {reviewee.username} on {session.game.name}</Typography> </Box>\n                    <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n                        <FormLabel> Rate: </FormLabel>\n                        <Rating\n                            name=\"rating\"\n                            precision={0.5}\n                            value={rating}\n                            onChange={(event, newValue) => {\n                                setRating(newValue);\n                            }}\n                        />\n                    </Box>\n                    <Box className={classes.tagBox}>\n\n                        <Grid container>\n                        <Grid item xs={3}/>\n                        <Grid item xs={6} alignContent=\"center\" alignItems=\"center\">\n                        <FormControlLabel\n                            control={<Checkbox checked={state.id} onChange={handleChange} name={2} />}\n                            label={\"Chill\"}\n                        />\n                        <FormControlLabel\n                            control={<Checkbox checked={state.id} onChange={handleChange} name={3} />}\n                            label={\"Tilt-proof\"}\n                        />\n                        <FormControlLabel\n                            control={<Checkbox checked={state.id} onChange={handleChange} name={4} />}\n                            label={\"Team player\"}\n                        />\n                        <FormControlLabel\n                            control={<Checkbox checked={state.id} onChange={handleChange} name={5} />}\n                            label={\"Friendly\"}\n                        />\n                        <FormControlLabel\n                            control={<Checkbox checked={state.id} onChange={handleChange} name={6} />}\n                            label={\"Interactive\"}\n                        />\n                        <FormControlLabel\n                            control={<Checkbox checked={state.id} onChange={handleChange} name={7} />}\n                            label={\"Strategic\"}\n                        />\n                        <FormControlLabel\n                            control={<Checkbox checked={state.id} onChange={handleChange} name={8} />}\n                            label={\"Humorous\"}\n                        />\n                        <FormControlLabel\n                            control={<Checkbox checked={state.id} onChange={handleChange} name={9} />}\n                            label={\"Creative\"}\n                        />\n                        <FormControlLabel\n                            control={<Checkbox checked={state.id} onChange={handleChange} name={10} />}\n                            label={\"Carry\"}\n                        />\n                        </Grid>\n                        <Grid item xs={3}/>\n                        </Grid>\n                    </Box>\n                    <TextareaAutosize placeholder={\"Leave a comment (optional)\"} name=\"content\" value={contents} className={classes.textArea} onChange ={event => setContents(event.target.value)}/>\n                    \n                    <Button variant=\"contained\" color=\"secondary\" onClick={handleSubmit} className={classes.submit}>Submit Review</Button>\n                </FormControl>\n            </Grid>\n            <Grid item xs={1}/>\n        </Grid>\n        </Paper>\n    )\n}\n\n\n\nexport default ReviewForm\n","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/EditUserInfo.js",[],"/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/EditUserGameDetail.js",[],"/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/theme.js",["112","113"],"import { createMuiTheme } from '@material-ui/core/styles';\nimport purple from '@material-ui/core/colors/purple';\nimport green from '@material-ui/core/colors/green';\n\nconst theme = createMuiTheme({\n  palette: {\n    type: \"dark\"\n  },\n});\n\nexport default theme",["114","115"],"/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/UserGameCard.js",[],"/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/SignUp.js",["116","117"],"import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\n// import { Button } from '@material-ui/core'\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\n// import Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { makeStyles } from '@material-ui/core/styles';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" to={\"/\"}>\n        LFG\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100vh',\n  },\n  image: {\n    backgroundImage: 'url(/images/wanella.gif)',\n    backgroundRepeat: 'no-repeat',\n    backgroundColor:\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  load: {\n    height: \"100vh\",\n    width: \"100%\"\n  },\n    loadBox: {\n    width: \"100%\"\n  }\n}))\n\nfunction SignUp({ firstGame, handleSignUp }) {\n    const [username, setUsername] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [discord, setDiscord] = useState(\"\")\n    const [errors, setErrors] = useState(\"\")\n    const classes = useStyles()\n    const defaultImg = \"https://i.pinimg.com/originals/b1/92/4d/b1924dce177345b5485bb5490ab3441f.jpg\"\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        const formData = { \n            avatar: defaultImg, \n            name: \"\",\n            bio: \"\",\n            lfg: true,\n            username, \n            password, \n            discord \n        }\n        //console.log(formData)\n    \n        fetch(`${process.env.REACT_APP_API_BASE_URL}/signup`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(formData),\n        })\n          .then((r) => r.json())\n          .then((data) => {\n            // then set that user in state in our App component\n            console.log(data.user)\n            if (data.user) {\n                handleSignUp(data.user)\n                localStorage.setItem(\"token\", data.token)\n            } else {\n                console.log(data)\n                setErrors(data.error)\n              // alert('Incorret username or password')\n            }\n          });\n    }\n\n    if (!firstGame) return (\n      <Grid container className={classes.load}>\n        <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" className={classes.loadBox}>\n          <CircularProgress color=\"secondary\" />\n        </Box>\n    </Grid>\n    )\n    return (\n      <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <img height=\"80px\" src='https://i.imgur.com/NoEHEH8.png' alt=\"lfg-logo\"/>\n\n          {/* <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar> */}\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign up\n          </Typography>\n          <form className={classes.form} noValidate>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Username\"\n              name=\"username\"\n              // autoComplete=\"username\"\n              autoFocus\n              value={username}\n              onChange={(e) => setUsername(e.target.value)}\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"discord\"\n              label=\"Discord\"\n              type=\"discord\"\n              id=\"discord\"\n              value={discord}\n              onChange={(e) => setDiscord(e.target.value)}\n            />\n            <div className=\"errors\">{errors}</div>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              onClick={handleSubmit}\n            >\n              Sign Up\n            </Button>\n            <Grid container>\n              <Grid item xs>\n                <Link to={`/games/${firstGame.id}`} variant=\"body2\">\n                  Continue as Guest\n                </Link>\n              </Grid>\n              <Grid item>\n                <Link to={\"/\"} variant=\"body2\">\n                  {\"Have an account already? Sign in\"}\n                </Link>\n              </Grid>\n            </Grid>\n            <Box mt={5}>\n              <Copyright />\n            </Box>\n          </form>\n        </div>\n      </Grid>\n    </Grid>\n    )\n}\n\nexport default SignUp\n","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/InboxComponent.js",["118"],"import React, { useEffect } from 'react'\nimport Talk from \"talkjs\";\n\n\nconst InboxComponent = ({ user, otherUser }) => {\n    const talkjsContainer = React.createRef();\n\n    console.log(user)\n\n    useEffect(() => {\n        \n        const currentUser = user;\n\n        Talk.ready.then(() => {\n            let me = new Talk.User({\n                id: currentUser.id,\n                name: currentUser.username,\n                photoUrl: currentUser.avatar,\n                // welcomeMessage: \"Hey there! How are you? :-)\"\n            });\n\n            const session = new Talk.Session({\n                appId: \"tZAIJPQN\",\n                me: me\n            });\n\n            // console.log(session)\n            if (otherUser) {\n                let other = new Talk.User({\n                    id: otherUser.id,\n                    name: otherUser.username,\n                    // email: \"Sebastian@example.com\",\n                    photoUrl: otherUser.avatar,\n                    // welcomeMessage: \"Hey, how can I help?\"\n                });\n            \n                const conversation = session.getOrCreateConversation(Talk.oneOnOneId(me, other))\n                conversation.setParticipant(me);\n                conversation.setParticipant(other);\n    \n                \n                const inbox = session.createInbox({selected: conversation}); //{selected: conversation}\n                inbox.mount(talkjsContainer.current);\n            } else {\n                const inbox = session.createInbox(); //{selected: conversation}\n                inbox.mount(talkjsContainer.current);\n            }\n            // console.log(other)\n        })\n    },[])\n\n    console.log(talkjsContainer.current)\n    // if (talkjsContainer.current === null) return <h1>Loading...</h1>\n    return (\n        <div ref={talkjsContainer} className=\"chatbox-container\"></div>\n        // <div></div>\n    )\n}\n\n// class InboxComponent extends React.Component {\n    \n//     constructor(props) {\n//       super(props)\n//       this.talkjsContainer = React.createRef();\n//     }\n    \n//     componentDidMount() {    \n//       Talk.ready.then(() => {\n//         var me = new Talk.User({\n//           id: this.props.user.id,\n//           name: this.props.user.username,\n//         //   email: \"demo@talkjs.com\",\n//           photoUrl: this.props.user.avatar,\n//         //   welcomeMessage: \"Hey there! How are you? :-)\",\n//           role: \"user\"\n//         });\n        \n//         window.talkSession = new Talk.Session({\n//           appId: \"tZAIJPQN\",\n//           me: me\n//         });\n        \n//         var other = new Talk.User({\n//           id: this.props.otherUser.id,\n//           name: this.props.otherUser.username,\n//         //   email: \"demo@talkjs.com\",\n//           photoUrl: this.props.otherUser.avatar,\n//         //   welcomeMessage: \"Hey, how can I help?\",\n//           role: \"user\"\n//         });\n  \n//         var conversation = window.talkSession.getOrCreateConversation(Talk.oneOnOneId(me, other));\n//         conversation.setParticipant(me);\n//         conversation.setParticipant(other);\n        \n//         var inbox = window.talkSession.createInbox({selected: conversation});\n//         inbox.mount(this.talkjsContainer.current);\n//       });\n//     }\n  \n//     render() {\n//       return (\n//         <div ref={this.talkjsContainer} className=\"chatbox-container\"></div>\n//       )\n//     }\n//   }\n\n\n\n// class InboxComponent extends Component {\n\n//     constructor(props) {\n//         super(props);\n\n//         this.inbox = undefined;\n//         let currentUser;\n//         const currentTalkjsUser = localStorage.getItem('currentTalkjsUser');\n//         if (currentTalkjsUser) {\n//             currentUser = JSON.parse(currentTalkjsUser)\n//         }\n\n//         this.state = {\n//             currentUser\n//         }\n//     }\n\n\n//     componentDidMount() {\n//         Talk.ready\n//             .then(() => {\n//                 const me = new Talk.User(this.state.currentUser);\n                \n//                 if (!window.talkSession) {\n//                     window.talkSession = new Talk.Session({\n//                         appId: \"tZAIJPQN\",\n//                         me: me\n//                     });\n//                 }\n            \n//                 this.inbox = window.talkSession.createInbox();\n//                 this.inbox.mount(this.container);\n\n//             })\n//             .catch(e => console.error(e));\n//     }\n\n//     render() {\n//         return (\n//             <Fragment>\n//                 <div style={{height: '500px'}} className=\"inbox-container\" ref={c => this.container = c}>Loading...</div>\n//             </Fragment>\n//         );\n//     }\n//   }\n  \nexport default InboxComponent\n","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/Inbox.js",[],"/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/Dashboard.js",["119","120"],"import React, { useState, useEffect } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n// import Typography from '@material-ui/core/Typography';\nimport { Grid, Box } from '@material-ui/core'\nimport SentComments from './dashboard/SentComments';\nimport ReceivedComments from './dashboard/ReceivedComments';\nimport List from '@material-ui/core/List';\nimport EditReview from './dashboard/EditReview';\nimport Modal from '@material-ui/core/Modal';\nimport Fade from '@material-ui/core/Fade';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    comments: {\n        marginRight: theme.spacing(4),\n    },\n    load: {\n        height: \"100vh\",\n        width: \"100%\"\n    },\n        loadBox: {\n        width: \"100%\"\n    },\n    modal: {\n        marginTop: theme.spacing(20),\n        marginBottom: theme.spacing(20),\n        marginRight: theme.spacing(60),\n        marginLeft: theme.spacing(60),\n    }\n}))\n\n\nfunction Dashboard({ currentUser }) {\n    const classes = useStyles()\n    const [tab, setTab] = useState(0)\n    const [review, setReview] = useState(null)\n    const [sentReviews, setSentReviews] = useState([])\n    const [user, setUser] = useState(null)\n    const [isLoaded, setIsLoaded] = useState(false)\n    // const [requestTab, setRequestTab] = React.useState(0);\n    // console.log(currentUser)\n    \n    // useEffect(() => {\n    //     const sentReviews = currentUser.reviews_as_reviewer.map(review => <SentComments key={review.id} review={review}/>)\n    // }, [])\n    // const handleRequestChange = (event, newValue) => {\n    //   setRequestTab(newValue);\n    // };\n\n    const handleChange = (event, newValue) => {\n        setTab(newValue);\n    };\n\n    const handleEdit = (review) => {\n        console.log(review)\n        setReview(review)\n        setOpen(true)\n    }\n\n    const [open, setOpen] = React.useState(false);\n\n    const handleOpen = () => {\n      setOpen(true);\n    };\n  \n    const handleClose = () => {\n      setOpen(false);\n    };\n\n    const updateReview = (updReview) => {\n        setOpen(false)\n        console.log(updReview)\n\n        const updatedReviews = sentReviews.map(review => {\n            if (review.id === updReview.id) {\n                return {...review, rating: updReview.rating, contents: updReview.contents}\n            } else {\n                return review\n            }\n        })\n        setSentReviews(updatedReviews)\n    }\n\n    const deleteReview = (delReview) => {\n        console.log(delReview)\n\n        fetch(`${process.env.REACT_APP_API_BASE_URL}/reviews/${delReview.id}`, {\n            method: 'DELETE'\n        })\n        .then(resp => resp.json())\n        .then(data => {\n            const updatedReviews = sentReviews.filter(review => review.id !== delReview.id)\n            setSentReviews(updatedReviews)\n        })\n    } \n\n    useEffect(() => {\n        fetch(`${process.env.REACT_APP_API_BASE_URL}/users/${currentUser.id}`)\n            .then(resp => resp.json())\n            .then(data => {\n                setUser(data)\n                setSentReviews(data.reviews_as_reviewer.reverse())\n                setIsLoaded(true)\n                \n            })\n    }, [])\n   \n\n    // console.log(currentUser.reviews_as_reviewee)\n    if (!isLoaded) return (\n        <Grid container className={classes.load}>\n            <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" className={classes.loadBox}>\n                <CircularProgress color=\"secondary\" />\n            </Box>\n        </Grid>\n    )\n    return (\n        <>\n        <Grid container >\n            <Grid item xs={12}>\n            <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n                <Tabs value={tab} onChange={handleChange} >\n                    <Tab label=\"Sent Comments\"  />\n                    <Tab label=\"Received Comments\"  />\n                    {/* <Tab label=\"Sent Request\"  />\n                    <Tab label=\"Received Request\"  />\n                    <Tab label=\"Accepted Request\"  />   */}\n                </Tabs>       \n            </Box>\n            </Grid>\n            \n            <Grid item xs={12}>\n            <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n                { tab === 0 ? <List>{sentReviews.map(review => <SentComments key={review.id} review={review} handleEdit={handleEdit} deleteReview={deleteReview}/>)}</List>  : null}\n                { tab === 1 ? <List>{user.reviews_as_reviewee.map(review => <ReceivedComments key={review.id} review={review} />)}</List> : null}\n                { tab === 2 ? 'display sent request' : null}\n                { tab === 3 ? 'display received request' : null}\n                { tab === 4 ? 'display accepted request' : null}\n                </Box>\n            </Grid>\n        </Grid>\n\n        <Modal\n            className={classes.modal}\n            open={open}\n            onClose={handleClose}\n            closeAfterTransition\n            BackdropComponent={Backdrop}\n            BackdropProps={{\n            timeout: 500,\n            }}\n        >\n            <Fade in={open}>\n            <div className={classes.paper}>\n                <EditReview review={review} updateReview={updateReview} />\n            </div>\n            </Fade>\n        </Modal>\n        </>\n    )\n}\n\nexport default Dashboard\n","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/dashboard/SentComments.js",[],"/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/dashboard/EditReview.js",[],"/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/dashboard/ReceivedComments.js",[],"/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/UserGameDetailCard.js",[],{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","severity":1,"message":"126","line":51,"column":8,"nodeType":"127","endLine":51,"endColumn":10,"suggestions":"128"},{"ruleId":"129","severity":1,"message":"130","line":191,"column":5,"nodeType":"131","messageId":"132","endLine":191,"endColumn":15},{"ruleId":"133","severity":1,"message":"134","line":60,"column":12,"nodeType":"135","messageId":"136","endLine":60,"endColumn":16},{"ruleId":"133","severity":1,"message":"137","line":2,"column":8,"nodeType":"135","messageId":"136","endLine":2,"endColumn":14},{"ruleId":"133","severity":1,"message":"138","line":3,"column":8,"nodeType":"135","messageId":"136","endLine":3,"endColumn":13},{"ruleId":"121","replacedBy":"139"},{"ruleId":"123","replacedBy":"140"},{"ruleId":"133","severity":1,"message":"141","line":4,"column":8,"nodeType":"135","messageId":"136","endLine":4,"endColumn":14},{"ruleId":"133","severity":1,"message":"142","line":12,"column":8,"nodeType":"135","messageId":"136","endLine":12,"endColumn":24},{"ruleId":"125","severity":1,"message":"143","line":50,"column":7,"nodeType":"127","endLine":50,"endColumn":9,"suggestions":"144"},{"ruleId":"133","severity":1,"message":"145","line":69,"column":11,"nodeType":"135","messageId":"136","endLine":69,"endColumn":21},{"ruleId":"125","severity":1,"message":"146","line":113,"column":8,"nodeType":"127","endLine":113,"endColumn":10,"suggestions":"147"},"no-native-reassign",["148"],"no-negated-in-lhs",["149"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'user.id' and 'userGame.game.name'. Either include them or remove the dependency array.","ArrayExpression",["150"],"no-dupe-keys","Duplicate key 'bannerGrid'.","ObjectExpression","unexpected","no-unused-vars","'tags' is assigned a value but never used.","Identifier","unusedVar","'purple' is defined but never used.","'green' is defined but never used.",["148"],["149"],"'Avatar' is defined but never used.","'LockOutlinedIcon' is defined but never used.","React Hook useEffect has missing dependencies: 'otherUser', 'talkjsContainer', and 'user'. Either include them or remove the dependency array.",["151"],"'handleOpen' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'currentUser.id'. Either include it or remove the dependency array.",["152"],"no-global-assign","no-unsafe-negation",{"desc":"153","fix":"154"},{"desc":"155","fix":"156"},{"desc":"157","fix":"158"},"Update the dependencies array to be: [user.id, userGame.game.name]",{"range":"159","text":"160"},"Update the dependencies array to be: [otherUser, talkjsContainer, user]",{"range":"161","text":"162"},"Update the dependencies array to be: [currentUser.id]",{"range":"163","text":"164"},[1633,1635],"[user.id, userGame.game.name]",[1645,1647],"[otherUser, talkjsContainer, user]",[3323,3325],"[currentUser.id]"]