[{"/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/App.js":"1","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/Login.js":"2","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/GamePage.js":"3","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/UserCard.js":"4","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/index.js":"5","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/Nav.js":"6","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/AddGame.js":"7","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/GameCard.js":"8","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/UserShow.js":"9","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/UserGameDetail.js":"10","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/PlaySessionForm.js":"11","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/ReviewForm.js":"12","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/EditUserInfo.js":"13","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/EditUserGameDetail.js":"14","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/theme.js":"15","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/UserGameCard.js":"16","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/SignUp.js":"17","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/InboxComponent.js":"18","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/Inbox.js":"19"},{"size":8071,"mtime":1613011517422,"results":"20","hashOfConfig":"21"},{"size":5263,"mtime":1613011918926,"results":"22","hashOfConfig":"21"},{"size":6110,"mtime":1613012193934,"results":"23","hashOfConfig":"21"},{"size":2315,"mtime":1612926978299,"results":"24","hashOfConfig":"21"},{"size":939,"mtime":1612566091729,"results":"25","hashOfConfig":"21"},{"size":9513,"mtime":1613011196963,"results":"26","hashOfConfig":"21"},{"size":1495,"mtime":1613011697106,"results":"27","hashOfConfig":"21"},{"size":1740,"mtime":1612926063910,"results":"28","hashOfConfig":"21"},{"size":25326,"mtime":1613011196965,"results":"29","hashOfConfig":"21"},{"size":14084,"mtime":1613011196964,"results":"30","hashOfConfig":"21"},{"size":2480,"mtime":1612917372118,"results":"31","hashOfConfig":"21"},{"size":4378,"mtime":1612902990727,"results":"32","hashOfConfig":"21"},{"size":4457,"mtime":1612814457462,"results":"33","hashOfConfig":"21"},{"size":3937,"mtime":1612749101955,"results":"34","hashOfConfig":"21"},{"size":257,"mtime":1612543059693,"results":"35","hashOfConfig":"21"},{"size":1323,"mtime":1613011196963,"results":"36","hashOfConfig":"21"},{"size":5583,"mtime":1613012108256,"results":"37","hashOfConfig":"21"},{"size":4710,"mtime":1613011196962,"results":"38","hashOfConfig":"21"},{"size":371,"mtime":1613011710771,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"18f01r6",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"42"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/App.js",[],["85","86"],"/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/Login.js",[],"/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/GamePage.js",["87","88"],"/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/UserCard.js",[],"/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/index.js",[],"/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/Nav.js",["89","90","91","92","93","94"],"import React, { useState } from 'react'\nimport { useLocation, useHistory } from 'react-router-dom'\nimport { Button, AppBar, Toolbar, Typography } from '@material-ui/core'\nimport { makeStyles, fade } from '@material-ui/core/styles'\nimport IconButton from '@material-ui/core/IconButton';\nimport InputBase from '@material-ui/core/InputBase';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Avatar from '@material-ui/core/Avatar';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\n\nconst useStyles = makeStyles((theme) => ({\n    grow: {\n        flexGrow: 1,\n    },\n    appBar: {\n        paddingBottom: 0,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n        marginLeft: theme.spacing(1),\n    },\n    title: {\n        // flexGrow: 1,\n        display: 'none',\n        [theme.breakpoints.up('sm')]: {\n            display: 'block',\n        },\n    },\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        '&:hover': {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginRight: theme.spacing(2),\n        marginLeft: 0,\n        width: '100%',\n        // height:'50%',\n        display:'flex',\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: theme.spacing(3),\n            width: 'auto',\n        },\n    },\n    searchIcon: {\n        padding: theme.spacing(0, 2),\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    inputRoot: {\n        color: 'inherit',\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 0),\n        // vertical padding + font size from searchIcon\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('md')]: {\n            width: '12ch',\n            '&:focus': {\n                width: '22ch',\n            },\n        },\n    },\n    sectionDesktop: {\n        display: 'none',\n        [theme.breakpoints.up('md')]: {\n            display: 'flex',\n        },\n    },\n    large: {\n        width: theme.spacing(7),\n        height: theme.spacing(7),\n    },\n    login: {\n        marginRight: theme.spacing(1),\n    },\n    form: {\n        width: '100%',\n    }\n}));\n\n\nfunction Nav({ currentUser, handleLogout }) {\n    const [search, setSearch] = useState(\"\")\n    const [anchorEl, setAnchorEl] = useState(null)\n    const history = useHistory()\n    const classes = useStyles()\n    const location = useLocation()\n    const isMenuOpen = Boolean(anchorEl)\n\n    const handleProfileMenuOpen = (event) => {\n        // console.log(event.currentTarget)\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleMenuCloseProfile = () => {\n        history.push(`/users/${currentUser.id}`)\n        setAnchorEl(null);\n    };\n\n    const handleLogoutClose = () => {\n        setAnchorEl(null);\n        handleLogout()\n    }\n\n    const handleMenuCloseInbox = () => {\n        history.push(`/inbox`)\n        setAnchorEl(null);\n    };\n\n    const handleMenuClose = () => {\n        setAnchorEl(null);\n    };\n\n    const menuId = 'primary-search-account-menu';\n    const renderMenu = (\n        <Menu\n            anchorEl={anchorEl}\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n            id={menuId}\n            keepMounted\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n            open={isMenuOpen}\n            onClose={handleMenuClose}\n        >\n            <MenuItem onClick={handleMenuCloseProfile}>Profile</MenuItem>\n            <MenuItem onClick={handleMenuCloseInbox}>Inbox</MenuItem>\n            <MenuItem onClick={handleLogoutClose}>Logout</MenuItem> \n        </Menu>\n    );\n\n    const handleSearch = (event) => {\n        event.preventDefault()\n\n        console.log(search)\n    }\n    \n    // console.log(search)\n    \n    if (location.pathname === \"/\" || location.pathname === \"/signup\") return null\n    return (\n    <div className={classes.grow}>\n        \n    <AppBar position=\"static\" className={classes.appBar}>\n        <Toolbar id=\"back-to-top-anchor\">\n        <div className=\"logo\">\n            <img height=\"50px\" width=\"110px\" src=\"https://i.imgur.com/NoEHEH8.png\" />\n        </div>\n        <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n        >\n            <MenuIcon />\n        </IconButton>\n        <Button className={classes.title} onClick={() => history.push(\"/games\")}>\n            All Games\n        </Button>\n        \n        \n        <div className={classes.grow} />\n        <div className={classes.search}>\n                <div className={classes.searchIcon}>\n                    <SearchIcon />\n                </div>\n                <InputBase\n                placeholder=\"Search…\"\n                classes={{\n                    root: classes.inputRoot,\n                    input: classes.inputInput,\n                }}\n                inputProps={{ 'aria-label': 'search' }}\n                />\n                {/* <form className={classes.form} onSubmit={handleSearch}>\n                <Autocomplete\n                    freeSolo\n                    fullWidth\n                    autoSelect={true}\n                    id=\"free-solo-2-demo\"\n                    disableClearable\n                    options={users.map((user) => \n                        user.username\n                        )}\n                    onSubmit={() => console.log(search)}\n                    inputValue={search}\n                    onInputChange={(e) => setSearch(e.target.value)}\n                    renderInput={(params) => (\n                    <TextField\n                        {...params}\n                        label=\"Search Users\"\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        className={classes.autocomplete}\n                        // value={search}\n                        // onChange={(e) => setSearch(e.target.value)}\n                        // classes={{\n                        //     root: classes.inputRoot,\n                        //     input: classes.inputInput,\n                        // }}\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                />\n                </form> */}\n        </div>\n        \n        \n        <div className={classes.sectionDesktop}>\n            \n            {/* <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n            <Badge badgeContent={4} color=\"secondary\">\n                <MailIcon />\n            </Badge>\n            </IconButton>\n            <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\n            <Badge badgeContent={17} color=\"secondary\">\n                <NotificationsIcon />\n            </Badge>\n            </IconButton> */}\n            {!currentUser ? \n            <div>\n                <Button onClick={() => history.push('/')}variant=\"outlined\" color=\"inherit\" className={classes.login}>Login</Button>\n                <Button color=\"secondary\" variant=\"contained\">Signup</Button>\n            </div>\n            \n            :\n            <div>\n            <IconButton\n                edge=\"end\"\n                aria-label={\"current user\"}\n                aria-controls={menuId}\n                aria-haspopup=\"true\"\n                onClick={handleProfileMenuOpen}\n                color=\"inherit\"\n            >\n                <Avatar src={currentUser.avatar} className={classes.large}/>\n            </IconButton>\n            </div>}\n        </div>\n        </Toolbar>\n    </AppBar>\n    {renderMenu}\n    </div>\n    );\n\n    // const location = useLocation()\n    // if (location.pathname === \"/\") return null\n    // return (\n    //     <AppBar className=\"nav\" position=\"static\">\n    //         <Toolbar>  \n    //             <Typography component={'div'} className=\"nav-games\">\n    //                 <NavLink to={\"/games\"}>\n    //                     Games\n    //                 </NavLink>\n    //             </Typography>              \n    //             <Typography component={'div'} className=\"user-nav-div\">\n    //                 {!currentUser ?\n    //                     <div>\n    //                         <NavLink exact to={\"/\"}>\n    //                             Login\n    //                         </NavLink>\n    //                     </div> \n    //                     :\n    //                     <div className=\"logged-in\">\n    //                         <div className='welcome-div'>\n    //                             <NavLink exact to={`/users/${currentUser.id}`} className=\"nav-button\">\n    //                                <Typography>Welcome, {currentUser.username}!</Typography> \n    //                             </NavLink>\n    //                             <Button color=\"secondary\" variant=\"contained\" className=\"nav-button\" onClick={handleLogout}>Logout</Button>\n    //                         </div>\n    //                     </div>} \n    //             </Typography>\n    //         </Toolbar>\n    //     </AppBar>\n    // )\n}\n\n\n\nexport default Nav\n","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/AddGame.js",[],"/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/GameCard.js",[],"/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/UserShow.js",[],"/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/UserGameDetail.js",[],"/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/PlaySessionForm.js",[],"/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/ReviewForm.js",["95","96","97","98","99","100","101"],"import React, { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport Rating from '@material-ui/lab/Rating';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { FormControl, Button, FormLabel, InputLabel, Input, TextField, TextareaAutosize, Typography, Box ,Card ,Divider ,Grid } from '@material-ui/core';\nimport CardMedia from '@material-ui/core/CardMedia';\n// import CardActionArea from '@material-ui/core/CardActionArea';\n// import CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      width: '25ch',\n    },\n    label: {\n        margin: theme.spacing(2),\n    },\n    cardContent: {\n        alignItems: \"auto\"\n    }\n}));\n\nfunction ReviewForm({ currentUser, sessionId, reviewee }) {\n    const [contents, setContents] = useState(\"\")\n    const [rating, setRating] = useState(1)\n    const history = useHistory()\n    const classes = useStyles()\n\n    console.log(rating)\n    console.log(reviewee)\n\n    function handleSubmit(event) {\n        event.preventDefault()\n\n        const reviewData = {\n            reviewer_id: parseInt(currentUser.id),\n            reviewee_id: parseInt(reviewee.id),\n            contents: contents,\n            rating: parseInt(rating),\n            play_session_id: parseInt(sessionId)\n        }\n\n        console.log(reviewData)\n        fetch(`${process.env.REACT_APP_API_BASE_URL}/reviews`, {\n            method: 'POST',\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(reviewData)\n        })\n        .then(resp => resp.json())\n        .then(newReviewObj => {\n            console.log(newReviewObj)\n            if (newReviewObj.id === null) {\n                alert(\"Can only review a user once!\")\n            } else {\n                history.push(`/users/${currentUser.id}`)\n            }\n        })\n    }\n    return (\n        <Grid container>\n            <Grid item xs={4}/>\n            <Card alignContent=\"center\">\n                <CardHeader \n                    title=\"Review\"\n                >\n                    {\"hEY\"}\n                </CardHeader>\n                <CardMedia>\n                    <img height=\"400px\"src={reviewee.avatar} alt={reviewee.username} />\n                </CardMedia>\n                    <CardContent className={classes.cardContent}>\n                        <FormControl onSubmit={handleSubmit}>\n                            <label>\n                                Review {reviewee.username}<br/>\n                                <textarea name=\"content\" value={contents} onChange ={event => setContents(event.target.value)}/>\n                                <br/>\n                                {/* Rate: <select name=\"rating\" id=\"rating\" form=\"review\" value={rating} onChange={event => setRating(event.target.value)}>\n                                    <option value=\"1\">1</option>\n                                    <option value=\"2\">2</option>\n                                    <option value=\"3\">3</option>\n                                    <option value=\"4\">4</option>\n                                    <option value=\"5\">5</option>              \n                                </select> */}\n                                <>\n                                <FormLabel> Rate: </FormLabel>\n                                <Rating\n                                    name=\"rating\"\n                                    precision={0.5}\n                                    value={rating}\n                                    onChange={(event, newValue) => {\n                                        setRating(newValue);\n                                    }}\n                                />\n                                </>\n                            </label>\n                            <Button variant=\"contained\" color=\"secondary\" onClick={handleSubmit} className=\"submit-button\">Submit Review</Button>\n                        </FormControl>\n                    </CardContent>\n                </Card>\n            <Grid item xs={4}/>\n        </Grid>\n    )\n}\n\n\n\nexport default ReviewForm\n","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/EditUserInfo.js",[],"/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/EditUserGameDetail.js",[],"/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/theme.js",["102","103"],"import { createMuiTheme } from '@material-ui/core/styles';\nimport purple from '@material-ui/core/colors/purple';\nimport green from '@material-ui/core/colors/green';\n\nconst theme = createMuiTheme({\n  palette: {\n    type: \"dark\"\n  },\n});\n\nexport default theme",["104","105"],"/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/UserGameCard.js",["106"],"import React from 'react'\nimport { Link, useLocation } from 'react-router-dom'\nimport Card from '@material-ui/core/Card'\n// import CardActions from '@material-ui/core/CardActions';\n// import CardContent from '@material-ui/core/CardContent';\n// import { makeStyles } from '@material-ui/styles'\nimport { Grid } from '@material-ui/core';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardActionArea from '@material-ui/core/CardActionArea';\n\nfunction UserGameCard({ userGame }) {\n    const { name, image} =  userGame.game\n    const location = useLocation()\n    // console.log(location.pathname === \"/games\")\n    // console.log(userGame.game)\n\n    return (\n        <Grid item xs={4}>\n            <Card className=\"card\" component={\"div\"}>\n            <CardActionArea component={\"div\"}>\n                <Link to={`/user_games/${userGame.id}`}>\n                    <CardMedia\n                        component={\"div\"}\n                        className=\"game-card-img\"\n                        style={{height: \"180px\"}} \n                        // image={image} \n                        title={name}>\n                            <img  src={image} alt={name}/>\n                    </CardMedia>\n                </Link>\n            </CardActionArea>\n            </Card>\n        </Grid>\n    )\n}\n\nexport default UserGameCard","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/SignUp.js",[],"/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/InboxComponent.js",["107"],"import React, { useEffect } from 'react'\nimport Talk from \"talkjs\";\n\n\nconst InboxComponent = ({ user, otherUser }) => {\n    const talkjsContainer = React.createRef();\n\n    console.log(user)\n\n    useEffect(() => {\n        \n        const currentUser = user;\n\n        Talk.ready.then(() => {\n            let me = new Talk.User({\n                id: currentUser.id,\n                name: currentUser.username,\n                photoUrl: currentUser.avatar,\n                welcomeMessage: \"Hey there! How are you? :-)\"\n            });\n\n            const session = new Talk.Session({\n                appId: \"tZAIJPQN\",\n                me: me\n            });\n\n            // console.log(session)\n            if (otherUser) {\n                let other = new Talk.User({\n                    id: otherUser.id,\n                    name: otherUser.username,\n                    // email: \"Sebastian@example.com\",\n                    photoUrl: otherUser.avatar,\n                    // welcomeMessage: \"Hey, how can I help?\"\n                });\n            \n                const conversation = session.getOrCreateConversation(Talk.oneOnOneId(me, other))\n                conversation.setParticipant(me);\n                conversation.setParticipant(other);\n    \n                \n                const inbox = session.createInbox({selected: conversation}); //{selected: conversation}\n                inbox.mount(talkjsContainer.current);\n            } else {\n                const inbox = session.createInbox(); //{selected: conversation}\n                inbox.mount(talkjsContainer.current);\n            }\n            // console.log(other)\n        })\n    },[])\n\n    console.log(talkjsContainer.current)\n    // if (talkjsContainer.current === null) return <h1>Loading...</h1>\n    return (\n        <div ref={talkjsContainer} className=\"chatbox-container\"></div>\n        // <div></div>\n    )\n}\n\n// class InboxComponent extends React.Component {\n    \n//     constructor(props) {\n//       super(props)\n//       this.talkjsContainer = React.createRef();\n//     }\n    \n//     componentDidMount() {    \n//       Talk.ready.then(() => {\n//         var me = new Talk.User({\n//           id: this.props.user.id,\n//           name: this.props.user.username,\n//         //   email: \"demo@talkjs.com\",\n//           photoUrl: this.props.user.avatar,\n//         //   welcomeMessage: \"Hey there! How are you? :-)\",\n//           role: \"user\"\n//         });\n        \n//         window.talkSession = new Talk.Session({\n//           appId: \"tZAIJPQN\",\n//           me: me\n//         });\n        \n//         var other = new Talk.User({\n//           id: this.props.otherUser.id,\n//           name: this.props.otherUser.username,\n//         //   email: \"demo@talkjs.com\",\n//           photoUrl: this.props.otherUser.avatar,\n//         //   welcomeMessage: \"Hey, how can I help?\",\n//           role: \"user\"\n//         });\n  \n//         var conversation = window.talkSession.getOrCreateConversation(Talk.oneOnOneId(me, other));\n//         conversation.setParticipant(me);\n//         conversation.setParticipant(other);\n        \n//         var inbox = window.talkSession.createInbox({selected: conversation});\n//         inbox.mount(this.talkjsContainer.current);\n//       });\n//     }\n  \n//     render() {\n//       return (\n//         <div ref={this.talkjsContainer} className=\"chatbox-container\"></div>\n//       )\n//     }\n//   }\n\n\n\n// class InboxComponent extends Component {\n\n//     constructor(props) {\n//         super(props);\n\n//         this.inbox = undefined;\n//         let currentUser;\n//         const currentTalkjsUser = localStorage.getItem('currentTalkjsUser');\n//         if (currentTalkjsUser) {\n//             currentUser = JSON.parse(currentTalkjsUser)\n//         }\n\n//         this.state = {\n//             currentUser\n//         }\n//     }\n\n\n//     componentDidMount() {\n//         Talk.ready\n//             .then(() => {\n//                 const me = new Talk.User(this.state.currentUser);\n                \n//                 if (!window.talkSession) {\n//                     window.talkSession = new Talk.Session({\n//                         appId: \"tZAIJPQN\",\n//                         me: me\n//                     });\n//                 }\n            \n//                 this.inbox = window.talkSession.createInbox();\n//                 this.inbox.mount(this.container);\n\n//             })\n//             .catch(e => console.error(e));\n//     }\n\n//     render() {\n//         return (\n//             <Fragment>\n//                 <div style={{height: '500px'}} className=\"inbox-container\" ref={c => this.container = c}>Loading...</div>\n//             </Fragment>\n//         );\n//     }\n//   }\n  \nexport default InboxComponent\n","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/Inbox.js",[],{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":5,"column":41,"nodeType":"114","messageId":"115","endLine":5,"endColumn":46},{"ruleId":"116","severity":1,"message":"117","line":154,"column":46,"nodeType":"118","endLine":154,"endColumn":55},{"ruleId":"112","severity":1,"message":"119","line":3,"column":35,"nodeType":"114","messageId":"115","endLine":3,"endColumn":45},{"ruleId":"112","severity":1,"message":"120","line":12,"column":8,"nodeType":"114","messageId":"115","endLine":12,"endColumn":17},{"ruleId":"112","severity":1,"message":"121","line":13,"column":8,"nodeType":"114","messageId":"115","endLine":13,"endColumn":20},{"ruleId":"112","severity":1,"message":"122","line":96,"column":20,"nodeType":"114","messageId":"115","endLine":96,"endColumn":29},{"ruleId":"112","severity":1,"message":"123","line":144,"column":11,"nodeType":"114","messageId":"115","endLine":144,"endColumn":23},{"ruleId":"124","severity":1,"message":"125","line":159,"column":13,"nodeType":"126","endLine":159,"endColumn":86},{"ruleId":"112","severity":1,"message":"127","line":5,"column":42,"nodeType":"114","messageId":"115","endLine":5,"endColumn":52},{"ruleId":"112","severity":1,"message":"128","line":5,"column":54,"nodeType":"114","messageId":"115","endLine":5,"endColumn":59},{"ruleId":"112","severity":1,"message":"120","line":5,"column":61,"nodeType":"114","messageId":"115","endLine":5,"endColumn":70},{"ruleId":"112","severity":1,"message":"129","line":5,"column":72,"nodeType":"114","messageId":"115","endLine":5,"endColumn":88},{"ruleId":"112","severity":1,"message":"119","line":5,"column":90,"nodeType":"114","messageId":"115","endLine":5,"endColumn":100},{"ruleId":"112","severity":1,"message":"130","line":5,"column":102,"nodeType":"114","messageId":"115","endLine":5,"endColumn":105},{"ruleId":"112","severity":1,"message":"131","line":5,"column":113,"nodeType":"114","messageId":"115","endLine":5,"endColumn":120},{"ruleId":"112","severity":1,"message":"132","line":2,"column":8,"nodeType":"114","messageId":"115","endLine":2,"endColumn":14},{"ruleId":"112","severity":1,"message":"133","line":3,"column":8,"nodeType":"114","messageId":"115","endLine":3,"endColumn":13},{"ruleId":"108","replacedBy":"134"},{"ruleId":"110","replacedBy":"135"},{"ruleId":"112","severity":1,"message":"136","line":13,"column":11,"nodeType":"114","messageId":"115","endLine":13,"endColumn":19},{"ruleId":"137","severity":1,"message":"138","line":50,"column":7,"nodeType":"139","endLine":50,"endColumn":9,"suggestions":"140"},"no-native-reassign",["141"],"no-negated-in-lhs",["142"],"no-unused-vars","'Paper' is defined but never used.","Identifier","unusedVar","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Typography' is defined but never used.","'TextField' is defined but never used.","'Autocomplete' is defined but never used.","'setSearch' is assigned a value but never used.","'handleSearch' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'InputLabel' is defined but never used.","'Input' is defined but never used.","'TextareaAutosize' is defined but never used.","'Box' is defined but never used.","'Divider' is defined but never used.","'purple' is defined but never used.","'green' is defined but never used.",["141"],["142"],"'location' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'otherUser', 'talkjsContainer', and 'user'. Either include them or remove the dependency array.","ArrayExpression",["143"],"no-global-assign","no-unsafe-negation",{"desc":"144","fix":"145"},"Update the dependencies array to be: [otherUser, talkjsContainer, user]",{"range":"146","text":"147"},[1642,1644],"[otherUser, talkjsContainer, user]"]