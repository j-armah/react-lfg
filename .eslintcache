[{"/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/App.js":"1","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/Login.js":"2","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/GamePage.js":"3","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/UserCard.js":"4","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/index.js":"5","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/Nav.js":"6","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/AddGame.js":"7","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/GameCard.js":"8","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/UserShow.js":"9","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/UserGameDetail.js":"10","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/PlaySessionForm.js":"11","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/ReviewForm.js":"12","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/EditUserInfo.js":"13","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/EditUserGameDetail.js":"14","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/theme.js":"15"},{"size":3791,"mtime":1612545333572,"results":"16","hashOfConfig":"17"},{"size":2760,"mtime":1612488969275,"results":"18","hashOfConfig":"17"},{"size":1632,"mtime":1612540159422,"results":"19","hashOfConfig":"17"},{"size":1320,"mtime":1612550783528,"results":"20","hashOfConfig":"17"},{"size":936,"mtime":1612545489456,"results":"21","hashOfConfig":"17"},{"size":1665,"mtime":1612496093121,"results":"22","hashOfConfig":"17"},{"size":423,"mtime":1612497298177,"results":"23","hashOfConfig":"17"},{"size":1277,"mtime":1612550874743,"results":"24","hashOfConfig":"17"},{"size":11950,"mtime":1612555339742,"results":"25","hashOfConfig":"17"},{"size":5034,"mtime":1612554881688,"results":"26","hashOfConfig":"17"},{"size":1695,"mtime":1612396778426,"results":"27","hashOfConfig":"17"},{"size":1752,"mtime":1612453261380,"results":"28","hashOfConfig":"17"},{"size":2622,"mtime":1612474580648,"results":"29","hashOfConfig":"17"},{"size":2478,"mtime":1612477493951,"results":"30","hashOfConfig":"17"},{"size":257,"mtime":1612543059693,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},"18f01r6",{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"35"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"35"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"35"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"35"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"35"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"35"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"35"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"35"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"73"},"/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/App.js",["74","75","76","77"],"import React, { useEffect, useState } from 'react'\nimport { Route, Switch, useHistory, useLocation } from 'react-router-dom'\nimport Nav from './Nav'\nimport UserShow from './UserShow'\nimport GamePage from './GamePage'\nimport Login from './Login'\nimport AddGame from './AddGame'\nimport UserGameDetail from './UserGameDetail'\nimport { Grid } from '@material-ui/core'\nimport Paper from '@material-ui/core/Paper';\n\n \nfunction App() {\n  // const [users, setUsers] = useState([])\n  const [isLoaded, setIsLoaded] = useState(false)\n  const [games, setGames] = useState([])\n  const [currentUser, setCurrentUser] = useState(null)\n  const [userGames, setUserGames] = useState([])\n  const history = useHistory()\n  const location = useLocation()\n\n  function addUserGame(game) {\n    console.log(game)\n    const newUserGameObj = {\n      user_id: currentUser.id,\n      game_id: parseInt(game.id),\n      details: \"\"\n    } \n\n    fetch(`${process.env.REACT_APP_API_BASE_URL}/user_games`, {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newUserGameObj)\n    })\n    .then(resp => resp.json())\n    .then(newObj => {\n      setUserGames([...userGames, newObj])\n    })\n  }\n\n  function handleLogin(user) {\n    console.log(user)\n    setCurrentUser(user)\n    history.push(\"/games\")\n  }\n\n  function handleLogout() {\n    setCurrentUser(null)\n    localStorage.removeItem(\"token\")\n    history.push(\"/\")\n  }\n\n  // Auth to keep user logged in after refresh\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      fetch(`${process.env.REACT_APP_API_BASE_URL}/profile`, {\n        method: \"GET\",\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      })\n        .then((r) => r.json())\n        .then((user) => {\n          // console.log(user)\n          setCurrentUser(user);\n          // setIsLoaded(true)\n        });\n    }\n  }, []);\n\n  useEffect(() => {\n    fetch(`${process.env.REACT_APP_API_BASE_URL}/games`)\n      .then(resp => resp.json())\n      .then(data => {\n        // console.log(data)\n        setGames(data)\n\n\n      })\n  }, [])\n\n  // useEffect(() => {\n  //   fetch(`${process.env.REACT_APP_API_BASE_URL}/users`)\n  //     .then(resp => resp.json())\n  //     .then(data => {\n  //       // console.log(data)\n  //       setUsers(data)\n  //     })\n  // }, [])\n\n  useEffect(() => {\n    fetch(`${process.env.REACT_APP_API_BASE_URL}/user_games`)\n      .then(resp => resp.json())\n      .then(data => {\n        setUserGames(data)\n      })\n  }, [])\n\n\n  console.log(currentUser)\n  // console.log(localStorage.getItem(\"token\"))\n  // if (!isLoaded) return <h1>Loading</h1>\n  return (\n    <Grid className=\"app\" container direction=\"column\">\n      <Grid item>\n        <Route>\n          <Nav currentUser={currentUser} handleLogout={handleLogout} />\n        </Route>\n      </Grid>\n      \n      <Switch>\n        <Grid item container>\n          <Grid item xs={false} sm={1} />\n            <Grid item xs={12} sm={10}>\n              <Route exact path=\"/users/:id\">\n                <UserShow currentUser={currentUser} /> \n              </Route>\n              <Route exact path=\"/games/:id\">\n                  <GamePage />\n              </Route>\n              <Route exact path=\"/games\">\n                <AddGame games={games} newUserGame={addUserGame}/>\n              </Route>\n              <Route exact path=\"/user_games/:id\">\n                <UserGameDetail currentUser={currentUser}/>\n              </Route>\n              <Route exact path=\"/\">\n                <Login setCurrentUser={setCurrentUser} firstGame={games[0]} handleLogin={handleLogin}/>\n              </Route>\n            </Grid>\n          <Grid item xs={false} sm={1} />\n        </Grid>\n\n      </Switch>\n    </Grid>\n  );\n}\n\nexport default App;\n",["78","79"],"/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/Login.js",["80"],"import React, { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { Button } from '@material-ui/core'\n\nfunction Login({ setCurrentUser, firstGame, handleLogin }) {\n    const [username, setUsername] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [errors, setErrors] = useState(\"\")\n    const history = useHistory()\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        const formData = { username, password };\n        //console.log(formData)\n    \n        fetch(`${process.env.REACT_APP_API_BASE_URL}/login`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(formData),\n        })\n          .then((r) => r.json())\n          .then((data) => {\n            // then set that user in state in our App component\n            console.log(data.user)\n            if (data.user) {\n              handleLogin(data.user)\n              localStorage.setItem(\"token\", data.token)\n            } else {\n              console.log(data)\n              setErrors(data.error)\n              // alert('Incorret username or password')\n            }\n          });\n    }\n\n    function login() {\n        fetch(`${process.env.REACT_APP_API_BASE_URL}/`, {\n            method: \"POST\",\n            })\n        .then((r) => r.json())\n        .then(data => {\n            setCurrentUser(data)\n            history.push(`/games/${firstGame.id}`)\n        });\n    }\n\n    console.log(username)\n\n    return (\n        <div className=\"login\">\n            <video autoPlay muted loop>\n                <source src=\"/Atlias.mp4\" type=\"video/mp4\"/>\n            </video>\n            <div className=\"login-form-box\">\n                <form className=\"login-form\" onSubmit={handleSubmit}>\n                    <h3>Welcome to LFG</h3>\n                    <label htmlFor=\"username\">Username</label>\n                    <input\n                    type=\"text\"\n                    id=\"username\"\n                    autoComplete=\"off\"\n                    value={username}\n                    onChange={(e) => setUsername(e.target.value)}\n                    />\n                    <label htmlFor=\"password\">Password</label>\n                    <input\n                    type=\"password\"\n                    id=\"password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                    autoComplete=\"current-password\"\n                    />\n                    <Button type=\"submit\" className='submit-button'>Login</Button>\n                </form>\n                <Button> Login </Button>\n                <button onClick={login}>Login</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Login\n","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/GamePage.js",["81"],"import React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport UserCard from './UserCard'\nimport { Grid } from '@material-ui/core'\n\nfunction GamePage() {\n    const [isLoaded, setIsLoaded] = useState(false)\n    const [game, setGame] = useState(null)\n    const [userGames, setUserGames] = useState([])\n    const params = useParams()\n\n    useEffect(() => {\n        fetch(`${process.env.REACT_APP_API_BASE_URL}/games/${params.id}`)\n            .then(resp => resp.json())\n            .then(data => {\n                //console.log(data)\n                setGame(data)\n                setIsLoaded(true)\n            })\n    }, [params.id])\n\n    useEffect(() => {\n        fetch(`${process.env.REACT_APP_API_BASE_URL}/user_games/`)\n            .then(resp => resp.json())\n            .then(data => {\n                console.log(data)\n                const filteredUserGames = data.filter(ug => ug.game_id === parseInt(params.id))\n                setUserGames(filteredUserGames)\n                \n            })\n    }, [])\n\n    console.log(userGames)\n\n    if (!isLoaded) return <h2>Loading...</h2>\n    \n    return (\n        <Grid className=\"game-page\" >\n            <Grid item className=\"game-splash\">\n                {game.name}\n                <img src={game.splash} alt={game.name} />\n            </Grid>\n            <Grid container spacing={3} className=\"users-library\">\n                {userGames.map(userGame => \n                    <UserCard key={userGame.id} user={userGame.user} userGameId={userGame.id}/>    \n                )}\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default GamePage\n","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/UserCard.js",["82","83","84","85","86"],"import React from 'react'\nimport { Link } from 'react-router-dom'\nimport Card from '@material-ui/core/Card'\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport { makeStyles } from '@material-ui/styles'\nimport {Typography, Button, Grid} from '@material-ui/core';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardActionArea from '@material-ui/core/CardActionArea';\n\nfunction UserCard({ user, userGameId }) {\n    const {id, avatar, username, name} = user\n    return (\n        <Grid item xs={3}>\n            <Card className=\"card\">\n                <CardActionArea>\n                    <Link to={`/user_games/${userGameId}`}>\n                        <CardMedia \n                            \n                            component={\"img\"} \n                            style={{ height: \"200px\" }} \n                            width=\"100%\" image={avatar} \n                            title={username}>\n                               \n                        </CardMedia>\n                    </Link>\n                </CardActionArea>\n                <CardContent>\n                    <Typography component={\"span\"}> {username} </Typography> \n                </CardContent>\n            </Card>\n        </Grid>\n    )    \n}\n\nexport default UserCard\n","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/index.js",["87"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n// import './index.css';\nimport './style.css'\nimport App from './components/App';\nimport rawTheme from './theme.json'\n// import reportWebVitals from './reportWebVitals';\n\nconst theme = createMuiTheme(rawTheme);\n\nReactDOM.render(\n  <MuiThemeProvider theme={theme}>\n    <CssBaseline />\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </MuiThemeProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/Nav.js",["88"],"import React from 'react'\nimport { useLocation, NavLink } from 'react-router-dom'\nimport { Button, AppBar, Toolbar, Typography } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/styles'\n\nconst useStyles = makeStyles(() => ({\n    typographyStyles: {\n        flex: 1\n    }\n}))\n\nfunction Nav({ currentUser, handleLogout}) {\n\n    const location = useLocation()\n    if (location.pathname === \"/\") return null\n    return (\n        <AppBar className=\"nav\" position=\"static\">\n            <Toolbar>  \n                <Typography component={'div'} className=\"nav-games\">\n                    <NavLink to={\"/games\"}>\n                        Games\n                    </NavLink>\n                </Typography>              \n                <Typography component={'div'} className=\"user-nav-div\">\n                    {!currentUser ?\n                        <div>\n                            <NavLink exact to={\"/\"}>\n                                Login\n                            </NavLink>\n                        </div> \n                        :\n                        <div className=\"logged-in\">\n                            <div className='welcome-div'>\n                                <NavLink exact to={`/users/${currentUser.id}`} className=\"nav-button\">\n                                    Welcome, {currentUser.username}!\n                                </NavLink>\n                                <Button color=\"secondary\" className=\"nav-button\" onClick={handleLogout}>Logout</Button>\n                            </div>\n                        </div>} \n                </Typography>\n            </Toolbar>\n        </AppBar>\n    )\n}\n\nexport default Nav\n","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/AddGame.js",[],"/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/GameCard.js",["89","90","91","92","93","94"],"import React from 'react'\nimport { Link } from 'react-router-dom'\nimport Card from '@material-ui/core/Card'\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport { makeStyles } from '@material-ui/styles'\nimport {Typography, Button, Grid} from '@material-ui/core';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardActionArea from '@material-ui/core/CardActionArea';\n\nfunction GameCard({ game, newUserGame }) {\n    const {id, name, image} =  game\n\n    function handleClick() {\n        newUserGame(game)\n    }\n\n    return (\n        <Grid item xs={4}>\n            <Card className=\"card\">\n            <CardActionArea>\n                <Link to={`/games/${id}`}>\n                    <CardMedia\n                        component={\"img\"}\n                        width=\"100%\"\n                        className=\"game-card-img\"\n                        style={{height: \"200px\"}} \n                        image={image} \n                        title={name}>\n                    </CardMedia>\n                </Link>\n            </CardActionArea>\n            {/* <Button onClick={handleClick} className=\"add-game-btn\"> Add Game </Button> */}\n            </Card>\n        </Grid>\n    )\n}\n\nexport default GameCard\n","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/UserShow.js",["95","96","97"],"/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/UserGameDetail.js",["98","99"],"import React, { useEffect, useState } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport Modal from 'react-modal';\nimport PlaySessionForm from './PlaySessionForm';\nimport EditUserGameDetail from './EditUserGameDetail';\nimport { Grid, Typography, Button, Box } from '@material-ui/core';\nimport { Link as matLink } from '@material-ui/core'\nimport Paper from '@material-ui/core/Paper';\n\nModal.setAppElement('#root')\n\nfunction UserGameDetail({ currentUser }) {\n    const [isLoaded, setIsLoaded] = useState(false)\n    const [userGame, setUserGame] = useState(null)\n    const [user, setUser] = useState(null)\n    const [modalIsOpen, setIsOpen] = React.useState(false);\n    //var subtitle;\n    const params = useParams()\n\n    function handleClick() {\n        console.log(\"clicked\")\n    }\n\n    function openModal() {\n        setIsOpen(true);\n    }\n\n    function afterOpenModal() {\n        // references are now sync'd and can be accessed.\n        // subtitle.style.color = '#f00';\n    }\n\n    function closeModal(){\n        setIsOpen(false);\n    }\n\n    useEffect(() => {\n        fetch(`${process.env.REACT_APP_API_BASE_URL}/user_games/${params.id}`)\n            .then(resp => resp.json())\n            .then(data => {\n                setUserGame(data)\n                //setUser(data.user)\n                \n                fetch(`${process.env.REACT_APP_API_BASE_URL}/users/${data.user.id}`)\n                    .then(resp => resp.json())\n                    .then(userr => {\n                        console.log(userr)\n                        setUser(userr)\n                        \n                        setIsLoaded(true)\n                    })\n            })\n    }, [params.id])\n\n    if (!isLoaded) return <h2>Loading...</h2>\n    return (\n        <Grid container spacing={4} className=\"user-game-page\" component={\"div\"}>\n            <Grid item xs={8} container spacing={2} className=\"user-game-detail\">\n                <Grid item xs={12} >\n                    <div className=\"user-game-img-div\">\n                        <img height=\"100%\" width=\"100%\" className=\"user-game-img\" src={userGame.image} alt=\"placeholder\" />\n                    </div>\n                </Grid>\n                <Grid item xs={12} className=\"user-game-detail\" component={\"div\"}>\n                    <Typography paragraph variant={\"h4\"}> Details </Typography>\n                    <Paper>\n                        <Box p={2} m={1}>\n                            <Typography paragraph > Level: {userGame.level} </Typography>\n                            <Typography paragraph > Platform: {userGame.platform} </Typography>\n                            <Typography paragraph > Server: {userGame.server} </Typography>\n                            <Typography paragraph > {userGame.details} </Typography>\n                        </Box>\n                    </Paper>\n                </Grid>\n                \n                <Grid item xs={12} className=\"user-reviews\" component={\"div\"}>\n                    <Typography variant={\"h4\"}>\n                        Comments\n                    </Typography>\n                    {user.reviews_as_reviewee.map(review => {\n                        return <Paper key={review.id}>\n                            <Box p={2} m={1}>\n                                <Typography paragraph>{review.rating} | {review.reviewer.username}</Typography>\n                                <Typography paragraph>{review.contents}</Typography>\n                            </Box>\n                        </Paper>\n                    })}\n                </Grid>\n            </Grid>\n            <Grid item xs={4} component={\"div\"} className=\"user-detail\">\n                    <img height=\"50%\" width=\"100%\" src={user.avatar} alt={user.username}/>\n                     \n                        <Link to={`/users/${user.id}`} style={{ textDecoration: 'none' }}>\n                            <Typography variant={\"h3\"}>{user.username}</Typography>\n                        </Link>\n                    \n                    \n\n                    {!currentUser ? \n                    null  \n                    : currentUser.id === userGame.user.id ? \n                    <div>\n                        <EditUserGameDetail userGame={userGame} setUserGame={setUserGame}/>\n                    </div>\n                    :\n                    <div className=\"modal-button\">\n                        {/* Needs to be logged in to open this modal , or needs to open login modal if clicked on */}\n                        <Button onClick={openModal}>Let's Game</Button>\n                    </div>}\n            </Grid>\n            \n            <Modal\n                isOpen={modalIsOpen}\n                onAfterOpen={afterOpenModal}\n                onRequestClose={closeModal}\n                // style={customStyles}\n                contentLabel=\"Example Modal\"\n                >\n\n                <PlaySessionForm closeModal={closeModal} currentUser={currentUser} userGame={userGame} />\n            </Modal>\n        </Grid>\n    )\n}\n\nexport default UserGameDetail\n","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/PlaySessionForm.js",[],"/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/ReviewForm.js",[],"/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/EditUserInfo.js",[],"/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/components/EditUserGameDetail.js",["100"],"import React, { useState } from 'react'\n\nfunction EditUserGameDetail({ userGame, setUserGame }) {\n    const [details, setDetails] = useState(userGame.details)\n    const [platform, setPlatform] = useState(userGame.platform)\n    const [level, setLevel] = useState(userGame.level)\n    const [server, setServer] = useState(userGame.server)\n    const [image, setImage] = useState(userGame.image)\n\n    function handleSubmit(event) {\n        event.preventDefault()\n    \n        const newGameInfo = {\n            details: details,\n            platform: platform,\n            level: level,\n            server: server,\n            image: image\n        }\n\n        fetch(`${process.env.REACT_APP_API_BASE_URL}/user_games/${userGame.id}`, {\n            method: 'PATCH',\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(newGameInfo)\n        })\n        .then(resp => resp.json())\n        .then(newUserGameObj => {\n            console.log(newUserGameObj)\n            setUserGame(newUserGameObj)\n        })\n    }\n\n    return (\n        <div>\n            <form onSubmit={handleSubmit}>\n                <h1>Edit Game Info</h1>\n\n                <label htmlFor=\"image\">Game Image</label>\n                <input\n                    type=\"text\"\n                    id=\"image\"\n                    autoComplete=\"off\"\n                    value={image}\n                    onChange={(e) => setImage(e.target.value)}\n                />\n                <img height=\"100px\"\n                    src={\n                    image\n                        ? image\n                        : \"Set an Image\"\n                    }\n                    alt=\"Set a game image\"\n                />\n\n                <label htmlFor=\"platform\">Platform</label>\n                <input type=\"text\" value={platform} onChange={(e) => setPlatform(e.target.value)}/>\n\n                <label htmlFor=\"level\">Level</label>\n                <input type=\"text\" value={level} onChange={(e) => setLevel(e.target.value)}/>\n\n                <label htmlFor=\"server\">Server</label>\n                <input type=\"text\" value={server} onChange={(e) => setServer(e.target.value)}/>\n\n                <label htmlFor=\"details\">Intro</label>\n                <textarea id=\"details\" value={details} onChange={(e) => setDetails(e.target.value)} />\n\n                <input type=\"submit\" value=\"Update\" />\n            </form>\n        </div>\n    )\n}\n\nexport default EditUserGameDetail\n","/Users/jeremyarmah/Flatiron/code/Mod5/phase5-project/react-lfg/src/theme.js",["101","102"],"import { createMuiTheme } from '@material-ui/core/styles';\nimport purple from '@material-ui/core/colors/purple';\nimport green from '@material-ui/core/colors/green';\n\nconst theme = createMuiTheme({\n  palette: {\n    type: \"dark\"\n  },\n});\n\nexport default theme",["103","104"],{"ruleId":"105","severity":1,"message":"106","line":10,"column":8,"nodeType":"107","messageId":"108","endLine":10,"endColumn":13},{"ruleId":"105","severity":1,"message":"109","line":15,"column":10,"nodeType":"107","messageId":"108","endLine":15,"endColumn":18},{"ruleId":"105","severity":1,"message":"110","line":15,"column":20,"nodeType":"107","messageId":"108","endLine":15,"endColumn":31},{"ruleId":"105","severity":1,"message":"111","line":20,"column":9,"nodeType":"107","messageId":"108","endLine":20,"endColumn":17},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"105","severity":1,"message":"116","line":8,"column":12,"nodeType":"107","messageId":"108","endLine":8,"endColumn":18},{"ruleId":"117","severity":1,"message":"118","line":31,"column":8,"nodeType":"119","endLine":31,"endColumn":10,"suggestions":"120"},{"ruleId":"105","severity":1,"message":"121","line":4,"column":8,"nodeType":"107","messageId":"108","endLine":4,"endColumn":19},{"ruleId":"105","severity":1,"message":"122","line":6,"column":10,"nodeType":"107","messageId":"108","endLine":6,"endColumn":20},{"ruleId":"105","severity":1,"message":"123","line":7,"column":21,"nodeType":"107","messageId":"108","endLine":7,"endColumn":27},{"ruleId":"105","severity":1,"message":"124","line":12,"column":12,"nodeType":"107","messageId":"108","endLine":12,"endColumn":14},{"ruleId":"105","severity":1,"message":"125","line":12,"column":34,"nodeType":"107","messageId":"108","endLine":12,"endColumn":38},{"ruleId":"105","severity":1,"message":"126","line":4,"column":10,"nodeType":"107","messageId":"108","endLine":4,"endColumn":23},{"ruleId":"105","severity":1,"message":"127","line":6,"column":7,"nodeType":"107","messageId":"108","endLine":6,"endColumn":16},{"ruleId":"105","severity":1,"message":"121","line":4,"column":8,"nodeType":"107","messageId":"108","endLine":4,"endColumn":19},{"ruleId":"105","severity":1,"message":"128","line":5,"column":8,"nodeType":"107","messageId":"108","endLine":5,"endColumn":19},{"ruleId":"105","severity":1,"message":"122","line":6,"column":10,"nodeType":"107","messageId":"108","endLine":6,"endColumn":20},{"ruleId":"105","severity":1,"message":"129","line":7,"column":9,"nodeType":"107","messageId":"108","endLine":7,"endColumn":19},{"ruleId":"105","severity":1,"message":"123","line":7,"column":21,"nodeType":"107","messageId":"108","endLine":7,"endColumn":27},{"ruleId":"105","severity":1,"message":"130","line":14,"column":14,"nodeType":"107","messageId":"108","endLine":14,"endColumn":25},{"ruleId":"105","severity":1,"message":"123","line":6,"column":28,"nodeType":"107","messageId":"108","endLine":6,"endColumn":34},{"ruleId":"105","severity":1,"message":"131","line":9,"column":8,"nodeType":"107","messageId":"108","endLine":9,"endColumn":22},{"ruleId":"105","severity":1,"message":"121","line":10,"column":8,"nodeType":"107","messageId":"108","endLine":10,"endColumn":19},{"ruleId":"105","severity":1,"message":"132","line":7,"column":18,"nodeType":"107","messageId":"108","endLine":7,"endColumn":25},{"ruleId":"105","severity":1,"message":"130","line":20,"column":14,"nodeType":"107","messageId":"108","endLine":20,"endColumn":25},{"ruleId":"133","severity":1,"message":"134","line":48,"column":17,"nodeType":"135","endLine":55,"endColumn":19},{"ruleId":"105","severity":1,"message":"136","line":2,"column":8,"nodeType":"107","messageId":"108","endLine":2,"endColumn":14},{"ruleId":"105","severity":1,"message":"137","line":3,"column":8,"nodeType":"107","messageId":"108","endLine":3,"endColumn":13},{"ruleId":"112","replacedBy":"138"},{"ruleId":"114","replacedBy":"139"},"no-unused-vars","'Paper' is defined but never used.","Identifier","unusedVar","'isLoaded' is assigned a value but never used.","'setIsLoaded' is assigned a value but never used.","'location' is assigned a value but never used.","no-native-reassign",["140"],"no-negated-in-lhs",["141"],"'errors' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'params.id'. Either include it or remove the dependency array.","ArrayExpression",["142"],"'CardActions' is defined but never used.","'makeStyles' is defined but never used.","'Button' is defined but never used.","'id' is assigned a value but never used.","'name' is assigned a value but never used.","'ThemeProvider' is defined but never used.","'useStyles' is assigned a value but never used.","'CardContent' is defined but never used.","'Typography' is defined but never used.","'handleClick' is defined but never used.","'CardActionArea' is defined but never used.","'matLink' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'purple' is defined but never used.","'green' is defined but never used.",["140"],["141"],"no-global-assign","no-unsafe-negation",{"desc":"143","fix":"144"},"Update the dependencies array to be: [params.id]",{"range":"145","text":"146"},[1044,1046],"[params.id]"]